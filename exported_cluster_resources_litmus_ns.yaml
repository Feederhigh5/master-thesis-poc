apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 0ea304fcc39debd1bdb9022762f120755748a2a48ff7d3a3fc0ea9dcfbf3d62c
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: bank-of-anthos-network-loss-148648290
      workflows.argoproj.io/node-name: bank-of-anthos-network-loss[1].install-chaos-experiments
    creationTimestamp: "2023-03-27T13:35:30Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: bank-of-anthos-network-loss
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T13:36:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.159"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T13:36:17Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"cf86833d-f13c-411e-8f60-8f6ababa0dab"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T13:36:23Z"
    name: bank-of-anthos-network-loss-148648290
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: bank-of-anthos-network-loss
      uid: cf86833d-f13c-411e-8f60-8f6ababa0dab
    resourceVersion: "1578758"
    uid: 7b90ebcd-7427-4d86-bd58-83ad4b17c6a6
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: bank-of-anthos-network-loss
      - name: ARGO_WORKFLOW_UID
        value: cf86833d-f13c-411e-8f60-8f6ababa0dab
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-network-loss-148648290
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gn25q
        readOnly: true
    - args:
      - kubectl apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
        -n litmus ; sleep 30
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-network-loss-148648290
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gn25q
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-gn25q
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:35:31Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:36:13Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:36:13Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:35:30Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c876640c97bc591eb46f4ea093497e313ca32c7acb6c067e53b2ac92ecf42ee3
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://c876640c97bc591eb46f4ea093497e313ca32c7acb6c067e53b2ac92ecf42ee3
          exitCode: 0
          finishedAt: "2023-03-27T13:36:12Z"
          reason: Completed
          startedAt: "2023-03-27T13:35:37Z"
    - containerID: containerd://47b1fa5a0b3279cca086bdd688e21ed12b01492256d4183ddcb356f8ad2e7d66
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://47b1fa5a0b3279cca086bdd688e21ed12b01492256d4183ddcb356f8ad2e7d66
          exitCode: 0
          finishedAt: "2023-03-27T13:36:13Z"
          reason: Completed
          startedAt: "2023-03-27T13:35:35Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.159
    podIPs:
    - ip: 172.30.188.159
    qosClass: BestEffort
    startTime: "2023-03-27T13:35:31Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: b3eb2f3d73ee4e2450674556b48dd4b7d8e7f4849540996e77f3ef3bc90a931c
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: bank-of-anthos-network-loss-3115581310
      workflows.argoproj.io/node-name: bank-of-anthos-network-loss[2].pod-network-loss
    creationTimestamp: "2023-03-27T13:36:23Z"
    labels:
      weight: "10"
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: bank-of-anthos-network-loss
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T13:37:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.164"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T13:37:36Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:weight: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"cf86833d-f13c-411e-8f60-8f6ababa0dab"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/tmp/chaosengine.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/mainctrfs/tmp/chaosengine.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/inputs/artifacts"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"input-artifacts"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T13:37:42Z"
    name: bank-of-anthos-network-loss-3115581310
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: bank-of-anthos-network-loss
      uid: cf86833d-f13c-411e-8f60-8f6ababa0dab
    resourceVersion: "1579010"
    uid: ba4fe1ba-d3b5-42b5-8a86-81972a98e5e7
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: bank-of-anthos-network-loss
      - name: ARGO_WORKFLOW_UID
        value: cf86833d-f13c-411e-8f60-8f6ababa0dab
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"cf86833d-f13c-411e-8f60-8f6ababa0dab\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name in (balancereader,transactionhistory)\n    appkind:
          \"deployment\"\n  jobCleanUpPolicy: retain\n  engineState: \"active\"\n  chaosServiceAccount:
          litmus-admin\n  components:\n    runner:\n      imagePullPolicy: Always\n  experiments:\n    -
          name: pod-network-loss\n      spec:\n        probe:\n          - name: check-frontend-access-url\n            type:
          httpProbe\n            httpProbe/inputs:\n              url: http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          2\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-network-loss-3115581310
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /mainctrfs/tmp/chaosengine.yaml
        name: input-artifacts
        subPath: pod-network-loss
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r6j77
        readOnly: true
    - args:
      - -file=/tmp/chaosengine.yaml
      - -saveName=/tmp/engine-name
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"cf86833d-f13c-411e-8f60-8f6ababa0dab\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name in (balancereader,transactionhistory)\n    appkind:
          \"deployment\"\n  jobCleanUpPolicy: retain\n  engineState: \"active\"\n  chaosServiceAccount:
          litmus-admin\n  components:\n    runner:\n      imagePullPolicy: Always\n  experiments:\n    -
          name: pod-network-loss\n      spec:\n        probe:\n          - name: check-frontend-access-url\n            type:
          httpProbe\n            httpProbe/inputs:\n              url: http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          2\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-network-loss-3115581310
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-checker:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/chaosengine.yaml
        name: input-artifacts
        subPath: pod-network-loss
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r6j77
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: bank-of-anthos-network-loss
      - name: ARGO_WORKFLOW_UID
        value: cf86833d-f13c-411e-8f60-8f6ababa0dab
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"cf86833d-f13c-411e-8f60-8f6ababa0dab\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name in (balancereader,transactionhistory)\n    appkind:
          \"deployment\"\n  jobCleanUpPolicy: retain\n  engineState: \"active\"\n  chaosServiceAccount:
          litmus-admin\n  components:\n    runner:\n      imagePullPolicy: Always\n  experiments:\n    -
          name: pod-network-loss\n      spec:\n        probe:\n          - name: check-frontend-access-url\n            type:
          httpProbe\n            httpProbe/inputs:\n              url: http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          2\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-network-loss-3115581310
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/inputs/artifacts
        name: input-artifacts
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r6j77
        readOnly: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: input-artifacts
    - name: kube-api-access-r6j77
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:36:27Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:37:31Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:37:31Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:36:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://916c26ccb319b19e76c36d3a73ae2148ae899dd0eaebd5740b76051f4b13a716
      image: docker.io/litmuschaos/litmus-checker:latest
      imageID: docker.io/litmuschaos/litmus-checker@sha256:7f0790b7e3740039378b9a3c604b20214a573c62c3961ab9e66bf35efed3acb1
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://916c26ccb319b19e76c36d3a73ae2148ae899dd0eaebd5740b76051f4b13a716
          exitCode: 0
          finishedAt: "2023-03-27T13:37:30Z"
          reason: Completed
          startedAt: "2023-03-27T13:36:30Z"
    - containerID: containerd://2029808bfdf56b584db96c094cfd202f69055e8afeb0af9a9f89459ef29e0064
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://2029808bfdf56b584db96c094cfd202f69055e8afeb0af9a9f89459ef29e0064
          exitCode: 0
          finishedAt: "2023-03-27T13:37:31Z"
          reason: Completed
          startedAt: "2023-03-27T13:36:28Z"
    hostIP: 10.85.149.8
    initContainerStatuses:
    - containerID: containerd://f626f281113abd868853fa1e212f96aaad99943ee2e5543a140ee8d50a8e3619
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://f626f281113abd868853fa1e212f96aaad99943ee2e5543a140ee8d50a8e3619
          exitCode: 0
          finishedAt: "2023-03-27T13:36:26Z"
          reason: Completed
          startedAt: "2023-03-27T13:36:26Z"
    phase: Succeeded
    podIP: 172.30.188.164
    podIPs:
    - ip: 172.30.188.164
    qosClass: BestEffort
    startTime: "2023-03-27T13:36:23Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 9ca01655f55d2a58a571f39ca49bc9b37be6c35db913fcded183753930abe856
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: bank-of-anthos-network-loss-4035225182
      workflows.argoproj.io/node-name: bank-of-anthos-network-loss[3].revert-chaos
    creationTimestamp: "2023-03-27T13:37:41Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: bank-of-anthos-network-loss
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T13:37:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.158"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T13:37:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"cf86833d-f13c-411e-8f60-8f6ababa0dab"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T13:37:52Z"
    name: bank-of-anthos-network-loss-4035225182
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: bank-of-anthos-network-loss
      uid: cf86833d-f13c-411e-8f60-8f6ababa0dab
    resourceVersion: "1579058"
    uid: 8daecab0-f2da-40e3-8835-eecba97bebc1
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: bank-of-anthos-network-loss
      - name: ARGO_WORKFLOW_UID
        value: cf86833d-f13c-411e-8f60-8f6ababa0dab
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"revert-chaos","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          delete chaosengine pod-network-loss-chaos -n litmus"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-network-loss-4035225182
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9hpjf
        readOnly: true
    - args:
      - kubectl delete chaosengine pod-network-loss-chaos -n litmus
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"revert-chaos","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          delete chaosengine pod-network-loss-chaos -n litmus"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-network-loss-4035225182
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9hpjf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-9hpjf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:37:41Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:37:47Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:37:47Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:37:41Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e82daf7dd1cc50f505cd538cc1031e210591def9933238a061386fd622ae4719
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://e82daf7dd1cc50f505cd538cc1031e210591def9933238a061386fd622ae4719
          exitCode: 1
          finishedAt: "2023-03-27T13:37:46Z"
          reason: Error
          startedAt: "2023-03-27T13:37:45Z"
    - containerID: containerd://7124d30c69f15e9b8950e4a9c484e7160f0fc34012517d2fc4f4d60f0c68bd38
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://7124d30c69f15e9b8950e4a9c484e7160f0fc34012517d2fc4f4d60f0c68bd38
          exitCode: 0
          finishedAt: "2023-03-27T13:37:47Z"
          reason: Completed
          startedAt: "2023-03-27T13:37:44Z"
    hostIP: 10.85.149.8
    phase: Failed
    podIP: 172.30.188.158
    podIPs:
    - ip: 172.30.188.158
    qosClass: BestEffort
    startTime: "2023-03-27T13:37:41Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: b58b7d9bb48ad3df7ad9e32fd2471734febd643c317105f6bb6b87554481fde1
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: bank-of-anthos-network-loss-4048212952
      workflows.argoproj.io/node-name: bank-of-anthos-network-loss[0].install-application
    creationTimestamp: "2023-03-27T13:34:37Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: bank-of-anthos-network-loss
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T13:35:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.153"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T13:35:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"cf86833d-f13c-411e-8f60-8f6ababa0dab"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T13:35:31Z"
    name: bank-of-anthos-network-loss-4048212952
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: bank-of-anthos-network-loss
      uid: cf86833d-f13c-411e-8f60-8f6ababa0dab
    resourceVersion: "1578629"
    uid: 6668dcf5-e55c-41fc-867c-7cccae23dd42
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: bank-of-anthos-network-loss
      - name: ARGO_WORKFLOW_UID
        value: cf86833d-f13c-411e-8f60-8f6ababa0dab
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-network-loss-4048212952
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5qrgw
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=apply
      - -timeout=400
      - -app=bank-of-anthos
      - -scope=cluster
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-network-loss-4048212952
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5qrgw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-5qrgw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:34:37Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:35:20Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:35:20Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:34:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://febc3a0617d46d1df06f20b516dfb18c066f1bcd3ae8e4b9d21168f7c7a2f619
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://febc3a0617d46d1df06f20b516dfb18c066f1bcd3ae8e4b9d21168f7c7a2f619
          exitCode: 0
          finishedAt: "2023-03-27T13:35:20Z"
          reason: Completed
          startedAt: "2023-03-27T13:34:40Z"
    - containerID: containerd://3487854a6ca16cdce9fe0567c13708a99f7cae554da668d761b4d6d43bfd941b
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://3487854a6ca16cdce9fe0567c13708a99f7cae554da668d761b4d6d43bfd941b
          exitCode: 0
          finishedAt: "2023-03-27T13:35:20Z"
          reason: Completed
          startedAt: "2023-03-27T13:34:39Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.153
    podIPs:
    - ip: 172.30.188.153
    qosClass: BestEffort
    startTime: "2023-03-27T13:34:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 74d1a2f64b6b8c8619b70637c082e2e5406ef8f21712883ea9b9b8b25cb10480
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: bank-of-anthos-single-pod-1145947618
      workflows.argoproj.io/node-name: bank-of-anthos-single-pod[2].pod-network-loss
    creationTimestamp: "2023-03-27T15:32:32Z"
    labels:
      weight: "10"
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: bank-of-anthos-single-pod
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T15:33:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.73"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T15:33:44Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:weight: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"01b896da-3022-482a-9ac4-e83215ae5813"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/tmp/chaosengine.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/mainctrfs/tmp/chaosengine.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/inputs/artifacts"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"input-artifacts"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T15:33:50Z"
    name: bank-of-anthos-single-pod-1145947618
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: bank-of-anthos-single-pod
      uid: 01b896da-3022-482a-9ac4-e83215ae5813
    resourceVersion: "1592727"
    uid: 0288aeba-2d1a-4d65-a8cd-508249307cd3
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: bank-of-anthos-single-pod
      - name: ARGO_WORKFLOW_UID
        value: 01b896da-3022-482a-9ac4-e83215ae5813
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"01b896da-3022-482a-9ac4-e83215ae5813\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name=balancereader\n    appkind: \"deployment\"\n  jobCleanUpPolicy:
          retain\n  engineState: \"active\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n      imagePullPolicy:
          Always\n  experiments:\n    - name: pod-network-loss\n      spec:\n        probe:\n          -
          name: check-frontend-access-url\n            type: httpProbe\n            httpProbe/inputs:\n              url:
          http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          2\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-single-pod-1145947618
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /mainctrfs/tmp/chaosengine.yaml
        name: input-artifacts
        subPath: pod-network-loss
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dv6x7
        readOnly: true
    - args:
      - -file=/tmp/chaosengine.yaml
      - -saveName=/tmp/engine-name
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"01b896da-3022-482a-9ac4-e83215ae5813\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name=balancereader\n    appkind: \"deployment\"\n  jobCleanUpPolicy:
          retain\n  engineState: \"active\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n      imagePullPolicy:
          Always\n  experiments:\n    - name: pod-network-loss\n      spec:\n        probe:\n          -
          name: check-frontend-access-url\n            type: httpProbe\n            httpProbe/inputs:\n              url:
          http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          2\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-single-pod-1145947618
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-checker:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/chaosengine.yaml
        name: input-artifacts
        subPath: pod-network-loss
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dv6x7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: bank-of-anthos-single-pod
      - name: ARGO_WORKFLOW_UID
        value: 01b896da-3022-482a-9ac4-e83215ae5813
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"01b896da-3022-482a-9ac4-e83215ae5813\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name=balancereader\n    appkind: \"deployment\"\n  jobCleanUpPolicy:
          retain\n  engineState: \"active\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n      imagePullPolicy:
          Always\n  experiments:\n    - name: pod-network-loss\n      spec:\n        probe:\n          -
          name: check-frontend-access-url\n            type: httpProbe\n            httpProbe/inputs:\n              url:
          http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          2\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-single-pod-1145947618
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/inputs/artifacts
        name: input-artifacts
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dv6x7
        readOnly: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: input-artifacts
    - name: kube-api-access-dv6x7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:32:36Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:33:40Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:33:40Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:32:32Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0ad3c927351a3a28c95f799b427b52cb504003c8e1a8f30a66315cf4d21807b7
      image: docker.io/litmuschaos/litmus-checker:latest
      imageID: docker.io/litmuschaos/litmus-checker@sha256:7f0790b7e3740039378b9a3c604b20214a573c62c3961ab9e66bf35efed3acb1
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://0ad3c927351a3a28c95f799b427b52cb504003c8e1a8f30a66315cf4d21807b7
          exitCode: 0
          finishedAt: "2023-03-27T15:33:39Z"
          reason: Completed
          startedAt: "2023-03-27T15:32:38Z"
    - containerID: containerd://1453809d2736591e8ba90d4814b2aecf131d56628484620edcbcb508142f9ad6
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://1453809d2736591e8ba90d4814b2aecf131d56628484620edcbcb508142f9ad6
          exitCode: 0
          finishedAt: "2023-03-27T15:33:40Z"
          reason: Completed
          startedAt: "2023-03-27T15:32:37Z"
    hostIP: 10.85.149.20
    initContainerStatuses:
    - containerID: containerd://828566e711afa299f00cb9708b0587a208181491ece3579ccdd214cc115c7481
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://828566e711afa299f00cb9708b0587a208181491ece3579ccdd214cc115c7481
          exitCode: 0
          finishedAt: "2023-03-27T15:32:36Z"
          reason: Completed
          startedAt: "2023-03-27T15:32:35Z"
    phase: Succeeded
    podIP: 172.30.140.73
    podIPs:
    - ip: 172.30.140.73
    qosClass: BestEffort
    startTime: "2023-03-27T15:32:32Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 403a1ca2d6016873c726d1e188a6c66c6596eaecb764b641ee0f3831b4ce2931
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: bank-of-anthos-single-pod-3128936660
      workflows.argoproj.io/node-name: bank-of-anthos-single-pod[0].install-application
    creationTimestamp: "2023-03-27T15:30:47Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: bank-of-anthos-single-pod
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T15:31:32Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.124"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T15:31:33Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"01b896da-3022-482a-9ac4-e83215ae5813"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T15:31:39Z"
    name: bank-of-anthos-single-pod-3128936660
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: bank-of-anthos-single-pod
      uid: 01b896da-3022-482a-9ac4-e83215ae5813
    resourceVersion: "1592349"
    uid: dfeb362c-3a49-4872-bc67-f2b701169c6e
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: bank-of-anthos-single-pod
      - name: ARGO_WORKFLOW_UID
        value: 01b896da-3022-482a-9ac4-e83215ae5813
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-single-pod-3128936660
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-z2z6g
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=apply
      - -timeout=400
      - -app=bank-of-anthos
      - -scope=cluster
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-single-pod-3128936660
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-z2z6g
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-z2z6g
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:30:47Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:31:29Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:31:29Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:30:47Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3f069162d7439d6ca8d3a74137e156e3fabcdd9b2399eae6d422d4ce4ff694f7
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://3f069162d7439d6ca8d3a74137e156e3fabcdd9b2399eae6d422d4ce4ff694f7
          exitCode: 0
          finishedAt: "2023-03-27T15:31:29Z"
          reason: Completed
          startedAt: "2023-03-27T15:30:50Z"
    - containerID: containerd://bd7638ffac8dd4cc05d1214eac6a976f9e804ca74b4d99c1de586759986b959a
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://bd7638ffac8dd4cc05d1214eac6a976f9e804ca74b4d99c1de586759986b959a
          exitCode: 0
          finishedAt: "2023-03-27T15:31:29Z"
          reason: Completed
          startedAt: "2023-03-27T15:30:49Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.124
    podIPs:
    - ip: 172.30.140.124
    qosClass: BestEffort
    startTime: "2023-03-27T15:30:47Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 47cf6a7d8d1a62ebc05bc35c228293c90d195db01b2f071b74ff7de4f3237665
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: bank-of-anthos-single-pod-3132966408
      workflows.argoproj.io/node-name: bank-of-anthos-single-pod[4].delete-application
    creationTimestamp: "2023-03-27T15:34:11Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: bank-of-anthos-single-pod
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T15:34:28Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.97"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T15:34:29Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"01b896da-3022-482a-9ac4-e83215ae5813"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T15:34:36Z"
    name: bank-of-anthos-single-pod-3132966408
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: bank-of-anthos-single-pod
      uid: 01b896da-3022-482a-9ac4-e83215ae5813
    resourceVersion: "1593038"
    uid: 85b87fc2-f1d6-4c21-930b-0075373111a0
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: bank-of-anthos-single-pod
      - name: ARGO_WORKFLOW_UID
        value: 01b896da-3022-482a-9ac4-e83215ae5813
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-single-pod-3132966408
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zqclb
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=delete
      - -app=bank-of-anthos
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-single-pod-3132966408
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zqclb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-zqclb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:34:11Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:34:26Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:34:26Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:34:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d3ff963209cb8f4da4e63aa780a171702611676a8a052d615ceecb2a1ec54a49
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://d3ff963209cb8f4da4e63aa780a171702611676a8a052d615ceecb2a1ec54a49
          exitCode: 0
          finishedAt: "2023-03-27T15:34:25Z"
          reason: Completed
          startedAt: "2023-03-27T15:34:15Z"
    - containerID: containerd://96e314dba3c80380969dea2f6861ae9a3baa416a97bba94127f22e72e12a7015
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://96e314dba3c80380969dea2f6861ae9a3baa416a97bba94127f22e72e12a7015
          exitCode: 0
          finishedAt: "2023-03-27T15:34:26Z"
          reason: Completed
          startedAt: "2023-03-27T15:34:14Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.97
    podIPs:
    - ip: 172.30.140.97
    qosClass: BestEffort
    startTime: "2023-03-27T15:34:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: f6a09f33f2f2147b86c04b55f3d4e2b4f5b8c84a951d962448e544099c9ee1ac
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: bank-of-anthos-single-pod-436063450
      workflows.argoproj.io/node-name: bank-of-anthos-single-pod[3].revert-chaos
    creationTimestamp: "2023-03-27T15:33:50Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: bank-of-anthos-single-pod
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T15:34:00Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.70"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T15:34:01Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"01b896da-3022-482a-9ac4-e83215ae5813"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T15:34:11Z"
    name: bank-of-anthos-single-pod-436063450
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: bank-of-anthos-single-pod
      uid: 01b896da-3022-482a-9ac4-e83215ae5813
    resourceVersion: "1592805"
    uid: bd29919b-7aa4-43b8-9d47-0a761a4ee6c5
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: bank-of-anthos-single-pod
      - name: ARGO_WORKFLOW_UID
        value: 01b896da-3022-482a-9ac4-e83215ae5813
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"revert-chaos","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          delete chaosengine -l workflow_run_id=01b896da-3022-482a-9ac4-e83215ae5813
          -n litmus"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-single-pod-436063450
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5kws9
        readOnly: true
    - args:
      - kubectl delete chaosengine -l workflow_run_id=01b896da-3022-482a-9ac4-e83215ae5813
        -n litmus
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"revert-chaos","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          delete chaosengine -l workflow_run_id=01b896da-3022-482a-9ac4-e83215ae5813
          -n litmus"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-single-pod-436063450
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5kws9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-5kws9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:33:50Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:33:57Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:33:57Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:33:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://30c86204865405955f93cdc0d29ecc169cc008f78a909c6c9dadc7f1fd130aa2
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://30c86204865405955f93cdc0d29ecc169cc008f78a909c6c9dadc7f1fd130aa2
          exitCode: 0
          finishedAt: "2023-03-27T15:33:57Z"
          reason: Completed
          startedAt: "2023-03-27T15:33:54Z"
    - containerID: containerd://83eefe5ae2ee2222e702a7acb823457b774676257c2807df4d902e18b7a9d321
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://83eefe5ae2ee2222e702a7acb823457b774676257c2807df4d902e18b7a9d321
          exitCode: 0
          finishedAt: "2023-03-27T15:33:57Z"
          reason: Completed
          startedAt: "2023-03-27T15:33:53Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.70
    podIPs:
    - ip: 172.30.140.70
    qosClass: BestEffort
    startTime: "2023-03-27T15:33:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 53c903bedef5441d5f58b732046ae701f2617c3dfdba91221aea3b31296d4f18
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: bank-of-anthos-single-pod-827682798
      workflows.argoproj.io/node-name: bank-of-anthos-single-pod[1].install-chaos-experiments
    creationTimestamp: "2023-03-27T15:31:39Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: bank-of-anthos-single-pod
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T15:32:25Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.111"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T15:32:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"01b896da-3022-482a-9ac4-e83215ae5813"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T15:32:32Z"
    name: bank-of-anthos-single-pod-827682798
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: bank-of-anthos-single-pod
      uid: 01b896da-3022-482a-9ac4-e83215ae5813
    resourceVersion: "1592478"
    uid: d4b3a1e6-df7c-4a32-9b5b-6546dd060d92
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: bank-of-anthos-single-pod
      - name: ARGO_WORKFLOW_UID
        value: 01b896da-3022-482a-9ac4-e83215ae5813
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-single-pod-827682798
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gb2xl
        readOnly: true
    - args:
      - kubectl apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
        -n litmus ; sleep 30
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-single-pod-827682798
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gb2xl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-gb2xl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:31:39Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:32:22Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:32:22Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:31:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0ba015e2b447ad4ea9846167bd094e869b8b2bd97ff32f4eae7343e30a2d7a41
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://0ba015e2b447ad4ea9846167bd094e869b8b2bd97ff32f4eae7343e30a2d7a41
          exitCode: 0
          finishedAt: "2023-03-27T15:32:21Z"
          reason: Completed
          startedAt: "2023-03-27T15:31:46Z"
    - containerID: containerd://be0bda19f2ee1eb619c0a9f115f220b1d20463fdbe6e44ff5df0edbd3dbd439b
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://be0bda19f2ee1eb619c0a9f115f220b1d20463fdbe6e44ff5df0edbd3dbd439b
          exitCode: 0
          finishedAt: "2023-03-27T15:32:22Z"
          reason: Completed
          startedAt: "2023-03-27T15:31:44Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.111
    podIPs:
    - ip: 172.30.140.111
    qosClass: BestEffort
    startTime: "2023-03-27T15:31:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: d1a42862c95c7e1761f8002f0abc4ca05742876e52a5381da33de766c1abc5b8
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: banke-of-anthos-single-pod-timeout-1070337527
      workflows.argoproj.io/node-name: banke-of-anthos-single-pod-timeout[3].revert-chaos
    creationTimestamp: "2023-03-27T15:48:02Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: banke-of-anthos-single-pod-timeout
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T15:48:12Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.135"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T15:48:13Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"0fa84d1b-bd91-41be-93a4-5d1f204ca9c4"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T15:48:22Z"
    name: banke-of-anthos-single-pod-timeout-1070337527
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: banke-of-anthos-single-pod-timeout
      uid: 0fa84d1b-bd91-41be-93a4-5d1f204ca9c4
    resourceVersion: "1595051"
    uid: d71065a3-d348-405c-b2c2-89c052905b21
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: banke-of-anthos-single-pod-timeout
      - name: ARGO_WORKFLOW_UID
        value: 0fa84d1b-bd91-41be-93a4-5d1f204ca9c4
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"revert-chaos","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          delete chaosengine -l workflow_run_id=0fa84d1b-bd91-41be-93a4-5d1f204ca9c4
          -n litmus"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-1070337527
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4qcn6
        readOnly: true
    - args:
      - kubectl delete chaosengine -l workflow_run_id=0fa84d1b-bd91-41be-93a4-5d1f204ca9c4
        -n litmus
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"revert-chaos","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          delete chaosengine -l workflow_run_id=0fa84d1b-bd91-41be-93a4-5d1f204ca9c4
          -n litmus"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-1070337527
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4qcn6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-4qcn6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:48:02Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:48:09Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:48:09Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:48:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7c80255b07acc3d3c13f366aabcca6fad33dcd71c9310792b97b158d87359a66
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://7c80255b07acc3d3c13f366aabcca6fad33dcd71c9310792b97b158d87359a66
          exitCode: 0
          finishedAt: "2023-03-27T15:48:08Z"
          reason: Completed
          startedAt: "2023-03-27T15:48:06Z"
    - containerID: containerd://d8d3161abe760a5c6eec1b956e503c7ac9fbb828c2f29bd459a130be1f9f0d24
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://d8d3161abe760a5c6eec1b956e503c7ac9fbb828c2f29bd459a130be1f9f0d24
          exitCode: 0
          finishedAt: "2023-03-27T15:48:09Z"
          reason: Completed
          startedAt: "2023-03-27T15:48:05Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.135
    podIPs:
    - ip: 172.30.188.135
    qosClass: BestEffort
    startTime: "2023-03-27T15:48:02Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 1a286f95035ec832f23006d515c6c4f48458ed33d8231545641ced237bbad286
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: banke-of-anthos-single-pod-timeout-1679932551-1470952460
      workflows.argoproj.io/node-name: banke-of-anthos-single-pod-timeout-1679932551[0].install-application
    creationTimestamp: "2023-03-27T15:55:51Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: banke-of-anthos-single-pod-timeout-1679932551
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T15:56:39Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.143"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T15:56:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4b5c8897-6652-4dd4-9c3b-c92d4d455333"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T15:56:46Z"
    name: banke-of-anthos-single-pod-timeout-1679932551-1470952460
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: banke-of-anthos-single-pod-timeout-1679932551
      uid: 4b5c8897-6652-4dd4-9c3b-c92d4d455333
    resourceVersion: "1596490"
    uid: 159961e7-de00-41f8-9d53-f33a620cb525
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: banke-of-anthos-single-pod-timeout-1679932551
      - name: ARGO_WORKFLOW_UID
        value: 4b5c8897-6652-4dd4-9c3b-c92d4d455333
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-1679932551-1470952460
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ztcqc
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=apply
      - -timeout=400
      - -app=bank-of-anthos
      - -scope=cluster
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-1679932551-1470952460
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ztcqc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-ztcqc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:55:51Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:56:36Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:56:36Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:55:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8508950544d1f06dcfcdd4a5385e8d20925db58412df2e33c9dc0d18b296ad61
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://8508950544d1f06dcfcdd4a5385e8d20925db58412df2e33c9dc0d18b296ad61
          exitCode: 0
          finishedAt: "2023-03-27T15:56:35Z"
          reason: Completed
          startedAt: "2023-03-27T15:55:55Z"
    - containerID: containerd://8cb5f05ad2e7d8dd028af02440a9c274a018184c676f050e79ce45a835376ea3
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://8cb5f05ad2e7d8dd028af02440a9c274a018184c676f050e79ce45a835376ea3
          exitCode: 0
          finishedAt: "2023-03-27T15:56:36Z"
          reason: Completed
          startedAt: "2023-03-27T15:55:54Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.143
    podIPs:
    - ip: 172.30.188.143
    qosClass: BestEffort
    startTime: "2023-03-27T15:55:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: deb49b635bc77d605fc90cb6910de4b65ff7944b3f40affb4f0b3171620c715f
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: banke-of-anthos-single-pod-timeout-1679932551-2065181042
      workflows.argoproj.io/node-name: banke-of-anthos-single-pod-timeout-1679932551[3].revert-chaos
    creationTimestamp: "2023-03-27T15:58:58Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: banke-of-anthos-single-pod-timeout-1679932551
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T15:59:07Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.175"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T15:59:09Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4b5c8897-6652-4dd4-9c3b-c92d4d455333"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T15:59:19Z"
    name: banke-of-anthos-single-pod-timeout-1679932551-2065181042
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: banke-of-anthos-single-pod-timeout-1679932551
      uid: 4b5c8897-6652-4dd4-9c3b-c92d4d455333
    resourceVersion: "1596940"
    uid: c28a35fe-e7be-4de5-81cd-4e68c760a8c0
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: banke-of-anthos-single-pod-timeout-1679932551
      - name: ARGO_WORKFLOW_UID
        value: 4b5c8897-6652-4dd4-9c3b-c92d4d455333
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"revert-chaos","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          delete chaosengine -l workflow_run_id=4b5c8897-6652-4dd4-9c3b-c92d4d455333
          -n litmus"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-1679932551-2065181042
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2bbwv
        readOnly: true
    - args:
      - kubectl delete chaosengine -l workflow_run_id=4b5c8897-6652-4dd4-9c3b-c92d4d455333
        -n litmus
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"revert-chaos","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          delete chaosengine -l workflow_run_id=4b5c8897-6652-4dd4-9c3b-c92d4d455333
          -n litmus"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-1679932551-2065181042
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2bbwv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-2bbwv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:58:58Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:59:05Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:59:05Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:58:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7338f17943c2b43916911ef16b032f246c79557d0e365aa333e627cb3357a2cf
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://7338f17943c2b43916911ef16b032f246c79557d0e365aa333e627cb3357a2cf
          exitCode: 0
          finishedAt: "2023-03-27T15:59:04Z"
          reason: Completed
          startedAt: "2023-03-27T15:59:01Z"
    - containerID: containerd://0cd8e39f3d9511d5af785cb281f8d889df48e1ec028a1e1ce2b073fd9703eade
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://0cd8e39f3d9511d5af785cb281f8d889df48e1ec028a1e1ce2b073fd9703eade
          exitCode: 0
          finishedAt: "2023-03-27T15:59:05Z"
          reason: Completed
          startedAt: "2023-03-27T15:59:00Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.175
    podIPs:
    - ip: 172.30.188.175
    qosClass: BestEffort
    startTime: "2023-03-27T15:58:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 66d0adbdea124621e074d1e9a1d63a5c3ad50135997db7aab3d0b061dbed156a
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: banke-of-anthos-single-pod-timeout-1679932551-2356304864
      workflows.argoproj.io/node-name: banke-of-anthos-single-pod-timeout-1679932551[4].delete-application
    creationTimestamp: "2023-03-27T15:59:19Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: banke-of-anthos-single-pod-timeout-1679932551
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T15:59:36Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.140"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T15:59:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4b5c8897-6652-4dd4-9c3b-c92d4d455333"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T15:59:43Z"
    name: banke-of-anthos-single-pod-timeout-1679932551-2356304864
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: banke-of-anthos-single-pod-timeout-1679932551
      uid: 4b5c8897-6652-4dd4-9c3b-c92d4d455333
    resourceVersion: "1597171"
    uid: e897db29-7a2a-4bdf-a85e-530d11ec1bfd
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: banke-of-anthos-single-pod-timeout-1679932551
      - name: ARGO_WORKFLOW_UID
        value: 4b5c8897-6652-4dd4-9c3b-c92d4d455333
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-1679932551-2356304864
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2n69g
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=delete
      - -app=bank-of-anthos
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-1679932551-2356304864
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2n69g
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-2n69g
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:59:19Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:59:33Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:59:33Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:59:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ddb6b7458ba832b54c1923cfc63ac1242ddf65a4cacbcef8431e8bcfc7089e3d
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://ddb6b7458ba832b54c1923cfc63ac1242ddf65a4cacbcef8431e8bcfc7089e3d
          exitCode: 0
          finishedAt: "2023-03-27T15:59:32Z"
          reason: Completed
          startedAt: "2023-03-27T15:59:21Z"
    - containerID: containerd://c61acc810c1f8abd83f0f26e1e7bc9372ade99706f45fbe1aaf4a09d82b401c8
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://c61acc810c1f8abd83f0f26e1e7bc9372ade99706f45fbe1aaf4a09d82b401c8
          exitCode: 0
          finishedAt: "2023-03-27T15:59:33Z"
          reason: Completed
          startedAt: "2023-03-27T15:59:20Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.140
    podIPs:
    - ip: 172.30.188.140
    qosClass: BestEffort
    startTime: "2023-03-27T15:59:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: e7d989016b90ebefdea2222bfb0afa690653c4c616a717b2b6952d3d57474e5c
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: banke-of-anthos-single-pod-timeout-1679932551-2481662918
      workflows.argoproj.io/node-name: banke-of-anthos-single-pod-timeout-1679932551[1].install-chaos-experiments
    creationTimestamp: "2023-03-27T15:56:46Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: banke-of-anthos-single-pod-timeout-1679932551
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T15:57:31Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.176"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T15:57:32Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4b5c8897-6652-4dd4-9c3b-c92d4d455333"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T15:57:38Z"
    name: banke-of-anthos-single-pod-timeout-1679932551-2481662918
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: banke-of-anthos-single-pod-timeout-1679932551
      uid: 4b5c8897-6652-4dd4-9c3b-c92d4d455333
    resourceVersion: "1596621"
    uid: 89729682-4c6f-418c-8025-2e97675b2b5c
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: banke-of-anthos-single-pod-timeout-1679932551
      - name: ARGO_WORKFLOW_UID
        value: 4b5c8897-6652-4dd4-9c3b-c92d4d455333
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-1679932551-2481662918
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5jt76
        readOnly: true
    - args:
      - kubectl apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
        -n litmus ; sleep 30
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-1679932551-2481662918
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5jt76
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-5jt76
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:56:46Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:57:28Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:57:28Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:56:46Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d5a72358150fe3e0658bdaed4ae9cb066651bfd9d925ce345dbe4ff5ed4b6e03
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://d5a72358150fe3e0658bdaed4ae9cb066651bfd9d925ce345dbe4ff5ed4b6e03
          exitCode: 0
          finishedAt: "2023-03-27T15:57:27Z"
          reason: Completed
          startedAt: "2023-03-27T15:56:51Z"
    - containerID: containerd://4644e0d7a7bdeadf43ca55dac2196f640e7234bda52bdd732b3c52d5d07ae74d
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://4644e0d7a7bdeadf43ca55dac2196f640e7234bda52bdd732b3c52d5d07ae74d
          exitCode: 0
          finishedAt: "2023-03-27T15:57:28Z"
          reason: Completed
          startedAt: "2023-03-27T15:56:49Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.176
    podIPs:
    - ip: 172.30.188.176
    qosClass: BestEffort
    startTime: "2023-03-27T15:56:46Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: b85cfcfee1c50123cdae5c4e81bdff1ba2b86122b059de57532e05aca6f65a24
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: banke-of-anthos-single-pod-timeout-1679932551-599228106
      workflows.argoproj.io/node-name: banke-of-anthos-single-pod-timeout-1679932551[2].pod-network-loss
    creationTimestamp: "2023-03-27T15:57:38Z"
    labels:
      weight: "10"
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: banke-of-anthos-single-pod-timeout-1679932551
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T15:58:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.130"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T15:58:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:weight: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4b5c8897-6652-4dd4-9c3b-c92d4d455333"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/tmp/chaosengine.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/mainctrfs/tmp/chaosengine.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/inputs/artifacts"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"input-artifacts"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T15:58:59Z"
    name: banke-of-anthos-single-pod-timeout-1679932551-599228106
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: banke-of-anthos-single-pod-timeout-1679932551
      uid: 4b5c8897-6652-4dd4-9c3b-c92d4d455333
    resourceVersion: "1596865"
    uid: d5893b1f-8d8d-4005-9304-e3ebe1e00fb9
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: banke-of-anthos-single-pod-timeout-1679932551
      - name: ARGO_WORKFLOW_UID
        value: 4b5c8897-6652-4dd4-9c3b-c92d4d455333
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"4b5c8897-6652-4dd4-9c3b-c92d4d455333\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name=balancereader\n    appkind: \"deployment\"\n  jobCleanUpPolicy:
          retain\n  engineState: \"active\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n      imagePullPolicy:
          Always\n  experiments:\n    - name: pod-network-loss\n      spec:\n        probe:\n          -
          name: check-frontend-access-url\n            type: httpProbe\n            httpProbe/inputs:\n              url:
          http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          50\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-1679932551-599228106
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /mainctrfs/tmp/chaosengine.yaml
        name: input-artifacts
        subPath: pod-network-loss
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bhj66
        readOnly: true
    - args:
      - -file=/tmp/chaosengine.yaml
      - -saveName=/tmp/engine-name
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"4b5c8897-6652-4dd4-9c3b-c92d4d455333\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name=balancereader\n    appkind: \"deployment\"\n  jobCleanUpPolicy:
          retain\n  engineState: \"active\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n      imagePullPolicy:
          Always\n  experiments:\n    - name: pod-network-loss\n      spec:\n        probe:\n          -
          name: check-frontend-access-url\n            type: httpProbe\n            httpProbe/inputs:\n              url:
          http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          50\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-1679932551-599228106
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-checker:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/chaosengine.yaml
        name: input-artifacts
        subPath: pod-network-loss
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bhj66
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: banke-of-anthos-single-pod-timeout-1679932551
      - name: ARGO_WORKFLOW_UID
        value: 4b5c8897-6652-4dd4-9c3b-c92d4d455333
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"4b5c8897-6652-4dd4-9c3b-c92d4d455333\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name=balancereader\n    appkind: \"deployment\"\n  jobCleanUpPolicy:
          retain\n  engineState: \"active\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n      imagePullPolicy:
          Always\n  experiments:\n    - name: pod-network-loss\n      spec:\n        probe:\n          -
          name: check-frontend-access-url\n            type: httpProbe\n            httpProbe/inputs:\n              url:
          http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          50\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-1679932551-599228106
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/inputs/artifacts
        name: input-artifacts
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bhj66
        readOnly: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: input-artifacts
    - name: kube-api-access-bhj66
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:57:44Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:58:48Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:58:48Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://093d931660c8098cfb0af7b0dcbc6df4db4b2602993bc5f3d2115c97768d5a2a
      image: docker.io/litmuschaos/litmus-checker:latest
      imageID: docker.io/litmuschaos/litmus-checker@sha256:7f0790b7e3740039378b9a3c604b20214a573c62c3961ab9e66bf35efed3acb1
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://093d931660c8098cfb0af7b0dcbc6df4db4b2602993bc5f3d2115c97768d5a2a
          exitCode: 0
          finishedAt: "2023-03-27T15:58:47Z"
          reason: Completed
          startedAt: "2023-03-27T15:57:47Z"
    - containerID: containerd://20f1c397e0b854f0930f184cb4890625fef4bab2b2e9adbecc2f7f4687dd5dd9
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://20f1c397e0b854f0930f184cb4890625fef4bab2b2e9adbecc2f7f4687dd5dd9
          exitCode: 0
          finishedAt: "2023-03-27T15:58:48Z"
          reason: Completed
          startedAt: "2023-03-27T15:57:45Z"
    hostIP: 10.85.149.8
    initContainerStatuses:
    - containerID: containerd://397ce96b45c21d7a4bd6c7bc446e75d6a1d48f8fec375fc498509532ae294621
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://397ce96b45c21d7a4bd6c7bc446e75d6a1d48f8fec375fc498509532ae294621
          exitCode: 0
          finishedAt: "2023-03-27T15:57:43Z"
          reason: Completed
          startedAt: "2023-03-27T15:57:43Z"
    phase: Succeeded
    podIP: 172.30.188.130
    podIPs:
    - ip: 172.30.188.130
    qosClass: BestEffort
    startTime: "2023-03-27T15:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: bf94d2d75fa922619dccb184ba7ee1f85b8df5ae92432d29740bfe31221c3c2b
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: banke-of-anthos-single-pod-timeout-249243407
      workflows.argoproj.io/node-name: banke-of-anthos-single-pod-timeout[2].pod-network-loss
    creationTimestamp: "2023-03-27T15:46:43Z"
    labels:
      weight: "10"
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: banke-of-anthos-single-pod-timeout
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T15:47:55Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.155"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T15:47:56Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:weight: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"0fa84d1b-bd91-41be-93a4-5d1f204ca9c4"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/tmp/chaosengine.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/mainctrfs/tmp/chaosengine.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/inputs/artifacts"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"input-artifacts"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T15:48:02Z"
    name: banke-of-anthos-single-pod-timeout-249243407
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: banke-of-anthos-single-pod-timeout
      uid: 0fa84d1b-bd91-41be-93a4-5d1f204ca9c4
    resourceVersion: "1594973"
    uid: 14b468dd-025c-4a24-8156-d8514a6ed973
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: banke-of-anthos-single-pod-timeout
      - name: ARGO_WORKFLOW_UID
        value: 0fa84d1b-bd91-41be-93a4-5d1f204ca9c4
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"0fa84d1b-bd91-41be-93a4-5d1f204ca9c4\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name=balancereader\n    appkind: \"deployment\"\n  jobCleanUpPolicy:
          retain\n  engineState: \"active\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n      imagePullPolicy:
          Always\n  experiments:\n    - name: pod-network-loss\n      spec:\n        probe:\n          -
          name: check-frontend-access-url\n            type: httpProbe\n            httpProbe/inputs:\n              url:
          http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          50\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-249243407
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /mainctrfs/tmp/chaosengine.yaml
        name: input-artifacts
        subPath: pod-network-loss
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rtgrd
        readOnly: true
    - args:
      - -file=/tmp/chaosengine.yaml
      - -saveName=/tmp/engine-name
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"0fa84d1b-bd91-41be-93a4-5d1f204ca9c4\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name=balancereader\n    appkind: \"deployment\"\n  jobCleanUpPolicy:
          retain\n  engineState: \"active\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n      imagePullPolicy:
          Always\n  experiments:\n    - name: pod-network-loss\n      spec:\n        probe:\n          -
          name: check-frontend-access-url\n            type: httpProbe\n            httpProbe/inputs:\n              url:
          http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          50\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-249243407
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-checker:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/chaosengine.yaml
        name: input-artifacts
        subPath: pod-network-loss
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rtgrd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: banke-of-anthos-single-pod-timeout
      - name: ARGO_WORKFLOW_UID
        value: 0fa84d1b-bd91-41be-93a4-5d1f204ca9c4
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"0fa84d1b-bd91-41be-93a4-5d1f204ca9c4\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name=balancereader\n    appkind: \"deployment\"\n  jobCleanUpPolicy:
          retain\n  engineState: \"active\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n      imagePullPolicy:
          Always\n  experiments:\n    - name: pod-network-loss\n      spec:\n        probe:\n          -
          name: check-frontend-access-url\n            type: httpProbe\n            httpProbe/inputs:\n              url:
          http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          50\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-249243407
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/inputs/artifacts
        name: input-artifacts
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rtgrd
        readOnly: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: input-artifacts
    - name: kube-api-access-rtgrd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:46:48Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:47:52Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:47:52Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:46:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8ad51e3811a14109b899e08c4544661d8d7dae8407f028a46b77f9651f186375
      image: docker.io/litmuschaos/litmus-checker:latest
      imageID: docker.io/litmuschaos/litmus-checker@sha256:7f0790b7e3740039378b9a3c604b20214a573c62c3961ab9e66bf35efed3acb1
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://8ad51e3811a14109b899e08c4544661d8d7dae8407f028a46b77f9651f186375
          exitCode: 0
          finishedAt: "2023-03-27T15:47:51Z"
          reason: Completed
          startedAt: "2023-03-27T15:46:50Z"
    - containerID: containerd://a5d79ca7c869acf0d85bb8a00062bddd67f03ca375c8de749fbfd1b4be306fda
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://a5d79ca7c869acf0d85bb8a00062bddd67f03ca375c8de749fbfd1b4be306fda
          exitCode: 0
          finishedAt: "2023-03-27T15:47:52Z"
          reason: Completed
          startedAt: "2023-03-27T15:46:49Z"
    hostIP: 10.85.149.8
    initContainerStatuses:
    - containerID: containerd://3195a8c81375f8c9bf70a479f8c21044a979f2d7b25eaa9d9a6bfbd75e2bac19
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://3195a8c81375f8c9bf70a479f8c21044a979f2d7b25eaa9d9a6bfbd75e2bac19
          exitCode: 0
          finishedAt: "2023-03-27T15:46:47Z"
          reason: Completed
          startedAt: "2023-03-27T15:46:46Z"
    phase: Succeeded
    podIP: 172.30.188.155
    podIPs:
    - ip: 172.30.188.155
    qosClass: BestEffort
    startTime: "2023-03-27T15:46:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 378aac78752ef1eb34d65a438b9be5208b1a6a8a96074313b98b478c3e5afef5
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: banke-of-anthos-single-pod-timeout-2999621295
      workflows.argoproj.io/node-name: banke-of-anthos-single-pod-timeout[0].install-application
    creationTimestamp: "2023-03-27T15:44:57Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: banke-of-anthos-single-pod-timeout
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T15:45:43Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.182"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T15:45:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"0fa84d1b-bd91-41be-93a4-5d1f204ca9c4"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T15:45:50Z"
    name: banke-of-anthos-single-pod-timeout-2999621295
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: banke-of-anthos-single-pod-timeout
      uid: 0fa84d1b-bd91-41be-93a4-5d1f204ca9c4
    resourceVersion: "1594591"
    uid: da4c960b-b270-412b-bf3b-53d495367537
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: banke-of-anthos-single-pod-timeout
      - name: ARGO_WORKFLOW_UID
        value: 0fa84d1b-bd91-41be-93a4-5d1f204ca9c4
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-2999621295
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j2hwv
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=apply
      - -timeout=400
      - -app=bank-of-anthos
      - -scope=cluster
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-2999621295
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j2hwv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-j2hwv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:44:57Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:45:40Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:45:40Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:44:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6530f162bafddae2158858cd3d220656a3fb44d52597a9bbe62a4f700f3fc5ca
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://6530f162bafddae2158858cd3d220656a3fb44d52597a9bbe62a4f700f3fc5ca
          exitCode: 0
          finishedAt: "2023-03-27T15:45:39Z"
          reason: Completed
          startedAt: "2023-03-27T15:45:00Z"
    - containerID: containerd://515b49c88d74c8265b63a16d1715fffc9ae6826473454e699f07a026f79b4851
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://515b49c88d74c8265b63a16d1715fffc9ae6826473454e699f07a026f79b4851
          exitCode: 0
          finishedAt: "2023-03-27T15:45:40Z"
          reason: Completed
          startedAt: "2023-03-27T15:44:59Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.182
    podIPs:
    - ip: 172.30.188.182
    qosClass: BestEffort
    startTime: "2023-03-27T15:44:57Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 287492278e2357d76354f725baa3a6c83b11d397699f93369c17aebcb88cf9f6
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: banke-of-anthos-single-pod-timeout-3305841109
      workflows.argoproj.io/node-name: banke-of-anthos-single-pod-timeout[1].install-chaos-experiments
    creationTimestamp: "2023-03-27T15:45:50Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: banke-of-anthos-single-pod-timeout
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T15:46:36Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.157"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T15:46:38Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"0fa84d1b-bd91-41be-93a4-5d1f204ca9c4"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T15:46:43Z"
    name: banke-of-anthos-single-pod-timeout-3305841109
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: banke-of-anthos-single-pod-timeout
      uid: 0fa84d1b-bd91-41be-93a4-5d1f204ca9c4
    resourceVersion: "1594724"
    uid: 94725606-2568-4883-b9c0-375daa69e958
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: banke-of-anthos-single-pod-timeout
      - name: ARGO_WORKFLOW_UID
        value: 0fa84d1b-bd91-41be-93a4-5d1f204ca9c4
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-3305841109
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lzdfj
        readOnly: true
    - args:
      - kubectl apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
        -n litmus ; sleep 30
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-3305841109
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lzdfj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-lzdfj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:45:50Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:46:32Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:46:32Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:45:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2bd36f258485f4d63ab647054b514d3396d76e91d38fb8b7610ade984092ed64
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://2bd36f258485f4d63ab647054b514d3396d76e91d38fb8b7610ade984092ed64
          exitCode: 0
          finishedAt: "2023-03-27T15:46:31Z"
          reason: Completed
          startedAt: "2023-03-27T15:45:56Z"
    - containerID: containerd://6e49693887929d3f546deb3fe1d540890b9e3d6b4b3c911a96674ae14aefd938
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://6e49693887929d3f546deb3fe1d540890b9e3d6b4b3c911a96674ae14aefd938
          exitCode: 0
          finishedAt: "2023-03-27T15:46:33Z"
          reason: Completed
          startedAt: "2023-03-27T15:45:54Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.157
    podIPs:
    - ip: 172.30.188.157
    qosClass: BestEffort
    startTime: "2023-03-27T15:45:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 4ba039fb95384976ebd2b89ee974eedf607282d01ecb7bde565f7ee02cc7da00
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: banke-of-anthos-single-pod-timeout-56247129
      workflows.argoproj.io/node-name: banke-of-anthos-single-pod-timeout[4].delete-application
    creationTimestamp: "2023-03-27T15:48:22Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: banke-of-anthos-single-pod-timeout
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T15:48:39Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.141"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T15:48:41Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"0fa84d1b-bd91-41be-93a4-5d1f204ca9c4"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T15:48:47Z"
    name: banke-of-anthos-single-pod-timeout-56247129
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: banke-of-anthos-single-pod-timeout
      uid: 0fa84d1b-bd91-41be-93a4-5d1f204ca9c4
    resourceVersion: "1595287"
    uid: 8cf9ae4a-abbf-4707-9b3a-7c1dfc994887
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: banke-of-anthos-single-pod-timeout
      - name: ARGO_WORKFLOW_UID
        value: 0fa84d1b-bd91-41be-93a4-5d1f204ca9c4
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-56247129
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x4mzl
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=delete
      - -app=bank-of-anthos
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-56247129
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x4mzl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-x4mzl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:48:22Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:48:37Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:48:37Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:48:22Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c35093192b3c560d27e1376ff59449acc5d5a917cc541acc11f63cc95efb42b4
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://c35093192b3c560d27e1376ff59449acc5d5a917cc541acc11f63cc95efb42b4
          exitCode: 0
          finishedAt: "2023-03-27T15:48:36Z"
          reason: Completed
          startedAt: "2023-03-27T15:48:26Z"
    - containerID: containerd://2018def5d96cd6222879eb5200e122eee996d461b4d7f21e268a143437f835a7
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://2018def5d96cd6222879eb5200e122eee996d461b4d7f21e268a143437f835a7
          exitCode: 0
          finishedAt: "2023-03-27T15:48:37Z"
          reason: Completed
          startedAt: "2023-03-27T15:48:25Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.141
    podIPs:
    - ip: 172.30.188.141
    qosClass: BestEffort
    startTime: "2023-03-27T15:48:22Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 722ffb2527baf081f8a2dd2ac7f4f4f876957ce2d1a6be570ce82c89c28f154a
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: boa-1122732311
      workflows.argoproj.io/node-name: boa[2].pod-network-loss
    creationTimestamp: "2023-03-27T16:28:50Z"
    labels:
      weight: "10"
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: boa
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T16:30:02Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.123"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T16:30:04Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:weight: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ecb1d143-c845-4757-9a15-56e5f3067ac8"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/tmp/chaosengine.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/mainctrfs/tmp/chaosengine.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/inputs/artifacts"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"input-artifacts"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T16:30:10Z"
    name: boa-1122732311
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: boa
      uid: ecb1d143-c845-4757-9a15-56e5f3067ac8
    resourceVersion: "1601653"
    uid: 570c7e8c-4ccd-44e8-9a6f-3f259558f22f
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: boa
      - name: ARGO_WORKFLOW_UID
        value: ecb1d143-c845-4757-9a15-56e5f3067ac8
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"ecb1d143-c845-4757-9a15-56e5f3067ac8\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name=balancereader\n    appkind: \"deployment\"\n  jobCleanUpPolicy:
          retain\n  engineState: \"active\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n      imagePullPolicy:
          Always\n  experiments:\n    - name: pod-network-loss\n      spec:\n        probe:\n          -
          name: check-frontend-access-url\n            type: httpProbe\n            httpProbe/inputs:\n              url:
          http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          1000\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-1122732311
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /mainctrfs/tmp/chaosengine.yaml
        name: input-artifacts
        subPath: pod-network-loss
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q2dn6
        readOnly: true
    - args:
      - -file=/tmp/chaosengine.yaml
      - -saveName=/tmp/engine-name
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"ecb1d143-c845-4757-9a15-56e5f3067ac8\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name=balancereader\n    appkind: \"deployment\"\n  jobCleanUpPolicy:
          retain\n  engineState: \"active\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n      imagePullPolicy:
          Always\n  experiments:\n    - name: pod-network-loss\n      spec:\n        probe:\n          -
          name: check-frontend-access-url\n            type: httpProbe\n            httpProbe/inputs:\n              url:
          http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          1000\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-1122732311
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-checker:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/chaosengine.yaml
        name: input-artifacts
        subPath: pod-network-loss
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q2dn6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: boa
      - name: ARGO_WORKFLOW_UID
        value: ecb1d143-c845-4757-9a15-56e5f3067ac8
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"ecb1d143-c845-4757-9a15-56e5f3067ac8\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name=balancereader\n    appkind: \"deployment\"\n  jobCleanUpPolicy:
          retain\n  engineState: \"active\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n      imagePullPolicy:
          Always\n  experiments:\n    - name: pod-network-loss\n      spec:\n        probe:\n          -
          name: check-frontend-access-url\n            type: httpProbe\n            httpProbe/inputs:\n              url:
          http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          1000\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-1122732311
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/inputs/artifacts
        name: input-artifacts
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q2dn6
        readOnly: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: input-artifacts
    - name: kube-api-access-q2dn6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:28:55Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:29:59Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:29:59Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:28:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2135dee9c1079ea55aaff02a47d88e07e209879a742e6f9cff08af40bae6f201
      image: docker.io/litmuschaos/litmus-checker:latest
      imageID: docker.io/litmuschaos/litmus-checker@sha256:7f0790b7e3740039378b9a3c604b20214a573c62c3961ab9e66bf35efed3acb1
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://2135dee9c1079ea55aaff02a47d88e07e209879a742e6f9cff08af40bae6f201
          exitCode: 0
          finishedAt: "2023-03-27T16:29:58Z"
          reason: Completed
          startedAt: "2023-03-27T16:28:58Z"
    - containerID: containerd://ad6671cd32be1b7c7c44e8f59e8e1ac3147bc54f5cb90fa82ed86cded96f43a1
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://ad6671cd32be1b7c7c44e8f59e8e1ac3147bc54f5cb90fa82ed86cded96f43a1
          exitCode: 0
          finishedAt: "2023-03-27T16:29:59Z"
          reason: Completed
          startedAt: "2023-03-27T16:28:56Z"
    hostIP: 10.85.149.20
    initContainerStatuses:
    - containerID: containerd://519969fea3a82864632b9bda2b95e3608a7ab6389c4f03a6022c415f28b8a1ee
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://519969fea3a82864632b9bda2b95e3608a7ab6389c4f03a6022c415f28b8a1ee
          exitCode: 0
          finishedAt: "2023-03-27T16:28:54Z"
          reason: Completed
          startedAt: "2023-03-27T16:28:54Z"
    phase: Succeeded
    podIP: 172.30.140.123
    podIPs:
    - ip: 172.30.140.123
    qosClass: BestEffort
    startTime: "2023-03-27T16:28:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 2ff814704b459881df20e550dac3aa2e7622a6600b77ffbd7642d850fc8d4a9c
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: boa-2393994951
      workflows.argoproj.io/node-name: boa[0].install-application
    creationTimestamp: "2023-03-27T16:27:06Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: boa
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T16:27:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.116"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T16:27:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ecb1d143-c845-4757-9a15-56e5f3067ac8"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T16:27:58Z"
    name: boa-2393994951
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: boa
      uid: ecb1d143-c845-4757-9a15-56e5f3067ac8
    resourceVersion: "1601286"
    uid: b6c5e2aa-09e0-4cfb-a1cc-afb3728d0eb1
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: boa
      - name: ARGO_WORKFLOW_UID
        value: ecb1d143-c845-4757-9a15-56e5f3067ac8
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-2393994951
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b6zdm
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=apply
      - -timeout=400
      - -app=bank-of-anthos
      - -scope=cluster
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-2393994951
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b6zdm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-b6zdm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:27:06Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:27:48Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:27:48Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:27:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c72f51738cee9674e238f072a32ace4b36a6c96e3c282c042fab1f01fccd5a4f
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://c72f51738cee9674e238f072a32ace4b36a6c96e3c282c042fab1f01fccd5a4f
          exitCode: 0
          finishedAt: "2023-03-27T16:27:47Z"
          reason: Completed
          startedAt: "2023-03-27T16:27:09Z"
    - containerID: containerd://3a32a7a7a5dfcf5a7ddb823968ff831bfce90953060656782dbbfd033635217f
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://3a32a7a7a5dfcf5a7ddb823968ff831bfce90953060656782dbbfd033635217f
          exitCode: 0
          finishedAt: "2023-03-27T16:27:48Z"
          reason: Completed
          startedAt: "2023-03-27T16:27:08Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.116
    podIPs:
    - ip: 172.30.140.116
    qosClass: BestEffort
    startTime: "2023-03-27T16:27:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: fc5fd9f63530240546101c1ce7a1197bfd47d45ecac24e9da6901080da0f5337
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: boa-357267821
      workflows.argoproj.io/node-name: boa[1].install-chaos-experiments
    creationTimestamp: "2023-03-27T16:27:58Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: boa
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T16:28:43Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.115"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T16:28:44Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ecb1d143-c845-4757-9a15-56e5f3067ac8"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T16:28:50Z"
    name: boa-357267821
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: boa
      uid: ecb1d143-c845-4757-9a15-56e5f3067ac8
    resourceVersion: "1601408"
    uid: 462ff67e-3910-4b2d-a70e-12faa981205b
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: boa
      - name: ARGO_WORKFLOW_UID
        value: ecb1d143-c845-4757-9a15-56e5f3067ac8
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-357267821
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b6685
        readOnly: true
    - args:
      - kubectl apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
        -n litmus ; sleep 30
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-357267821
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b6685
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-b6685
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:27:58Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:28:40Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:28:40Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:27:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a87262ec4d070f0ad7322ee1d2bc3b1cb9b61fdaa545b5cd1f8f98c70f4e5c77
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://a87262ec4d070f0ad7322ee1d2bc3b1cb9b61fdaa545b5cd1f8f98c70f4e5c77
          exitCode: 0
          finishedAt: "2023-03-27T16:28:39Z"
          reason: Completed
          startedAt: "2023-03-27T16:28:04Z"
    - containerID: containerd://c2137e941a9051bca14a6e175e1add85ec07a3bf76af72e68301812d8f75b76d
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://c2137e941a9051bca14a6e175e1add85ec07a3bf76af72e68301812d8f75b76d
          exitCode: 0
          finishedAt: "2023-03-27T16:28:40Z"
          reason: Completed
          startedAt: "2023-03-27T16:28:02Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.115
    podIPs:
    - ip: 172.30.140.115
    qosClass: BestEffort
    startTime: "2023-03-27T16:27:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: d0f1b35039fafb7dfcc1d45b81a7704653aa1c9d1fea149280dd507e85b96310
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: boa-more-timeout-1679933906-143336405
      workflows.argoproj.io/node-name: boa-more-timeout-1679933906[0].install-application
    creationTimestamp: "2023-03-27T16:18:49Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: boa-more-timeout-1679933906
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T16:19:34Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.94"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T16:19:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"56a89df0-c36e-4564-8295-b944a6728452"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T16:19:41Z"
    name: boa-more-timeout-1679933906-143336405
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: boa-more-timeout-1679933906
      uid: 56a89df0-c36e-4564-8295-b944a6728452
    resourceVersion: "1599686"
    uid: c8f7d912-14a0-4ab0-b25e-a64c56b17ab9
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: boa-more-timeout-1679933906
      - name: ARGO_WORKFLOW_UID
        value: 56a89df0-c36e-4564-8295-b944a6728452
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-more-timeout-1679933906-143336405
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nn9hr
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=apply
      - -timeout=400
      - -app=bank-of-anthos
      - -scope=cluster
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-more-timeout-1679933906-143336405
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nn9hr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-nn9hr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:18:49Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:19:31Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:19:31Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:18:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://99d5405fa8e60cfe77769c1f81f4832fafa7f6881782c11bf12dfb99f3354a5c
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://99d5405fa8e60cfe77769c1f81f4832fafa7f6881782c11bf12dfb99f3354a5c
          exitCode: 0
          finishedAt: "2023-03-27T16:19:30Z"
          reason: Completed
          startedAt: "2023-03-27T16:18:52Z"
    - containerID: containerd://a182d08185df84061a41bb5af8e91a0e9054990123d1ea7066ca877ec1ff1ef4
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://a182d08185df84061a41bb5af8e91a0e9054990123d1ea7066ca877ec1ff1ef4
          exitCode: 0
          finishedAt: "2023-03-27T16:19:31Z"
          reason: Completed
          startedAt: "2023-03-27T16:18:51Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.94
    podIPs:
    - ip: 172.30.140.94
    qosClass: BestEffort
    startTime: "2023-03-27T16:18:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: c8190737cc9cdff3b96c5d61965e614f567b946c88543875ce85802908e35b2c
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: boa-more-timeout-1679933906-2132271929
      workflows.argoproj.io/node-name: boa-more-timeout-1679933906[3].revert-chaos
    creationTimestamp: "2023-03-27T16:21:50Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: boa-more-timeout-1679933906
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T16:22:01Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.101"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T16:22:02Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"56a89df0-c36e-4564-8295-b944a6728452"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T16:22:11Z"
    name: boa-more-timeout-1679933906-2132271929
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: boa-more-timeout-1679933906
      uid: 56a89df0-c36e-4564-8295-b944a6728452
    resourceVersion: "1600134"
    uid: 396e601c-4ddc-40e7-bfe5-47fe4f5cc451
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: boa-more-timeout-1679933906
      - name: ARGO_WORKFLOW_UID
        value: 56a89df0-c36e-4564-8295-b944a6728452
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"revert-chaos","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          delete chaosengine -l workflow_run_id=56a89df0-c36e-4564-8295-b944a6728452
          -n litmus"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-more-timeout-1679933906-2132271929
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4n48l
        readOnly: true
    - args:
      - kubectl delete chaosengine -l workflow_run_id=56a89df0-c36e-4564-8295-b944a6728452
        -n litmus
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"revert-chaos","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          delete chaosengine -l workflow_run_id=56a89df0-c36e-4564-8295-b944a6728452
          -n litmus"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-more-timeout-1679933906-2132271929
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4n48l
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-4n48l
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:21:50Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:21:58Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:21:58Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:21:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://23d87258088d052078d25f750eb33ba336864369612e5d8ea713dcfc382ed99c
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://23d87258088d052078d25f750eb33ba336864369612e5d8ea713dcfc382ed99c
          exitCode: 0
          finishedAt: "2023-03-27T16:21:58Z"
          reason: Completed
          startedAt: "2023-03-27T16:21:54Z"
    - containerID: containerd://2e1920e8bf0e6d9e65fcf0b1fac9ec2a229d6fadcf1e4c42b2cafa4f125c2a4f
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://2e1920e8bf0e6d9e65fcf0b1fac9ec2a229d6fadcf1e4c42b2cafa4f125c2a4f
          exitCode: 0
          finishedAt: "2023-03-27T16:21:58Z"
          reason: Completed
          startedAt: "2023-03-27T16:21:53Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.101
    podIPs:
    - ip: 172.30.140.101
    qosClass: BestEffort
    startTime: "2023-03-27T16:21:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 0c65e5409a32c8813fb932a02d9da3444661c80b54054e8f8e2040a012f50b3e
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: boa-more-timeout-1679933906-3445612413
      workflows.argoproj.io/node-name: boa-more-timeout-1679933906[2].pod-network-loss
    creationTimestamp: "2023-03-27T16:20:32Z"
    labels:
      weight: "10"
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: boa-more-timeout-1679933906
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T16:21:43Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.96"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T16:21:44Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:weight: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"56a89df0-c36e-4564-8295-b944a6728452"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/tmp/chaosengine.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/mainctrfs/tmp/chaosengine.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/inputs/artifacts"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"input-artifacts"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T16:21:50Z"
    name: boa-more-timeout-1679933906-3445612413
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: boa-more-timeout-1679933906
      uid: 56a89df0-c36e-4564-8295-b944a6728452
    resourceVersion: "1600057"
    uid: 7c8ee72a-904b-4469-ba53-472fe33188d4
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: boa-more-timeout-1679933906
      - name: ARGO_WORKFLOW_UID
        value: 56a89df0-c36e-4564-8295-b944a6728452
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"56a89df0-c36e-4564-8295-b944a6728452\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name=balancereader\n    appkind: \"deployment\"\n  jobCleanUpPolicy:
          retain\n  engineState: \"active\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n      imagePullPolicy:
          Always\n  experiments:\n    - name: pod-network-loss\n      spec:\n        probe:\n          -
          name: check-frontend-access-url\n            type: httpProbe\n            httpProbe/inputs:\n              url:
          http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          1000\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-more-timeout-1679933906-3445612413
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /mainctrfs/tmp/chaosengine.yaml
        name: input-artifacts
        subPath: pod-network-loss
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wlx8w
        readOnly: true
    - args:
      - -file=/tmp/chaosengine.yaml
      - -saveName=/tmp/engine-name
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"56a89df0-c36e-4564-8295-b944a6728452\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name=balancereader\n    appkind: \"deployment\"\n  jobCleanUpPolicy:
          retain\n  engineState: \"active\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n      imagePullPolicy:
          Always\n  experiments:\n    - name: pod-network-loss\n      spec:\n        probe:\n          -
          name: check-frontend-access-url\n            type: httpProbe\n            httpProbe/inputs:\n              url:
          http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          1000\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-more-timeout-1679933906-3445612413
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-checker:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/chaosengine.yaml
        name: input-artifacts
        subPath: pod-network-loss
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wlx8w
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: boa-more-timeout-1679933906
      - name: ARGO_WORKFLOW_UID
        value: 56a89df0-c36e-4564-8295-b944a6728452
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"56a89df0-c36e-4564-8295-b944a6728452\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name=balancereader\n    appkind: \"deployment\"\n  jobCleanUpPolicy:
          retain\n  engineState: \"active\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n      imagePullPolicy:
          Always\n  experiments:\n    - name: pod-network-loss\n      spec:\n        probe:\n          -
          name: check-frontend-access-url\n            type: httpProbe\n            httpProbe/inputs:\n              url:
          http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          1000\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-more-timeout-1679933906-3445612413
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/inputs/artifacts
        name: input-artifacts
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wlx8w
        readOnly: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: input-artifacts
    - name: kube-api-access-wlx8w
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:20:36Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:21:40Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:21:40Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:20:32Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://55ae1251d16585131490b89d9da40bf7c18069197d2bf75801f11260175e2057
      image: docker.io/litmuschaos/litmus-checker:latest
      imageID: docker.io/litmuschaos/litmus-checker@sha256:7f0790b7e3740039378b9a3c604b20214a573c62c3961ab9e66bf35efed3acb1
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://55ae1251d16585131490b89d9da40bf7c18069197d2bf75801f11260175e2057
          exitCode: 0
          finishedAt: "2023-03-27T16:21:39Z"
          reason: Completed
          startedAt: "2023-03-27T16:20:39Z"
    - containerID: containerd://433439cd9b24935637f12226034e5fbd9767def48b48d2c563f5295c8003c4e3
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://433439cd9b24935637f12226034e5fbd9767def48b48d2c563f5295c8003c4e3
          exitCode: 0
          finishedAt: "2023-03-27T16:21:40Z"
          reason: Completed
          startedAt: "2023-03-27T16:20:37Z"
    hostIP: 10.85.149.20
    initContainerStatuses:
    - containerID: containerd://7cf9b14f1379b1b319e5912068bb11001c1c448f82eaefadf5d94799b42fa710
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://7cf9b14f1379b1b319e5912068bb11001c1c448f82eaefadf5d94799b42fa710
          exitCode: 0
          finishedAt: "2023-03-27T16:20:36Z"
          reason: Completed
          startedAt: "2023-03-27T16:20:36Z"
    phase: Succeeded
    podIP: 172.30.140.96
    podIPs:
    - ip: 172.30.140.96
    qosClass: BestEffort
    startTime: "2023-03-27T16:20:32Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 35de54c1b786e36ca1ef268fd3d946a3eb56c2451340b9288ee2d294c1eaffd4
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: boa-more-timeout-1679933906-3688017723
      workflows.argoproj.io/node-name: boa-more-timeout-1679933906[4].delete-application
    creationTimestamp: "2023-03-27T16:22:11Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: boa-more-timeout-1679933906
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T16:22:28Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.113"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T16:22:29Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"56a89df0-c36e-4564-8295-b944a6728452"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T16:22:31Z"
    name: boa-more-timeout-1679933906-3688017723
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: boa-more-timeout-1679933906
      uid: 56a89df0-c36e-4564-8295-b944a6728452
    resourceVersion: "1600362"
    uid: 89e09eb6-357c-46a8-9f4b-5123ba329a5f
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: boa-more-timeout-1679933906
      - name: ARGO_WORKFLOW_UID
        value: 56a89df0-c36e-4564-8295-b944a6728452
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-more-timeout-1679933906-3688017723
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nv5jt
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=delete
      - -app=bank-of-anthos
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-more-timeout-1679933906-3688017723
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nv5jt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-nv5jt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:22:11Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:22:26Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:22:26Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:22:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a8c49bf81da3abce75038826941effba1323a087ea8288984d8cc3d8e5d37670
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://a8c49bf81da3abce75038826941effba1323a087ea8288984d8cc3d8e5d37670
          exitCode: 0
          finishedAt: "2023-03-27T16:22:25Z"
          reason: Completed
          startedAt: "2023-03-27T16:22:15Z"
    - containerID: containerd://e78d076df5e1d9572902132e39635c24701d2066001a5b94783260fa5cd7de4e
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://e78d076df5e1d9572902132e39635c24701d2066001a5b94783260fa5cd7de4e
          exitCode: 0
          finishedAt: "2023-03-27T16:22:26Z"
          reason: Completed
          startedAt: "2023-03-27T16:22:13Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.113
    podIPs:
    - ip: 172.30.140.113
    qosClass: BestEffort
    startTime: "2023-03-27T16:22:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 196429da2d9f27cb40124fc54d04d268db2c6bd883de105ebd1f5e0ed78f37aa
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: boa-more-timeout-1679933906-616366727
      workflows.argoproj.io/node-name: boa-more-timeout-1679933906[1].install-chaos-experiments
    creationTimestamp: "2023-03-27T16:19:41Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: boa-more-timeout-1679933906
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T16:20:25Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.106"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T16:20:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"56a89df0-c36e-4564-8295-b944a6728452"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T16:20:32Z"
    name: boa-more-timeout-1679933906-616366727
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: boa-more-timeout-1679933906
      uid: 56a89df0-c36e-4564-8295-b944a6728452
    resourceVersion: "1599813"
    uid: 596fa06f-a6e9-4a22-bc28-636b6dc4163e
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: boa-more-timeout-1679933906
      - name: ARGO_WORKFLOW_UID
        value: 56a89df0-c36e-4564-8295-b944a6728452
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-more-timeout-1679933906-616366727
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rmbb2
        readOnly: true
    - args:
      - kubectl apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
        -n litmus ; sleep 30
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-more-timeout-1679933906-616366727
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rmbb2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-rmbb2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:19:41Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:20:22Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:20:22Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:19:41Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1dfa936290102046f4121588f3fc593cf9021b45233a6bff4af17cb50591b98f
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://1dfa936290102046f4121588f3fc593cf9021b45233a6bff4af17cb50591b98f
          exitCode: 0
          finishedAt: "2023-03-27T16:20:21Z"
          reason: Completed
          startedAt: "2023-03-27T16:19:46Z"
    - containerID: containerd://50d0247c9caac82bc52f863e148c776bddd5374f55afbcac1ccaa41557f8f859
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://50d0247c9caac82bc52f863e148c776bddd5374f55afbcac1ccaa41557f8f859
          exitCode: 0
          finishedAt: "2023-03-27T16:20:22Z"
          reason: Completed
          startedAt: "2023-03-27T16:19:45Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.106
    podIPs:
    - ip: 172.30.140.106
    qosClass: BestEffort
    startTime: "2023-03-27T16:19:41Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 9c01567289dfb99a37ccaa269275c9ce2c1efe0184be85de36ad712c96d7d547
      cni.projectcalico.org/podIP: 172.30.140.108/32
      cni.projectcalico.org/podIPs: 172.30.140.108/32
    creationTimestamp: "2023-03-23T08:16:49Z"
    generateName: chaos-exporter-6c9b5988c4-
    labels:
      app: chaos-exporter
      pod-template-hash: 6c9b5988c4
      release: prometheus-stack
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
            f:release: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"7f1b8e92-2d8a-465c-8b96-a28912c7b173"}: {}
        f:spec:
          f:containers:
            k:{"name":"chaos-exporter"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"TSDB_SCRAPE_INTERVAL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.108"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:54Z"
    name: chaos-exporter-6c9b5988c4-lndf8
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: chaos-exporter-6c9b5988c4
      uid: 7f1b8e92-2d8a-465c-8b96-a28912c7b173
    resourceVersion: "863021"
    uid: 9f98b4ef-d43b-4504-a708-cf368eb07ea8
  spec:
    containers:
    - env:
      - name: TSDB_SCRAPE_INTERVAL
        value: "10"
      image: litmuschaos/chaos-exporter:2.14.0
      imagePullPolicy: Always
      name: chaos-exporter
      ports:
      - containerPort: 8080
        name: tcp
        protocol: TCP
      resources:
        limits:
          cpu: 225m
          ephemeral-storage: 1Gi
          memory: 500Mi
        requests:
          cpu: 125m
          ephemeral-storage: 500Mi
          memory: 300Mi
      securityContext:
        allowPrivilegeEscalation: false
        runAsUser: 2000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6kmts
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: litmus-cluster-scope
    serviceAccountName: litmus-cluster-scope
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: kube-api-access-6kmts
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:49Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://679080c99d2f49efdd5f407cb0f695960adbe96f7ba1a7ecea51d8af00d94cfc
      image: docker.io/litmuschaos/chaos-exporter:2.14.0
      imageID: docker.io/litmuschaos/chaos-exporter@sha256:ce4bb3ad1415ad8753460d6c02d40af3b5ee5d7f54e19d2b8d5c89863d29fd96
      lastState: {}
      name: chaos-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-23T08:16:53Z"
    hostIP: 10.85.149.20
    phase: Running
    podIP: 172.30.140.108
    podIPs:
    - ip: 172.30.140.108
    qosClass: Burstable
    startTime: "2023-03-23T08:16:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 47f690464b89d1f292494640037eea9c4dbd527ac343aecb5017db1b0cba6b31
      cni.projectcalico.org/podIP: 172.30.188.190/32
      cni.projectcalico.org/podIPs: 172.30.188.190/32
    creationTimestamp: "2023-03-23T08:16:49Z"
    generateName: chaos-litmus-auth-server-b8dcdf66b-
    labels:
      app.kubernetes.io/component: litmus-auth-server
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: litmus
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: 2.15.10
      helm.sh/chart: litmus-2.15.10
      litmuschaos.io/version: 2.14.0
      pod-template-hash: b8dcdf66b
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:litmuschaos.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"dd754b6f-d49e-46e8-9026-2882d2c135b8"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"auth-server"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"DB_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LITMUS_GQL_GRPC_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LITMUS_GQL_GRPC_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:envFrom: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":3000,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":3030,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"wait-for-mongodb"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.190"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T08:17:26Z"
    name: chaos-litmus-auth-server-b8dcdf66b-gkt5j
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: chaos-litmus-auth-server-b8dcdf66b
      uid: dd754b6f-d49e-46e8-9026-2882d2c135b8
    resourceVersion: "863123"
    uid: cabe5995-237a-4049-845e-ffffcf3c7c82
  spec:
    automountServiceAccountToken: false
    containers:
    - env:
      - name: DB_PASSWORD
        value: superhardpassword
      - name: DB_USER
        value: root
      - name: LITMUS_GQL_GRPC_ENDPOINT
        value: chaos-litmus-server-service
      - name: LITMUS_GQL_GRPC_PORT
        value: :8000
      envFrom:
      - secretRef:
          name: chaos-litmus-admin-secret
      - configMapRef:
          name: chaos-litmus-admin-config
      image: litmuschaos/litmusportal-auth-server:2.14.0
      imagePullPolicy: Always
      name: auth-server
      ports:
      - containerPort: 3030
        name: auth-server
        protocol: TCP
      - containerPort: 3000
        name: auth-rpc-server
        protocol: TCP
      resources:
        limits:
          cpu: 550m
          ephemeral-storage: 1Gi
          memory: 712Mi
        requests:
          cpu: 225m
          ephemeral-storage: 500Mi
          memory: 250Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 2000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - args:
      - while [[ $(curl -sw '%{http_code}' http://chaos-mongodb:27017 -o /dev/null)
        -ne 200 ]]; do sleep 5; echo 'Waiting for the MongoDB to be ready...'; done;
        echo 'Connection with MongoDB established'
      command:
      - /bin/sh
      - -c
      image: litmuschaos/curl:2.14.0
      imagePullPolicy: Always
      name: wait-for-mongodb
      resources:
        limits:
          cpu: 250m
          ephemeral-storage: 1Gi
          memory: 512Mi
        requests:
          cpu: 25m
          ephemeral-storage: 500Mi
          memory: 150Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: litmus-server-account
    serviceAccountName: litmus-server-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:17:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:17:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:17:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://bd96b1d3573da29e05e67810016461092a4184360c5ba76de9a61cd60c1d9065
      image: docker.io/litmuschaos/litmusportal-auth-server:2.14.0
      imageID: docker.io/litmuschaos/litmusportal-auth-server@sha256:77b88bfb6fa4e6a315b6096265646cd10ee210cc31c78dd2bdfb8ea5cbaeb0bb
      lastState: {}
      name: auth-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-23T08:17:26Z"
    hostIP: 10.85.149.8
    initContainerStatuses:
    - containerID: containerd://048775c1d62ddfc80f76add024301a878f41ce96607e6cb8a823b6ecff45ed42
      image: docker.io/litmuschaos/curl:2.14.0
      imageID: docker.io/litmuschaos/curl@sha256:b8c8a8fa772126b681f4b06672130a60d518502497415345e5a1c2af32a32265
      lastState: {}
      name: wait-for-mongodb
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://048775c1d62ddfc80f76add024301a878f41ce96607e6cb8a823b6ecff45ed42
          exitCode: 0
          finishedAt: "2023-03-23T08:17:25Z"
          reason: Completed
          startedAt: "2023-03-23T08:16:53Z"
    phase: Running
    podIP: 172.30.188.190
    podIPs:
    - ip: 172.30.188.190
    qosClass: Burstable
    startTime: "2023-03-23T08:16:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 3d5c01ca5b0a321026383b1fd1b4e6dec8c46b9ed94f986e81f78770a4cb1473
      cni.projectcalico.org/podIP: 172.30.140.105/32
      cni.projectcalico.org/podIPs: 172.30.140.105/32
    creationTimestamp: "2023-03-23T08:16:49Z"
    generateName: chaos-litmus-frontend-6ffc95c884-
    labels:
      app.kubernetes.io/component: litmus-frontend
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: litmus
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: 2.15.10
      helm.sh/chart: litmus-2.15.10
      litmuschaos.io/version: 2.14.0
      pod-template-hash: 6ffc95c884
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:litmuschaos.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"00282446-8ea6-4fcb-9b58-082f00087a97"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"litmusportal-frontend"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/nginx/conf.d/default.conf"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"nginx-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.105"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T08:17:00Z"
    name: chaos-litmus-frontend-6ffc95c884-z8r6p
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: chaos-litmus-frontend-6ffc95c884
      uid: 00282446-8ea6-4fcb-9b58-082f00087a97
    resourceVersion: "863049"
    uid: 57dfb88a-9be2-463f-9ddc-309038197ee1
  spec:
    automountServiceAccountToken: false
    containers:
    - image: litmuschaos/litmusportal-frontend:2.14.0
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /
          port: http
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: litmusportal-frontend
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: http
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 550m
          ephemeral-storage: 1Gi
          memory: 512Mi
        requests:
          cpu: 125m
          ephemeral-storage: 500Mi
          memory: 150Mi
      securityContext:
        allowPrivilegeEscalation: false
        runAsNonRoot: true
        runAsUser: 2000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/nginx/conf.d/default.conf
        name: nginx-config
        subPath: default.conf
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - configMap:
        defaultMode: 420
        name: chaos-litmus-frontend-nginx-configuration
      name: nginx-config
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:49Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:17:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:17:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9756fe8502a0c0b6bfa2c4bac336a43df05f58271494423c4336bec6b9a2eb92
      image: docker.io/litmuschaos/litmusportal-frontend:2.14.0
      imageID: docker.io/litmuschaos/litmusportal-frontend@sha256:3af2c0bbdb6cc54c14f11beef19857f1572354dd976e3ee1319aaec24698a445
      lastState: {}
      name: litmusportal-frontend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-23T08:16:53Z"
    hostIP: 10.85.149.20
    phase: Running
    podIP: 172.30.140.105
    podIPs:
    - ip: 172.30.140.105
    qosClass: Burstable
    startTime: "2023-03-23T08:16:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 06f086e0b20a3ab014cca6ab7ed683c0a4a04182977d3b80b5110046d471138a
      cni.projectcalico.org/podIP: 172.30.140.104/32
      cni.projectcalico.org/podIPs: 172.30.140.104/32
    creationTimestamp: "2023-03-23T08:16:49Z"
    generateName: chaos-litmus-server-585786dd9c-
    labels:
      app.kubernetes.io/component: litmus-server
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: litmus
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: 2.15.10
      helm.sh/chart: litmus-2.15.10
      litmuschaos.io/version: 2.14.0
      pod-template-hash: 585786dd9c
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:litmuschaos.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"7c03e29b-696c-4603-820b-2256304b1baa"}: {}
        f:spec:
          f:containers:
            k:{"name":"graphql-server"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"AGENT_DEPLOYMENTS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_CONTROLLER_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_EXECUTOR_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOS_CENTER_SCOPE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOS_CENTER_UI_ENDPOINT"}:
                  .: {}
                  f:name: {}
                k:{"name":"CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_TRACKER_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HUB_BRANCH_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"INGRESS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"INGRESS_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LITMUS_AUTH_GRPC_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LITMUS_AUTH_GRPC_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LITMUS_CHAOS_EXPORTER_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LITMUS_CHAOS_OPERATOR_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LITMUS_CHAOS_RUNNER_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LITMUS_PORTAL_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"REMOTE_HUB_MAX_SIZE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SELF_AGENT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SELF_AGENT_NODE_SELECTOR"}:
                  .: {}
                  f:name: {}
                k:{"name":"SELF_AGENT_TOLERATIONS"}:
                  .: {}
                  f:name: {}
                k:{"name":"SERVER_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SUBSCRIBER_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TLS_CERT_64"}:
                  .: {}
                  f:name: {}
                k:{"name":"TLS_SECRET_NAME"}:
                  .: {}
                  f:name: {}
                k:{"name":"WORKFLOW_HELPER_IMAGE_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:envFrom: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8000,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/tmp/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/tmp/version"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"wait-for-mongodb"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"gitops-storage"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"hub-storage"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.104"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T08:17:40Z"
    name: chaos-litmus-server-585786dd9c-sxhqk
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: chaos-litmus-server-585786dd9c
      uid: 7c03e29b-696c-4603-820b-2256304b1baa
    resourceVersion: "863168"
    uid: d67b1f63-6c50-44a5-91a1-f544770539b1
  spec:
    containers:
    - env:
      - name: DB_PASSWORD
        value: superhardpassword
      - name: DB_USER
        value: root
      - name: LITMUS_PORTAL_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CHAOS_CENTER_SCOPE
        value: cluster
      - name: SERVER_SERVICE_NAME
        value: chaos-litmus-server-service
      - name: INGRESS
        value: "false"
      - name: INGRESS_NAME
        value: litmus-ingress
      - name: LITMUS_AUTH_GRPC_ENDPOINT
        value: chaos-litmus-auth-server-service
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: ARGO_WORKFLOW_CONTROLLER_IMAGE
        value: litmuschaos/workflow-controller:v3.3.1
      - name: ARGO_WORKFLOW_EXECUTOR_IMAGE
        value: litmuschaos/argoexec:v3.3.1
      - name: EVENT_TRACKER_IMAGE
        value: litmuschaos/litmusportal-event-tracker:2.14.0
      - name: LITMUS_CHAOS_EXPORTER_IMAGE
        value: litmuschaos/chaos-exporter:2.14.0
      - name: LITMUS_CHAOS_OPERATOR_IMAGE
        value: litmuschaos/chaos-operator:2.14.0
      - name: LITMUS_CHAOS_RUNNER_IMAGE
        value: litmuschaos/chaos-runner:2.14.0
      - name: SUBSCRIBER_IMAGE
        value: litmuschaos/litmusportal-subscriber:2.14.0
      - name: AGENT_DEPLOYMENTS
        value: '["app=chaos-exporter", "name=chaos-operator", "app=event-tracker",
          "app=workflow-controller"]'
      - name: CHAOS_CENTER_UI_ENDPOINT
      - name: CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: HUB_BRANCH_NAME
        value: v2.14.x
      - name: LITMUS_AUTH_GRPC_PORT
        value: :3030
      - name: REMOTE_HUB_MAX_SIZE
        value: "5000000"
      - name: SELF_AGENT
        value: "true"
      - name: SELF_AGENT_NODE_SELECTOR
      - name: SELF_AGENT_TOLERATIONS
      - name: TLS_CERT_64
      - name: TLS_SECRET_NAME
      - name: WORKFLOW_HELPER_IMAGE_VERSION
        value: 2.14.0
      envFrom:
      - secretRef:
          name: chaos-litmus-admin-secret
      - configMapRef:
          name: chaos-litmus-admin-config
      image: litmuschaos/litmusportal-server:2.14.0
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /
          port: gql-server
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: graphql-server
      ports:
      - containerPort: 8080
        name: gql-server
        protocol: TCP
      - containerPort: 8000
        name: gql-rpc-server
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: gql-server
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 550m
          ephemeral-storage: 1Gi
          memory: 712Mi
        requests:
          cpu: 225m
          ephemeral-storage: 500Mi
          memory: 250Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 2000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/
        name: gitops-storage
      - mountPath: /tmp/version
        name: hub-storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v4lh7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - args:
      - while [[ $(curl -sw '%{http_code}' http://chaos-mongodb:27017 -o /dev/null)
        -ne 200 ]]; do sleep 5; echo 'Waiting for the MongoDB to be ready...'; done;
        echo 'Connection with MongoDB established'
      command:
      - /bin/sh
      - -c
      image: litmuschaos/curl:2.14.0
      imagePullPolicy: Always
      name: wait-for-mongodb
      resources:
        limits:
          cpu: 250m
          ephemeral-storage: 1Gi
          memory: 512Mi
        requests:
          cpu: 25m
          ephemeral-storage: 500Mi
          memory: 150Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v4lh7
        readOnly: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: litmus-server-account
    serviceAccountName: litmus-server-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: gitops-storage
    - emptyDir: {}
      name: hub-storage
    - name: kube-api-access-v4lh7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:17:22Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:17:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:17:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7df8273d245b0fdddc00eded705d58c79ac0efd33cee686801ccecd9b70dcb5d
      image: docker.io/litmuschaos/litmusportal-server:2.14.0
      imageID: docker.io/litmuschaos/litmusportal-server@sha256:23f6f9f15dbd5816cb27307bd05f4da4bc91287158324f1f08e2d56592ae0118
      lastState: {}
      name: graphql-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-23T08:17:23Z"
    hostIP: 10.85.149.20
    initContainerStatuses:
    - containerID: containerd://e76aca88508483c5a635be545d56a1ce45e796efeeb4caa2bb0ee3c55a480f5c
      image: docker.io/litmuschaos/curl:2.14.0
      imageID: docker.io/litmuschaos/curl@sha256:b8c8a8fa772126b681f4b06672130a60d518502497415345e5a1c2af32a32265
      lastState: {}
      name: wait-for-mongodb
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://e76aca88508483c5a635be545d56a1ce45e796efeeb4caa2bb0ee3c55a480f5c
          exitCode: 0
          finishedAt: "2023-03-23T08:17:20Z"
          reason: Completed
          startedAt: "2023-03-23T08:16:53Z"
    phase: Running
    podIP: 172.30.140.104
    podIPs:
    - ip: 172.30.140.104
    qosClass: Burstable
    startTime: "2023-03-23T08:16:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 168320cd41d5b65069117f8b2b2c7d065df99e479caaeb518cfca27f75e07e29
      cni.projectcalico.org/podIP: 172.30.188.137/32
      cni.projectcalico.org/podIPs: 172.30.188.137/32
      kubectl.kubernetes.io/restartedAt: "2023-03-20T10:36:03+01:00"
    creationTimestamp: "2023-03-23T08:16:49Z"
    generateName: chaos-mongodb-7fcb7c857f-
    labels:
      app.kubernetes.io/component: mongodb
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: mongodb
      helm.sh/chart: mongodb-12.1.11
      pod-template-hash: 7fcb7c857f
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/restartedAt: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8ee3b385-1d72-46c7-bb2d-006db5d155ab"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"mongodb"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"ALLOW_EMPTY_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"BITNAMI_DEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_DISABLE_JAVASCRIPT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_DISABLE_SYSTEM_LOG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_ENABLE_DIRECTORY_PER_DB"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_ENABLE_IPV6"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_ENABLE_JOURNAL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_PORT_NUMBER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_ROOT_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"MONGODB_ROOT_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_SYSTEM_LOG_VERBOSITY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":27017,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/bitnami/mongodb"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/bitnami/scripts"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"common-scripts"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"datadir"}:
              .: {}
              f:name: {}
              f:persistentVolumeClaim:
                .: {}
                f:claimName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.137"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-28T21:49:46Z"
    name: chaos-mongodb-7fcb7c857f-5czwb
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: chaos-mongodb-7fcb7c857f
      uid: 8ee3b385-1d72-46c7-bb2d-006db5d155ab
    resourceVersion: "1800489"
    uid: fde33d57-3d76-4c28-8efc-97505e2fe0e6
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: mongodb
                app.kubernetes.io/instance: chaos
                app.kubernetes.io/name: mongodb
            namespaces:
            - litmus
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - env:
      - name: BITNAMI_DEBUG
        value: "false"
      - name: MONGODB_ROOT_USER
        value: root
      - name: MONGODB_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            key: mongodb-root-password
            name: chaos-mongodb
      - name: ALLOW_EMPTY_PASSWORD
        value: "no"
      - name: MONGODB_SYSTEM_LOG_VERBOSITY
        value: "0"
      - name: MONGODB_DISABLE_SYSTEM_LOG
        value: "no"
      - name: MONGODB_DISABLE_JAVASCRIPT
        value: "no"
      - name: MONGODB_ENABLE_JOURNAL
        value: "yes"
      - name: MONGODB_PORT_NUMBER
        value: "27017"
      - name: MONGODB_ENABLE_IPV6
        value: "no"
      - name: MONGODB_ENABLE_DIRECTORY_PER_DB
        value: "no"
      image: docker.io/bitnami/mongodb:5.0.8-debian-10-r24
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bitnami/scripts/ping-mongodb.sh
        failureThreshold: 6
        initialDelaySeconds: 30
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 10
      name: mongodb
      ports:
      - containerPort: 27017
        name: mongodb
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bitnami/scripts/readiness-probe.sh
        failureThreshold: 6
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /bitnami/mongodb
        name: datadir
      - mountPath: /bitnami/scripts
        name: common-scripts
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vpmrj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
    serviceAccount: chaos-mongodb
    serviceAccountName: chaos-mongodb
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - configMap:
        defaultMode: 360
        name: chaos-mongodb-common-scripts
      name: common-scripts
    - name: datadir
      persistentVolumeClaim:
        claimName: chaos-mongodb
    - name: kube-api-access-vpmrj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:49Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-28T21:49:46Z"
      message: 'containers with unready status: [mongodb]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-28T21:49:46Z"
      message: 'containers with unready status: [mongodb]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a799ac75f7de5cdd275c40c948ac4a8be8d9070f94631694a01ab1362f61f08d
      image: docker.io/bitnami/mongodb:5.0.8-debian-10-r24
      imageID: docker.io/bitnami/mongodb@sha256:8683a10d1e24dcb1053913f6e6acaa8b64001788b76ee8ccb2cd46149e4b50a3
      lastState:
        terminated:
          containerID: containerd://6a94407bedcef1309b938396dfc33cc55fa94775dbc56a0028536baff9173754
          exitCode: 0
          finishedAt: "2023-03-27T15:47:02Z"
          reason: Completed
          startedAt: "2023-03-27T13:36:45Z"
      name: mongodb
      ready: false
      restartCount: 4
      started: true
      state:
        running:
          startedAt: "2023-03-27T15:47:02Z"
    hostIP: 10.85.149.8
    phase: Running
    podIP: 172.30.188.137
    podIPs:
    - ip: 172.30.188.137
    qosClass: BestEffort
    startTime: "2023-03-23T08:16:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: fc243206270ba2af3565693643f6ea4df2661f3b9f09e25b9c5b592cef66f813
      cni.projectcalico.org/podIP: 172.30.188.189/32
      cni.projectcalico.org/podIPs: 172.30.188.189/32
    creationTimestamp: "2023-03-23T08:16:49Z"
    generateName: chaos-operator-ce-84bc885775-
    labels:
      app.kubernetes.io/component: operator
      app.kubernetes.io/managed-by: kubectl
      app.kubernetes.io/name: litmus
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: latest
      name: chaos-operator
      pod-template-hash: 84bc885775
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:name: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"04871a0e-cf60-4e81-8c13-4b1a833d1457"}: {}
        f:spec:
          f:containers:
            k:{"name":"chaos-operator"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CHAOS_RUNNER_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OPERATOR_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"WATCH_NAMESPACE"}:
                  .: {}
                  f:name: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.189"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:55Z"
    name: chaos-operator-ce-84bc885775-r697p
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: chaos-operator-ce-84bc885775
      uid: 04871a0e-cf60-4e81-8c13-4b1a833d1457
    resourceVersion: "863030"
    uid: 0edb3171-82c8-46f6-bb65-578116ab5b13
  spec:
    containers:
    - args:
      - -leader-elect=true
      command:
      - chaos-operator
      env:
      - name: CHAOS_RUNNER_IMAGE
        value: litmuschaos/chaos-runner:2.14.0
      - name: WATCH_NAMESPACE
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: OPERATOR_NAME
        value: chaos-operator
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: litmuschaos/chaos-operator:2.14.0
      imagePullPolicy: Always
      name: chaos-operator
      resources:
        limits:
          cpu: 225m
          ephemeral-storage: 1Gi
          memory: 500Mi
        requests:
          cpu: 125m
          ephemeral-storage: 500Mi
          memory: 300Mi
      securityContext:
        allowPrivilegeEscalation: false
        runAsUser: 2000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rlzmd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: litmus-cluster-scope
    serviceAccountName: litmus-cluster-scope
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: kube-api-access-rlzmd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:50Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9b0eecb63df8be210e40fe1e15c6a7d1bc7584d922ece557b0a6c3380f69f98b
      image: docker.io/litmuschaos/chaos-operator:2.14.0
      imageID: docker.io/litmuschaos/chaos-operator@sha256:69b1a6ff1409fc80cf169503e29d10e049b46108e57436e452e3800f5f911d70
      lastState: {}
      name: chaos-operator
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-23T08:16:55Z"
    hostIP: 10.85.149.8
    phase: Running
    podIP: 172.30.188.189
    podIPs:
    - ip: 172.30.188.189
    qosClass: Burstable
    startTime: "2023-03-23T08:16:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 3f580e4a4ff8b7af8c3bd012357ca6b967d1f8aca8ba79cd2aa673953cc8a57b
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679581040-2041273703
      workflows.argoproj.io/node-name: custom-scenario-1679581040[0].install-application
    creationTimestamp: "2023-03-23T14:17:33Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679581040
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T14:18:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.122"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T14:18:18Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"aebf7f24-7aae-45f0-9ae0-8d2731b3d7ce"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-23T14:18:24Z"
    name: custom-scenario-1679581040-2041273703
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679581040
      uid: aebf7f24-7aae-45f0-9ae0-8d2731b3d7ce
    resourceVersion: "908431"
    uid: 33622565-047c-4206-9063-eabea2be2330
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679581040
      - name: ARGO_WORKFLOW_UID
        value: aebf7f24-7aae-45f0-9ae0-8d2731b3d7ce
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679581040-2041273703
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w4vnl
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=apply
      - -timeout=400
      - -app=bank-of-anthos
      - -scope=cluster
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679581040-2041273703
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w4vnl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-w4vnl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:17:33Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:18:14Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:18:14Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:17:33Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://246060f516391718efef4d35bc2c1585738ae3c136bdbc30ec56df7e7dc0d35d
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://246060f516391718efef4d35bc2c1585738ae3c136bdbc30ec56df7e7dc0d35d
          exitCode: 0
          finishedAt: "2023-03-23T14:18:13Z"
          reason: Completed
          startedAt: "2023-03-23T14:17:36Z"
    - containerID: containerd://e0245e424e245e63a5a78fddccaf6632cc042b3d90f68bb941cfd53eb81477b1
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://e0245e424e245e63a5a78fddccaf6632cc042b3d90f68bb941cfd53eb81477b1
          exitCode: 0
          finishedAt: "2023-03-23T14:18:14Z"
          reason: Completed
          startedAt: "2023-03-23T14:17:34Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.122
    podIPs:
    - ip: 172.30.140.122
    qosClass: BestEffort
    startTime: "2023-03-23T14:17:33Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 1f31ecdff871f0719fabbc93817fab8ebf960e40bda67244e9b286065515cb21
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679581040-2114502714
      workflows.argoproj.io/node-name: custom-scenario-1679581040[1].delete-application
    creationTimestamp: "2023-03-23T14:18:24Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679581040
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T14:18:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.168"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T14:18:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"aebf7f24-7aae-45f0-9ae0-8d2731b3d7ce"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-23T14:18:48Z"
    name: custom-scenario-1679581040-2114502714
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679581040
      uid: aebf7f24-7aae-45f0-9ae0-8d2731b3d7ce
    resourceVersion: "908664"
    uid: d7af6334-7c30-45a3-81c7-9874596a4170
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679581040
      - name: ARGO_WORKFLOW_UID
        value: aebf7f24-7aae-45f0-9ae0-8d2731b3d7ce
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679581040-2114502714
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sqs9v
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=delete
      - -app=bank-of-anthos
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679581040-2114502714
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sqs9v
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-sqs9v
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:18:24Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:18:38Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:18:38Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:18:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://dc58b0e491d67131ec561780d7d5c8568b0a6f547bf4039cf23728a505133abc
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://dc58b0e491d67131ec561780d7d5c8568b0a6f547bf4039cf23728a505133abc
          exitCode: 0
          finishedAt: "2023-03-23T14:18:36Z"
          reason: Completed
          startedAt: "2023-03-23T14:18:27Z"
    - containerID: containerd://de537116c6f5a6ef40523b9754d43a1d400ce7fb5364b58f4004f10d3f60de75
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://de537116c6f5a6ef40523b9754d43a1d400ce7fb5364b58f4004f10d3f60de75
          exitCode: 0
          finishedAt: "2023-03-23T14:18:38Z"
          reason: Completed
          startedAt: "2023-03-23T14:18:25Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.168
    podIPs:
    - ip: 172.30.188.168
    qosClass: BestEffort
    startTime: "2023-03-23T14:18:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: c6d5e24e04e38235e6760b0284eaab675141ad36be4c98936b3b4bbe8f60cb9e
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679582849-2395661755
      workflows.argoproj.io/node-name: custom-scenario-1679582849[0].install-application
    creationTimestamp: "2023-03-23T14:47:37Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679582849
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T14:48:21Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.120"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T14:48:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"bc4f06c9-aba3-486a-b57a-1fabc7418a41"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-23T14:48:29Z"
    name: custom-scenario-1679582849-2395661755
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679582849
      uid: bc4f06c9-aba3-486a-b57a-1fabc7418a41
    resourceVersion: "912439"
    uid: 57bbbe55-720d-48ef-9563-f8f3dcb94a56
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679582849
      - name: ARGO_WORKFLOW_UID
        value: bc4f06c9-aba3-486a-b57a-1fabc7418a41
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679582849-2395661755
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-56dg7
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=apply
      - -timeout=400
      - -app=bank-of-anthos
      - -scope=cluster
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679582849-2395661755
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-56dg7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-56dg7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:47:38Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:48:19Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:48:19Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:47:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8a369573d4ab0b2f6eb6e1f6c9c2b887f15b6bc529035773c1733bce47178762
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://8a369573d4ab0b2f6eb6e1f6c9c2b887f15b6bc529035773c1733bce47178762
          exitCode: 0
          finishedAt: "2023-03-23T14:48:18Z"
          reason: Completed
          startedAt: "2023-03-23T14:47:40Z"
    - containerID: containerd://10eda62080eb495378ac31a1b6a046df8ae1f14cc656dd23abdd6fadb72b39ed
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://10eda62080eb495378ac31a1b6a046df8ae1f14cc656dd23abdd6fadb72b39ed
          exitCode: 0
          finishedAt: "2023-03-23T14:48:19Z"
          reason: Completed
          startedAt: "2023-03-23T14:47:39Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.120
    podIPs:
    - ip: 172.30.140.120
    qosClass: BestEffort
    startTime: "2023-03-23T14:47:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 839597f7f011d06c4e0f161fcccf36b33530acf383a59ed1b2a8cddf0cbb4a3b
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679582849-3242925462
      workflows.argoproj.io/node-name: custom-scenario-1679582849[1].delete-application
    creationTimestamp: "2023-03-23T14:48:29Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679582849
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T14:48:46Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.68"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T14:48:46Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"bc4f06c9-aba3-486a-b57a-1fabc7418a41"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-23T14:48:49Z"
    name: custom-scenario-1679582849-3242925462
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679582849
      uid: bc4f06c9-aba3-486a-b57a-1fabc7418a41
    resourceVersion: "912669"
    uid: c94c1bc0-f1f9-4879-b079-750d11de4982
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679582849
      - name: ARGO_WORKFLOW_UID
        value: bc4f06c9-aba3-486a-b57a-1fabc7418a41
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679582849-3242925462
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qq722
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=delete
      - -app=bank-of-anthos
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679582849-3242925462
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qq722
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-qq722
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:48:29Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:48:43Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:48:43Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:48:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f267c0e7789445eac5ed091b7227f9a94a91abd9e6625fcc4c79bb2ee8586280
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://f267c0e7789445eac5ed091b7227f9a94a91abd9e6625fcc4c79bb2ee8586280
          exitCode: 0
          finishedAt: "2023-03-23T14:48:42Z"
          reason: Completed
          startedAt: "2023-03-23T14:48:32Z"
    - containerID: containerd://3d57ddaf8687393bf5002ab9b4f9acdc6aae30beba95e00dacb10636a6631f0d
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://3d57ddaf8687393bf5002ab9b4f9acdc6aae30beba95e00dacb10636a6631f0d
          exitCode: 0
          finishedAt: "2023-03-23T14:48:43Z"
          reason: Completed
          startedAt: "2023-03-23T14:48:31Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.68
    podIPs:
    - ip: 172.30.140.68
    qosClass: BestEffort
    startTime: "2023-03-23T14:48:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: c5aa1c601c16d441367934de59833e875b61c21240da1a3a7fe655b0e166bdcc
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679590371-1341837201
      workflows.argoproj.io/node-name: custom-scenario-1679590371[1].delete-application
    creationTimestamp: "2023-03-23T16:53:46Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679590371
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T16:54:03Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.73"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T16:54:04Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6a108aa3-eca2-436a-9743-002bd17bfc60"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-23T16:54:11Z"
    name: custom-scenario-1679590371-1341837201
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679590371
      uid: 6a108aa3-eca2-436a-9743-002bd17bfc60
    resourceVersion: "927703"
    uid: 6b7eabf9-bb87-4cf0-abab-e55264b7432d
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679590371
      - name: ARGO_WORKFLOW_UID
        value: 6a108aa3-eca2-436a-9743-002bd17bfc60
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679590371-1341837201
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6vrvp
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=delete
      - -app=bank-of-anthos
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679590371-1341837201
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6vrvp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-6vrvp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T16:53:46Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T16:54:01Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T16:54:01Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T16:53:46Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6e156f228c01a4725bb953f28b93bf1fb3440fc24fe20fe405ba8cd88d3d1b38
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://6e156f228c01a4725bb953f28b93bf1fb3440fc24fe20fe405ba8cd88d3d1b38
          exitCode: 0
          finishedAt: "2023-03-23T16:54:00Z"
          reason: Completed
          startedAt: "2023-03-23T16:53:50Z"
    - containerID: containerd://a69309c4baf99bce646f82e32f7246f29a252b69684ee20c81fb7f849f8f9e46
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://a69309c4baf99bce646f82e32f7246f29a252b69684ee20c81fb7f849f8f9e46
          exitCode: 0
          finishedAt: "2023-03-23T16:54:01Z"
          reason: Completed
          startedAt: "2023-03-23T16:53:49Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.73
    podIPs:
    - ip: 172.30.140.73
    qosClass: BestEffort
    startTime: "2023-03-23T16:53:46Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 7046acc815b84e377802d6d1ff555a62f7b3ae35910580180809adce8d01464f
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679590371-2444885274
      workflows.argoproj.io/node-name: custom-scenario-1679590371[0].install-application
    creationTimestamp: "2023-03-23T16:52:55Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679590371
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T16:53:39Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.69"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T16:53:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6a108aa3-eca2-436a-9743-002bd17bfc60"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-23T16:53:46Z"
    name: custom-scenario-1679590371-2444885274
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679590371
      uid: 6a108aa3-eca2-436a-9743-002bd17bfc60
    resourceVersion: "927458"
    uid: b4d6695b-4ade-47c2-af61-d25d0e46cb36
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679590371
      - name: ARGO_WORKFLOW_UID
        value: 6a108aa3-eca2-436a-9743-002bd17bfc60
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679590371-2444885274
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l759f
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=apply
      - -timeout=400
      - -app=bank-of-anthos
      - -scope=cluster
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679590371-2444885274
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l759f
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-l759f
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T16:52:55Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T16:53:36Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T16:53:36Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T16:52:55Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0802f870a4c63834c8944ff6ba88204d80745c51f76e7fd3d32eeecb5d2b7b22
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://0802f870a4c63834c8944ff6ba88204d80745c51f76e7fd3d32eeecb5d2b7b22
          exitCode: 0
          finishedAt: "2023-03-23T16:53:35Z"
          reason: Completed
          startedAt: "2023-03-23T16:52:58Z"
    - containerID: containerd://8065d7510effb0e85e30cf1f00be9c2c2f29d1e771bd7ab845aaf07baf298e87
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://8065d7510effb0e85e30cf1f00be9c2c2f29d1e771bd7ab845aaf07baf298e87
          exitCode: 0
          finishedAt: "2023-03-23T16:53:36Z"
          reason: Completed
          startedAt: "2023-03-23T16:52:57Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.69
    podIPs:
    - ip: 172.30.140.69
    qosClass: BestEffort
    startTime: "2023-03-23T16:52:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: d55a6f7b7a0dc25131be3d82db5da9c2c1de4dabc91585a86d11bbded8133657
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679591857-1737435770
      workflows.argoproj.io/node-name: custom-scenario-1679591857[0].install-application
    creationTimestamp: "2023-03-23T17:17:40Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679591857
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T17:18:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.70"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T17:18:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"1807d5e0-577d-4cfe-919a-983c4f2704a1"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-23T17:18:31Z"
    name: custom-scenario-1679591857-1737435770
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679591857
      uid: 1807d5e0-577d-4cfe-919a-983c4f2704a1
    resourceVersion: "930838"
    uid: 4be1b1ee-78a1-44bf-8087-626666b7677d
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679591857
      - name: ARGO_WORKFLOW_UID
        value: 1807d5e0-577d-4cfe-919a-983c4f2704a1
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679591857-1737435770
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kbt6l
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=apply
      - -timeout=400
      - -app=bank-of-anthos
      - -scope=cluster
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679591857-1737435770
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kbt6l
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-kbt6l
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T17:17:40Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T17:18:20Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T17:18:20Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T17:17:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ad338035e2a8b0825adec9a6ee6fefd814460dcbad8d158b78ea498163ffa0b6
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://ad338035e2a8b0825adec9a6ee6fefd814460dcbad8d158b78ea498163ffa0b6
          exitCode: 0
          finishedAt: "2023-03-23T17:18:20Z"
          reason: Completed
          startedAt: "2023-03-23T17:17:42Z"
    - containerID: containerd://8299d076d5fbcebdb0d1d2730d0ba0e34580c8b24461e6efb76680107992a1bd
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://8299d076d5fbcebdb0d1d2730d0ba0e34580c8b24461e6efb76680107992a1bd
          exitCode: 0
          finishedAt: "2023-03-23T17:18:21Z"
          reason: Completed
          startedAt: "2023-03-23T17:17:41Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.70
    podIPs:
    - ip: 172.30.140.70
    qosClass: BestEffort
    startTime: "2023-03-23T17:17:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 5143aaac5c60a477b981235b51be68d6cf8f6452aaee0b2bc744d7685e5c04ce
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679591857-3363655304
      workflows.argoproj.io/node-name: custom-scenario-1679591857[2].delete-application
    creationTimestamp: "2023-03-23T17:19:19Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679591857
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T17:19:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.78"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T17:19:36Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"1807d5e0-577d-4cfe-919a-983c4f2704a1"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-23T17:19:43Z"
    name: custom-scenario-1679591857-3363655304
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679591857
      uid: 1807d5e0-577d-4cfe-919a-983c4f2704a1
    resourceVersion: "931225"
    uid: bb638247-d2e8-4b4a-a53e-68049a78df1f
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679591857
      - name: ARGO_WORKFLOW_UID
        value: 1807d5e0-577d-4cfe-919a-983c4f2704a1
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679591857-3363655304
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qks8l
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=delete
      - -app=bank-of-anthos
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679591857-3363655304
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qks8l
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-qks8l
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T17:19:19Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T17:19:33Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T17:19:33Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T17:19:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://da9f0209bff3b8abb1e371e1d184925f1efaf876c0c668920445910df18ce7f5
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://da9f0209bff3b8abb1e371e1d184925f1efaf876c0c668920445910df18ce7f5
          exitCode: 0
          finishedAt: "2023-03-23T17:19:33Z"
          reason: Completed
          startedAt: "2023-03-23T17:19:22Z"
    - containerID: containerd://fd8c1151884d9221c274b973af5420de185b782624b529874c85428d021103fd
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://fd8c1151884d9221c274b973af5420de185b782624b529874c85428d021103fd
          exitCode: 0
          finishedAt: "2023-03-23T17:19:33Z"
          reason: Completed
          startedAt: "2023-03-23T17:19:21Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.78
    podIPs:
    - ip: 172.30.140.78
    qosClass: BestEffort
    startTime: "2023-03-23T17:19:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: fcec330ec6c8c61fd8b985868ec61f750da30d9f727b790617c8720efb1ade03
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679591857-4202465832
      workflows.argoproj.io/node-name: custom-scenario-1679591857[1].install-chaos-experiments
    creationTimestamp: "2023-03-23T17:18:31Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679591857
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T17:19:11Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.97"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T17:19:13Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"1807d5e0-577d-4cfe-919a-983c4f2704a1"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-23T17:19:19Z"
    name: custom-scenario-1679591857-4202465832
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679591857
      uid: 1807d5e0-577d-4cfe-919a-983c4f2704a1
    resourceVersion: "930988"
    uid: 9b987b59-c82a-49da-92a4-454800a4fd89
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679591857
      - name: ARGO_WORKFLOW_UID
        value: 1807d5e0-577d-4cfe-919a-983c4f2704a1
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679591857-4202465832
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gvv2r
        readOnly: true
    - args:
      - kubectl apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
        -n litmus ; sleep 30
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679591857-4202465832
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gvv2r
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-gvv2r
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T17:18:31Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T17:19:09Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T17:19:09Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T17:18:31Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://84f6d3e85ad5a2fb36a15bb0b8bf80fcfc6f18d879b3cab92997250da702fd9f
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://84f6d3e85ad5a2fb36a15bb0b8bf80fcfc6f18d879b3cab92997250da702fd9f
          exitCode: 0
          finishedAt: "2023-03-23T17:19:08Z"
          reason: Completed
          startedAt: "2023-03-23T17:18:34Z"
    - containerID: containerd://89dd483971862a68f47e7a97f62bb22525cf470e796e06bdf935aaeb02ae31cf
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://89dd483971862a68f47e7a97f62bb22525cf470e796e06bdf935aaeb02ae31cf
          exitCode: 0
          finishedAt: "2023-03-23T17:19:09Z"
          reason: Completed
          startedAt: "2023-03-23T17:18:33Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.97
    podIPs:
    - ip: 172.30.140.97
    qosClass: BestEffort
    startTime: "2023-03-23T17:18:31Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 51f7e75908fd4fa03f807bc29ba40a9f0ace34d0564e2d01801b71389fa9a180
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679912796-1046800753
      workflows.argoproj.io/node-name: custom-scenario-1679912796[0].install-application
    creationTimestamp: "2023-03-27T10:26:40Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679912796
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T10:27:27Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.84"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T10:27:28Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"a4e4448e-8f0d-4c5c-a9c5-32c078954850"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T10:27:34Z"
    name: custom-scenario-1679912796-1046800753
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679912796
      uid: a4e4448e-8f0d-4c5c-a9c5-32c078954850
    resourceVersion: "1556312"
    uid: b22533d5-022f-429b-90df-9c5ebd57c317
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679912796
      - name: ARGO_WORKFLOW_UID
        value: a4e4448e-8f0d-4c5c-a9c5-32c078954850
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679912796-1046800753
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zvcts
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=apply
      - -timeout=400
      - -app=bank-of-anthos
      - -scope=cluster
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679912796-1046800753
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zvcts
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-zvcts
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:26:40Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:27:24Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:27:24Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:26:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0a55a2b11df861c99d158cb06740e97987a32a8bdd51ea52e17a40620b1722fa
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://0a55a2b11df861c99d158cb06740e97987a32a8bdd51ea52e17a40620b1722fa
          exitCode: 0
          finishedAt: "2023-03-27T10:27:23Z"
          reason: Completed
          startedAt: "2023-03-27T10:26:44Z"
    - containerID: containerd://78bf5976cb6f6b527ae7688571770b3a1308b897075f877085173e86f8cea6de
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://78bf5976cb6f6b527ae7688571770b3a1308b897075f877085173e86f8cea6de
          exitCode: 0
          finishedAt: "2023-03-27T10:27:24Z"
          reason: Completed
          startedAt: "2023-03-27T10:26:42Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.84
    podIPs:
    - ip: 172.30.140.84
    qosClass: BestEffort
    startTime: "2023-03-27T10:26:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 4993a74850ef74926c86ebe83853be423123894eb87bd84942f127c0671c73d5
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679912796-2033607731
      workflows.argoproj.io/node-name: custom-scenario-1679912796[1].install-chaos-experiments
    creationTimestamp: "2023-03-27T10:27:34Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679912796
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T10:28:18Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.102"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T10:28:19Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"a4e4448e-8f0d-4c5c-a9c5-32c078954850"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T10:28:26Z"
    name: custom-scenario-1679912796-2033607731
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679912796
      uid: a4e4448e-8f0d-4c5c-a9c5-32c078954850
    resourceVersion: "1556439"
    uid: 9b36f272-42be-4479-b3c2-fbacae89b1b8
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679912796
      - name: ARGO_WORKFLOW_UID
        value: a4e4448e-8f0d-4c5c-a9c5-32c078954850
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679912796-2033607731
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dnw9j
        readOnly: true
    - args:
      - kubectl apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
        -n litmus ; sleep 30
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679912796-2033607731
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dnw9j
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-dnw9j
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:27:34Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:28:16Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:28:16Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:27:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://88275ef3f3f7995d09c37cfc296df64d93c7e028181ad0a8fac059b6639b3e07
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://88275ef3f3f7995d09c37cfc296df64d93c7e028181ad0a8fac059b6639b3e07
          exitCode: 0
          finishedAt: "2023-03-27T10:28:15Z"
          reason: Completed
          startedAt: "2023-03-27T10:27:40Z"
    - containerID: containerd://682995bc8b88f4ae60aebab3c9a7cd7475d41a270637b6cf670ddee5873b778f
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://682995bc8b88f4ae60aebab3c9a7cd7475d41a270637b6cf670ddee5873b778f
          exitCode: 0
          finishedAt: "2023-03-27T10:28:16Z"
          reason: Completed
          startedAt: "2023-03-27T10:27:38Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.102
    podIPs:
    - ip: 172.30.140.102
    qosClass: BestEffort
    startTime: "2023-03-27T10:27:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 34c687bc9ca6bf26dccb7088ace5d314e54ab10ce175e127df8d167b50fef97d
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679912796-3744388849
      workflows.argoproj.io/node-name: custom-scenario-1679912796[2].delete-application
    creationTimestamp: "2023-03-27T10:28:26Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679912796
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T10:28:44Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.99"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T10:28:44Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"a4e4448e-8f0d-4c5c-a9c5-32c078954850"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T10:28:46Z"
    name: custom-scenario-1679912796-3744388849
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679912796
      uid: a4e4448e-8f0d-4c5c-a9c5-32c078954850
    resourceVersion: "1556671"
    uid: e0759197-7f56-41ae-8a65-0e0f55d1ce24
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679912796
      - name: ARGO_WORKFLOW_UID
        value: a4e4448e-8f0d-4c5c-a9c5-32c078954850
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679912796-3744388849
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qgmv5
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=delete
      - -app=bank-of-anthos
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679912796-3744388849
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qgmv5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-qgmv5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:28:26Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:28:41Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:28:41Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:28:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e462670d04d641dbbcd645bb2eda3576dee553cca9ecbc1aaf09355b7622828e
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://e462670d04d641dbbcd645bb2eda3576dee553cca9ecbc1aaf09355b7622828e
          exitCode: 0
          finishedAt: "2023-03-27T10:28:41Z"
          reason: Completed
          startedAt: "2023-03-27T10:28:30Z"
    - containerID: containerd://8765bfb3eb225b53217e95a7a36e91c97865b50fd0a9af0dba4336bacfd2db3c
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://8765bfb3eb225b53217e95a7a36e91c97865b50fd0a9af0dba4336bacfd2db3c
          exitCode: 0
          finishedAt: "2023-03-27T10:28:41Z"
          reason: Completed
          startedAt: "2023-03-27T10:28:28Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.99
    podIPs:
    - ip: 172.30.140.99
    qosClass: BestEffort
    startTime: "2023-03-27T10:28:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 4ab8eb917cfc85cfaa81b883c55d065def8fb8e68bb3119713591793e6eab0ce
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679914143-1006647351
      workflows.argoproj.io/node-name: custom-scenario-1679914143[0].install-application
    creationTimestamp: "2023-03-27T10:49:07Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679914143
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T10:49:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.94"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T10:49:53Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"78c008bd-df78-4a88-9374-a28fd55b00ab"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T10:49:59Z"
    name: custom-scenario-1679914143-1006647351
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679914143
      uid: 78c008bd-df78-4a88-9374-a28fd55b00ab
    resourceVersion: "1559318"
    uid: 033dc43e-ad99-48cd-bb64-07f53a94982e
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679914143
      - name: ARGO_WORKFLOW_UID
        value: 78c008bd-df78-4a88-9374-a28fd55b00ab
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679914143-1006647351
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p6clg
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=apply
      - -timeout=400
      - -app=bank-of-anthos
      - -scope=cluster
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679914143-1006647351
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p6clg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-p6clg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:49:07Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:49:49Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:49:49Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:49:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8480791afba0637868683b54137988e3e9ccbf735fb7445cbc95aa6fedb1316a
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://8480791afba0637868683b54137988e3e9ccbf735fb7445cbc95aa6fedb1316a
          exitCode: 0
          finishedAt: "2023-03-27T10:49:48Z"
          reason: Completed
          startedAt: "2023-03-27T10:49:10Z"
    - containerID: containerd://80f23d4b85b44205ea01818107cb478c3f2f2dec278b7bb781ca52aeeb838dfb
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://80f23d4b85b44205ea01818107cb478c3f2f2dec278b7bb781ca52aeeb838dfb
          exitCode: 0
          finishedAt: "2023-03-27T10:49:49Z"
          reason: Completed
          startedAt: "2023-03-27T10:49:09Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.94
    podIPs:
    - ip: 172.30.140.94
    qosClass: BestEffort
    startTime: "2023-03-27T10:49:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 0b3971deffc60c3d04af3f4da1443d02199ea620bb2e7400c8f92e67c1e19ed2
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679914143-3934290493
      workflows.argoproj.io/node-name: custom-scenario-1679914143[1].install-chaos-experiments
    creationTimestamp: "2023-03-27T10:49:59Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679914143
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T10:50:44Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.67"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T10:50:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"78c008bd-df78-4a88-9374-a28fd55b00ab"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T10:50:51Z"
    name: custom-scenario-1679914143-3934290493
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679914143
      uid: 78c008bd-df78-4a88-9374-a28fd55b00ab
    resourceVersion: "1559447"
    uid: 9b193ac1-e81e-47b7-841f-122830498cf7
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679914143
      - name: ARGO_WORKFLOW_UID
        value: 78c008bd-df78-4a88-9374-a28fd55b00ab
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679914143-3934290493
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rzl72
        readOnly: true
    - args:
      - kubectl apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
        -n litmus ; sleep 30
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679914143-3934290493
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rzl72
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-rzl72
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:49:59Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:50:41Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:50:41Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:49:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://684531b368c35cca5c7dfa1f52677f09555e80ab28d0450234dcd164c4a978ee
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://684531b368c35cca5c7dfa1f52677f09555e80ab28d0450234dcd164c4a978ee
          exitCode: 0
          finishedAt: "2023-03-27T10:50:40Z"
          reason: Completed
          startedAt: "2023-03-27T10:50:05Z"
    - containerID: containerd://915c27c43a92e37aa163c0c75763325d8131dff83a50599d02edea4168df4377
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://915c27c43a92e37aa163c0c75763325d8131dff83a50599d02edea4168df4377
          exitCode: 0
          finishedAt: "2023-03-27T10:50:41Z"
          reason: Completed
          startedAt: "2023-03-27T10:50:03Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.67
    podIPs:
    - ip: 172.30.140.67
    qosClass: BestEffort
    startTime: "2023-03-27T10:49:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: ecfbcad188108cfa0007daba0ebe7e19e86c4e38964f3cfc200e4ab77b26cc30
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679914143-4286456327
      workflows.argoproj.io/node-name: custom-scenario-1679914143[2].delete-application
    creationTimestamp: "2023-03-27T10:50:51Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679914143
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T10:51:12Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.96"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T10:51:13Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"78c008bd-df78-4a88-9374-a28fd55b00ab"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T10:51:22Z"
    name: custom-scenario-1679914143-4286456327
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679914143
      uid: 78c008bd-df78-4a88-9374-a28fd55b00ab
    resourceVersion: "1559698"
    uid: 0c9d50e6-bbf8-4b34-afb6-501c4028a8eb
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679914143
      - name: ARGO_WORKFLOW_UID
        value: 78c008bd-df78-4a88-9374-a28fd55b00ab
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679914143-4286456327
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vcq8c
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=delete
      - -app=bank-of-anthos
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679914143-4286456327
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vcq8c
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-vcq8c
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:50:51Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:51:09Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:51:09Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:50:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://97de57db8c4c4eef3cf85c99b0d3ee41ecba1b3b72f657751a64effdc5c3b001
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://97de57db8c4c4eef3cf85c99b0d3ee41ecba1b3b72f657751a64effdc5c3b001
          exitCode: 0
          finishedAt: "2023-03-27T10:51:08Z"
          reason: Completed
          startedAt: "2023-03-27T10:50:57Z"
    - containerID: containerd://a1dabdebffa04a5b3dda118faf72cfde7fe4821ef80bd0576f473422c1673002
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://a1dabdebffa04a5b3dda118faf72cfde7fe4821ef80bd0576f473422c1673002
          exitCode: 0
          finishedAt: "2023-03-27T10:51:09Z"
          reason: Completed
          startedAt: "2023-03-27T10:50:55Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.96
    podIPs:
    - ip: 172.30.140.96
    qosClass: BestEffort
    startTime: "2023-03-27T10:50:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 780257d19610f55bc6a87a063a6d4b14b234d800aa0d2a34542c8d0c907463b6
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679928716-1718983408
      workflows.argoproj.io/node-name: custom-scenario-1679928716[4].delete-application
    creationTimestamp: "2023-03-27T14:54:45Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679928716
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T14:55:02Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.161"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T14:55:03Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"48b70cff-f2db-4870-83a3-1699570011ad"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T14:55:05Z"
    name: custom-scenario-1679928716-1718983408
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679928716
      uid: 48b70cff-f2db-4870-83a3-1699570011ad
    resourceVersion: "1588010"
    uid: 6ef23816-f6e5-4b35-bd71-446fe4d44972
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679928716
      - name: ARGO_WORKFLOW_UID
        value: 48b70cff-f2db-4870-83a3-1699570011ad
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679928716-1718983408
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bh8vd
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=delete
      - -app=bank-of-anthos
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679928716-1718983408
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bh8vd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-bh8vd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:54:45Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:54:59Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:54:59Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:54:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9c4e471832b51e7e9603be11083ba1d830454e07c27fa34a8aba109f2a664242
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://9c4e471832b51e7e9603be11083ba1d830454e07c27fa34a8aba109f2a664242
          exitCode: 0
          finishedAt: "2023-03-27T14:54:58Z"
          reason: Completed
          startedAt: "2023-03-27T14:54:48Z"
    - containerID: containerd://c67fa5e6b3e971e20f433b1651015eefd423b99f223e822bc9604175f23e2d65
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://c67fa5e6b3e971e20f433b1651015eefd423b99f223e822bc9604175f23e2d65
          exitCode: 0
          finishedAt: "2023-03-27T14:54:59Z"
          reason: Completed
          startedAt: "2023-03-27T14:54:47Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.161
    podIPs:
    - ip: 172.30.188.161
    qosClass: BestEffort
    startTime: "2023-03-27T14:54:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: ae8f65990974a45bc4d34a205d2fadd64c556045e7f38261c912a91e869d8cd6
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679928716-2200251290
      workflows.argoproj.io/node-name: custom-scenario-1679928716[2].pod-network-loss
    creationTimestamp: "2023-03-27T14:53:08Z"
    labels:
      weight: "10"
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679928716
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T14:54:17Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.131"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T14:54:18Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:weight: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"48b70cff-f2db-4870-83a3-1699570011ad"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/tmp/chaosengine.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/mainctrfs/tmp/chaosengine.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/inputs/artifacts"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"input-artifacts"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T14:54:25Z"
    name: custom-scenario-1679928716-2200251290
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679928716
      uid: 48b70cff-f2db-4870-83a3-1699570011ad
    resourceVersion: "1587709"
    uid: 40278168-c36c-4040-8865-e03c1682b03e
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679928716
      - name: ARGO_WORKFLOW_UID
        value: 48b70cff-f2db-4870-83a3-1699570011ad
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"48b70cff-f2db-4870-83a3-1699570011ad\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name in (balancereader,transactionhistory)\n    appkind:
          \"deployment\"\n  jobCleanUpPolicy: retain\n  engineState: \"active\"\n  chaosServiceAccount:
          litmus-admin\n  components:\n    runner:\n      imagePullPolicy: Always\n  experiments:\n    -
          name: pod-network-loss\n      spec:\n        probe:\n          - name: check-frontend-access-url\n            type:
          httpProbe\n            httpProbe/inputs:\n              url: http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          2\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679928716-2200251290
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /mainctrfs/tmp/chaosengine.yaml
        name: input-artifacts
        subPath: pod-network-loss
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fjvww
        readOnly: true
    - args:
      - -file=/tmp/chaosengine.yaml
      - -saveName=/tmp/engine-name
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"48b70cff-f2db-4870-83a3-1699570011ad\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name in (balancereader,transactionhistory)\n    appkind:
          \"deployment\"\n  jobCleanUpPolicy: retain\n  engineState: \"active\"\n  chaosServiceAccount:
          litmus-admin\n  components:\n    runner:\n      imagePullPolicy: Always\n  experiments:\n    -
          name: pod-network-loss\n      spec:\n        probe:\n          - name: check-frontend-access-url\n            type:
          httpProbe\n            httpProbe/inputs:\n              url: http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          2\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679928716-2200251290
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-checker:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/chaosengine.yaml
        name: input-artifacts
        subPath: pod-network-loss
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fjvww
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679928716
      - name: ARGO_WORKFLOW_UID
        value: 48b70cff-f2db-4870-83a3-1699570011ad
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"48b70cff-f2db-4870-83a3-1699570011ad\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name in (balancereader,transactionhistory)\n    appkind:
          \"deployment\"\n  jobCleanUpPolicy: retain\n  engineState: \"active\"\n  chaosServiceAccount:
          litmus-admin\n  components:\n    runner:\n      imagePullPolicy: Always\n  experiments:\n    -
          name: pod-network-loss\n      spec:\n        probe:\n          - name: check-frontend-access-url\n            type:
          httpProbe\n            httpProbe/inputs:\n              url: http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          2\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679928716-2200251290
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/inputs/artifacts
        name: input-artifacts
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fjvww
        readOnly: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: input-artifacts
    - name: kube-api-access-fjvww
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:53:11Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:54:14Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:54:14Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:53:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://76b7658bf36d08f8a12144740f9057254938c8d50af33050531b911974c6cb56
      image: docker.io/litmuschaos/litmus-checker:latest
      imageID: docker.io/litmuschaos/litmus-checker@sha256:7f0790b7e3740039378b9a3c604b20214a573c62c3961ab9e66bf35efed3acb1
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://76b7658bf36d08f8a12144740f9057254938c8d50af33050531b911974c6cb56
          exitCode: 0
          finishedAt: "2023-03-27T14:54:13Z"
          reason: Completed
          startedAt: "2023-03-27T14:53:13Z"
    - containerID: containerd://5f4be9dab9bdab3502e276384b48d121de116a61b73ee008ae12f3e97c5e5ab2
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://5f4be9dab9bdab3502e276384b48d121de116a61b73ee008ae12f3e97c5e5ab2
          exitCode: 0
          finishedAt: "2023-03-27T14:54:15Z"
          reason: Completed
          startedAt: "2023-03-27T14:53:11Z"
    hostIP: 10.85.149.8
    initContainerStatuses:
    - containerID: containerd://4eebf2335b8aeea31c26aeca16d3a25ac0ada8b4f16300cdaad6b5db18691d1c
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://4eebf2335b8aeea31c26aeca16d3a25ac0ada8b4f16300cdaad6b5db18691d1c
          exitCode: 0
          finishedAt: "2023-03-27T14:53:10Z"
          reason: Completed
          startedAt: "2023-03-27T14:53:10Z"
    phase: Succeeded
    podIP: 172.30.188.131
    podIPs:
    - ip: 172.30.188.131
    qosClass: BestEffort
    startTime: "2023-03-27T14:53:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 3a3a97b2d6ecf31ad22c8bebb960b2f75d96de409b953eb30b35c7df7bdc5dc7
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679928716-2546298652
      workflows.argoproj.io/node-name: custom-scenario-1679928716[0].install-application
    creationTimestamp: "2023-03-27T14:52:00Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679928716
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T14:52:09Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.162"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T14:52:10Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"48b70cff-f2db-4870-83a3-1699570011ad"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T14:52:21Z"
    name: custom-scenario-1679928716-2546298652
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679928716
      uid: 48b70cff-f2db-4870-83a3-1699570011ad
    resourceVersion: "1587345"
    uid: 0ca2f831-6fdf-4041-9c88-32098ebeee1b
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679928716
      - name: ARGO_WORKFLOW_UID
        value: 48b70cff-f2db-4870-83a3-1699570011ad
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679928716-2546298652
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-42x7b
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=apply
      - -timeout=400
      - -app=bank-of-anthos
      - -scope=cluster
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679928716-2546298652
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-42x7b
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-42x7b
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:52:00Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:52:07Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:52:07Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:52:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e046ab4ad8003429cf3d0a8ba39cfa7ce228a443ff3a78e64b2d2b531c2c30dc
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://e046ab4ad8003429cf3d0a8ba39cfa7ce228a443ff3a78e64b2d2b531c2c30dc
          exitCode: 0
          finishedAt: "2023-03-27T14:52:07Z"
          reason: Completed
          startedAt: "2023-03-27T14:52:05Z"
    - containerID: containerd://a0fa89fc669d2cb95b162da0ebbe798eaffbdc8baf1d96c296a8d51647567954
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://a0fa89fc669d2cb95b162da0ebbe798eaffbdc8baf1d96c296a8d51647567954
          exitCode: 0
          finishedAt: "2023-03-27T14:52:07Z"
          reason: Completed
          startedAt: "2023-03-27T14:52:03Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.162
    podIPs:
    - ip: 172.30.188.162
    qosClass: BestEffort
    startTime: "2023-03-27T14:52:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: b4025fda71f7577049aa30f0a744ea6562d3961a78125f3b24464a6d55a7ffd2
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679928716-2819912566
      workflows.argoproj.io/node-name: custom-scenario-1679928716[1].install-chaos-experiments
    creationTimestamp: "2023-03-27T14:52:20Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679928716
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T14:53:00Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.165"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T14:53:01Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"48b70cff-f2db-4870-83a3-1699570011ad"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T14:53:08Z"
    name: custom-scenario-1679928716-2819912566
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679928716
      uid: 48b70cff-f2db-4870-83a3-1699570011ad
    resourceVersion: "1587469"
    uid: 27be5075-c4bf-4fa7-b16f-5b30b37623ff
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679928716
      - name: ARGO_WORKFLOW_UID
        value: 48b70cff-f2db-4870-83a3-1699570011ad
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679928716-2819912566
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hph7f
        readOnly: true
    - args:
      - kubectl apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
        -n litmus ; sleep 30
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679928716-2819912566
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hph7f
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-hph7f
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:52:21Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:52:58Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:52:58Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:52:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5c2e29a46b703ad33b973225c330ef15e38c5391d227297a2a0eab022345453e
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://5c2e29a46b703ad33b973225c330ef15e38c5391d227297a2a0eab022345453e
          exitCode: 0
          finishedAt: "2023-03-27T14:52:57Z"
          reason: Completed
          startedAt: "2023-03-27T14:52:24Z"
    - containerID: containerd://bd620b7e89cf202107d0639fa3bbe2f27ab7d33cc1fbedc5b316f4fb1fda5982
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://bd620b7e89cf202107d0639fa3bbe2f27ab7d33cc1fbedc5b316f4fb1fda5982
          exitCode: 0
          finishedAt: "2023-03-27T14:52:58Z"
          reason: Completed
          startedAt: "2023-03-27T14:52:23Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.165
    podIPs:
    - ip: 172.30.188.165
    qosClass: BestEffort
    startTime: "2023-03-27T14:52:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 504dd81f958910132a2476a5bdd29f1ced2f04c3f0fabc1a0e9af624ba7606ea
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679928716-3158960610
      workflows.argoproj.io/node-name: custom-scenario-1679928716[3].revert-chaos
    creationTimestamp: "2023-03-27T14:54:25Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679928716
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T14:54:34Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.169"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T14:54:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"48b70cff-f2db-4870-83a3-1699570011ad"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T14:54:45Z"
    name: custom-scenario-1679928716-3158960610
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679928716
      uid: 48b70cff-f2db-4870-83a3-1699570011ad
    resourceVersion: "1587782"
    uid: 685270d9-46a2-4d46-bafa-dd37f289a2dc
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679928716
      - name: ARGO_WORKFLOW_UID
        value: 48b70cff-f2db-4870-83a3-1699570011ad
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"revert-chaos","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          delete chaosengine -l workflow_run_id=48b70cff-f2db-4870-83a3-1699570011ad
          -n litmus"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679928716-3158960610
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gwr2c
        readOnly: true
    - args:
      - kubectl delete chaosengine -l workflow_run_id=48b70cff-f2db-4870-83a3-1699570011ad
        -n litmus
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"revert-chaos","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          delete chaosengine -l workflow_run_id=48b70cff-f2db-4870-83a3-1699570011ad
          -n litmus"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679928716-3158960610
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gwr2c
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-gwr2c
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:54:25Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:54:32Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:54:32Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:54:25Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://47aaab9649b7918081af82010a0d9f7fea7b8efa0303633d328f9254df912df2
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://47aaab9649b7918081af82010a0d9f7fea7b8efa0303633d328f9254df912df2
          exitCode: 0
          finishedAt: "2023-03-27T14:54:31Z"
          reason: Completed
          startedAt: "2023-03-27T14:54:28Z"
    - containerID: containerd://44ca1de920b68399cbfc7cf8ba50ba324b3814de10cb369e9e5e8dddb3a4c70c
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://44ca1de920b68399cbfc7cf8ba50ba324b3814de10cb369e9e5e8dddb3a4c70c
          exitCode: 0
          finishedAt: "2023-03-27T14:54:32Z"
          reason: Completed
          startedAt: "2023-03-27T14:54:26Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.169
    podIPs:
    - ip: 172.30.188.169
    qosClass: BestEffort
    startTime: "2023-03-27T14:54:25Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 91bb753bf4c551f8d8045fbae7f3030dd6726fbd5b1c894f0da8501ed105046b
      cni.projectcalico.org/podIP: 172.30.140.95/32
      cni.projectcalico.org/podIPs: 172.30.140.95/32
    creationTimestamp: "2023-03-23T08:16:49Z"
    generateName: debug-pod-55c9b84fb9-
    labels:
      app: debug-pod
      pod-template-hash: 55c9b84fb9
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"bf421729-bae6-470d-ba09-711dcb35c615"}: {}
        f:spec:
          f:containers:
            k:{"name":"debug-pod"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/bitnami/mongodb"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:runAsGroup: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"datadir"}:
              .: {}
              f:name: {}
              f:persistentVolumeClaim:
                .: {}
                f:claimName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.95"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T08:17:06Z"
    name: debug-pod-55c9b84fb9-p7pfl
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: debug-pod-55c9b84fb9
      uid: bf421729-bae6-470d-ba09-711dcb35c615
    resourceVersion: "863068"
    uid: 523ca08b-eb39-4a01-9c05-c11f7cc41bf5
  spec:
    containers:
    - args:
      - -ec
      - while :; do echo .; sleep 5;done
      command:
      - /bin/sh
      image: centos:latest
      imagePullPolicy: Always
      name: debug-pod
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /bitnami/mongodb
        name: datadir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jl4qd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      runAsGroup: 1001
      runAsNonRoot: true
      runAsUser: 1001
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: datadir
      persistentVolumeClaim:
        claimName: chaos-mongodb
    - name: kube-api-access-jl4qd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:50Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:17:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:17:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://21fa0fc2e8fd7c4a61789d206ca93c6ac576280b7207b1ce07a1dd777b603117
      image: docker.io/library/centos:latest
      imageID: docker.io/library/centos@sha256:a27fd8080b517143cbbbab9dfb7c8571c40d67d534bbdee55bd6c473f432b177
      lastState: {}
      name: debug-pod
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-23T08:17:05Z"
    hostIP: 10.85.149.20
    phase: Running
    podIP: 172.30.140.95
    podIPs:
    - ip: 172.30.140.95
    qosClass: BestEffort
    startTime: "2023-03-23T08:16:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 086e4d0acb3ec0eb7110ddb32f45d5c4761bf4aaa1a844c55a50f214374bd01e
      cni.projectcalico.org/podIP: 172.30.188.133/32
      cni.projectcalico.org/podIPs: 172.30.188.133/32
    creationTimestamp: "2023-03-23T08:16:50Z"
    generateName: event-tracker-744b6fd8cf-
    labels:
      app: event-tracker
      pod-template-hash: 744b6fd8cf
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d2d2b583-afa8-40ba-8beb-fc7d429093e2"}: {}
        f:spec:
          f:containers:
            k:{"name":"litmus-event-tracker"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"AGENT_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:envFrom: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.133"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:58Z"
    name: event-tracker-744b6fd8cf-29j4p
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: event-tracker-744b6fd8cf
      uid: d2d2b583-afa8-40ba-8beb-fc7d429093e2
    resourceVersion: "863042"
    uid: 9b401172-dd6e-429a-9db5-f119427e8b3d
  spec:
    containers:
    - env:
      - name: AGENT_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      envFrom:
      - configMapRef:
          name: agent-config
      - secretRef:
          name: agent-secret
      image: litmuschaos/litmusportal-event-tracker:2.14.0
      imagePullPolicy: Always
      name: litmus-event-tracker
      resources:
        limits:
          cpu: 225m
          ephemeral-storage: 1Gi
          memory: 500Mi
        requests:
          cpu: 125m
          ephemeral-storage: 500Mi
          memory: 300Mi
      securityContext:
        allowPrivilegeEscalation: false
        runAsUser: 2000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bxjtl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: event-tracker-sa
    serviceAccountName: event-tracker-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: kube-api-access-bxjtl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:50Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://571b73da84310c0fa0937447cd51b2276d194a4bfbc7014b851b25b8ae698c45
      image: docker.io/litmuschaos/litmusportal-event-tracker:2.14.0
      imageID: docker.io/litmuschaos/litmusportal-event-tracker@sha256:2fb218aa2d8bfebddd78741445d9ef595eef4eed2ac227bc9cd7d26edb511cb8
      lastState: {}
      name: litmus-event-tracker
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-23T08:16:57Z"
    hostIP: 10.85.149.8
    phase: Running
    podIP: 172.30.188.133
    podIPs:
    - ip: 172.30.188.133
    qosClass: Burstable
    startTime: "2023-03-23T08:16:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: b58b5561c2e09d63bda7290848b1b0f98cb2e3d9ec9b48056a0ce03bd723d404
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
    creationTimestamp: "2023-03-27T13:36:30Z"
    labels:
      app: pod-network-loss-chaos9b6k8
      app.kubernetes.io/component: chaos-runner
      app.kubernetes.io/part-of: litmus
      chaosUID: 49b7adf7-8b81-47ab-9d5c-9f7553c12cae
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/part-of: {}
            f:chaosUID: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"49b7adf7-8b81-47ab-9d5c-9f7553c12cae"}: {}
        f:spec:
          f:containers:
            k:{"name":"chaos-runner"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"ANNOTATION_CHECK"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ANNOTATION_KEY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"APP_KIND"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"APP_LABEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"APP_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOS_SVC_ACC"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOSENGINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EXPERIMENT_LIST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: chaos-operator
      operation: Update
      time: "2023-03-27T13:36:30Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T13:37:30Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.120"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T13:37:32Z"
    name: pod-network-loss-chaos9b6k8-runner
    namespace: litmus
    ownerReferences:
    - apiVersion: litmuschaos.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: ChaosEngine
      name: pod-network-loss-chaos9b6k8
      uid: 49b7adf7-8b81-47ab-9d5c-9f7553c12cae
    resourceVersion: "1578979"
    uid: 1c2e65ac-3f3f-4dd1-9e68-3ee9edf57931
  spec:
    containers:
    - env:
      - name: CHAOSENGINE
        value: pod-network-loss-chaos9b6k8
      - name: APP_LABEL
        value: name in (balancereader,transactionhistory)
      - name: APP_KIND
        value: deployment
      - name: APP_NAMESPACE
        value: bank
      - name: EXPERIMENT_LIST
        value: pod-network-loss
      - name: CHAOS_SVC_ACC
        value: litmus-admin
      - name: CHAOS_NAMESPACE
        value: litmus
      - name: ANNOTATION_CHECK
        value: "false"
      - name: ANNOTATION_KEY
        value: litmuschaos.io/chaos
      image: litmuschaos/chaos-runner:2.14.0
      imagePullPolicy: Always
      name: chaos-runner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zmk5b
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: OnFailure
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: litmus-admin
    serviceAccountName: litmus-admin
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: kube-api-access-zmk5b
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:36:30Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:37:29Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:37:29Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:36:30Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4b45e2b1addd46b8303672ca1a7a5238b19d3b81e4380bbd43c578f0dd6c5601
      image: docker.io/litmuschaos/chaos-runner:2.14.0
      imageID: docker.io/litmuschaos/chaos-runner@sha256:a5fcf3f1766975ec6e4730c0aefdf9705af20c67d9ff68372168c8856acba7af
      lastState: {}
      name: chaos-runner
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://4b45e2b1addd46b8303672ca1a7a5238b19d3b81e4380bbd43c578f0dd6c5601
          exitCode: 0
          finishedAt: "2023-03-27T13:37:28Z"
          reason: Completed
          startedAt: "2023-03-27T13:36:34Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.120
    podIPs:
    - ip: 172.30.140.120
    qosClass: BestEffort
    startTime: "2023-03-27T13:36:30Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 4e9a2850c38fa4d5cb14f13ae0ca8393cd48433e791fb0f68a9efa5b86b2ca04
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
    creationTimestamp: "2023-03-27T16:28:58Z"
    labels:
      app: pod-network-loss-chaoslf8hs
      app.kubernetes.io/component: chaos-runner
      app.kubernetes.io/part-of: litmus
      chaosUID: 8cd4258c-5274-4cc2-8187-8273791de517
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/part-of: {}
            f:chaosUID: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8cd4258c-5274-4cc2-8187-8273791de517"}: {}
        f:spec:
          f:containers:
            k:{"name":"chaos-runner"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"ANNOTATION_CHECK"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ANNOTATION_KEY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"APP_KIND"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"APP_LABEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"APP_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOS_SVC_ACC"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOSENGINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EXPERIMENT_LIST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: chaos-operator
      operation: Update
      time: "2023-03-27T16:28:58Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T16:29:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.167"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T16:29:53Z"
    name: pod-network-loss-chaoslf8hs-runner
    namespace: litmus
    ownerReferences:
    - apiVersion: litmuschaos.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: ChaosEngine
      name: pod-network-loss-chaoslf8hs
      uid: 8cd4258c-5274-4cc2-8187-8273791de517
    resourceVersion: "1601611"
    uid: 638ec9e7-02f9-48ac-acf2-eced72afdb8b
  spec:
    containers:
    - env:
      - name: CHAOSENGINE
        value: pod-network-loss-chaoslf8hs
      - name: APP_LABEL
        value: name=balancereader
      - name: APP_KIND
        value: deployment
      - name: APP_NAMESPACE
        value: bank
      - name: EXPERIMENT_LIST
        value: pod-network-loss
      - name: CHAOS_SVC_ACC
        value: litmus-admin
      - name: CHAOS_NAMESPACE
        value: litmus
      - name: ANNOTATION_CHECK
        value: "false"
      - name: ANNOTATION_KEY
        value: litmuschaos.io/chaos
      image: litmuschaos/chaos-runner:2.14.0
      imagePullPolicy: Always
      name: chaos-runner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jsbd9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: OnFailure
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: litmus-admin
    serviceAccountName: litmus-admin
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: kube-api-access-jsbd9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:28:58Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:29:50Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:29:50Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:28:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3dea929606443aaf6c21df56264a064aee6a53a68caf3883d6afbc63abe6061a
      image: docker.io/litmuschaos/chaos-runner:2.14.0
      imageID: docker.io/litmuschaos/chaos-runner@sha256:a5fcf3f1766975ec6e4730c0aefdf9705af20c67d9ff68372168c8856acba7af
      lastState: {}
      name: chaos-runner
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://3dea929606443aaf6c21df56264a064aee6a53a68caf3883d6afbc63abe6061a
          exitCode: 0
          finishedAt: "2023-03-27T16:29:50Z"
          reason: Completed
          startedAt: "2023-03-27T16:29:02Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.167
    podIPs:
    - ip: 172.30.188.167
    qosClass: BestEffort
    startTime: "2023-03-27T16:28:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: e44ae97ab9485d2f64d52f45cd35a1381eaae900e94e777e92437186a524165b
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
    creationTimestamp: "2023-03-27T13:36:35Z"
    generateName: pod-network-loss-pgta7r-
    labels:
      app.kubernetes.io/component: experiment-job
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/runtime-api-usage: "true"
      app.kubernetes.io/version: latest
      chaosUID: 49b7adf7-8b81-47ab-9d5c-9f7553c12cae
      controller-uid: cb100e92-c6bc-43d7-8630-c6d58c32cee8
      job-name: pod-network-loss-pgta7r
      name: pod-network-loss
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/runtime-api-usage: {}
            f:app.kubernetes.io/version: {}
            f:chaosUID: {}
            f:controller-uid: {}
            f:job-name: {}
            f:name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"cb100e92-c6bc-43d7-8630-c6d58c32cee8"}: {}
        f:spec:
          f:containers:
            k:{"name":"pod-network-loss-pgta7r"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ANNOTATION_CHECK"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ANNOTATION_KEY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"APP_KIND"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"APP_LABEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"APP_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOS_SERVICE_ACCOUNT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOS_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOSENGINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CONTAINER_RUNTIME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DESTINATION_HOSTS"}:
                  .: {}
                  f:name: {}
                k:{"name":"DESTINATION_IPS"}:
                  .: {}
                  f:name: {}
                k:{"name":"EXPERIMENT_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"JOB_CLEANUP_POLICY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LIB_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LIB_IMAGE_PULL_POLICY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NETWORK_INTERFACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NETWORK_PACKET_LOSS_PERCENTAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NODE_LABEL"}:
                  .: {}
                  f:name: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"PODS_AFFECTED_PERC"}:
                  .: {}
                  f:name: {}
                k:{"name":"RAMP_TIME"}:
                  .: {}
                  f:name: {}
                k:{"name":"SEQUENCE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SOCKET_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"STATUS_CHECK_DELAY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"STATUS_CHECK_TIMEOUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TARGET_CONTAINER"}:
                  .: {}
                  f:name: {}
                k:{"name":"TARGET_PODS"}:
                  .: {}
                  f:name: {}
                k:{"name":"TC_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TERMINATION_GRACE_PERIOD_SECONDS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TOTAL_CHAOS_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-27T13:36:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T13:37:17Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.166"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T13:37:17Z"
    name: pod-network-loss-pgta7r-s7tcf
    namespace: litmus
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: pod-network-loss-pgta7r
      uid: cb100e92-c6bc-43d7-8630-c6d58c32cee8
    resourceVersion: "1578937"
    uid: a6ca76ae-c44f-4d06-a92d-58def53a393a
  spec:
    containers:
    - args:
      - -c
      - ./experiments -name pod-network-loss
      command:
      - /bin/bash
      env:
      - name: LIB_IMAGE_PULL_POLICY
        value: Always
      - name: TARGET_CONTAINER
      - name: NETWORK_INTERFACE
        value: eth0
      - name: APP_LABEL
        value: name in (balancereader,transactionhistory)
      - name: NETWORK_PACKET_LOSS_PERCENTAGE
        value: "100"
      - name: TOTAL_CHAOS_DURATION
        value: "90"
      - name: NODE_LABEL
      - name: STATUS_CHECK_TIMEOUT
        value: "180"
      - name: CHAOS_SERVICE_ACCOUNT
        value: litmus-admin
      - name: TARGET_PODS
      - name: SOCKET_PATH
        value: /var/run/docker.sock
      - name: JOB_CLEANUP_POLICY
        value: retain
      - name: APP_NAMESPACE
        value: bank
      - name: APP_KIND
        value: deployment
      - name: PODS_AFFECTED_PERC
      - name: DESTINATION_IPS
      - name: DESTINATION_HOSTS
      - name: STATUS_CHECK_DELAY
        value: "2"
      - name: TC_IMAGE
        value: gaiadocker/iproute2
      - name: RAMP_TIME
      - name: CHAOS_NAMESPACE
        value: litmus
      - name: EXPERIMENT_NAME
        value: pod-network-loss
      - name: TERMINATION_GRACE_PERIOD_SECONDS
        value: "0"
      - name: CHAOS_UID
        value: 49b7adf7-8b81-47ab-9d5c-9f7553c12cae
      - name: ANNOTATION_CHECK
        value: "false"
      - name: CHAOSENGINE
        value: pod-network-loss-chaos9b6k8
      - name: ANNOTATION_KEY
        value: litmuschaos.io/chaos
      - name: LIB_IMAGE
        value: litmuschaos/go-runner:latest
      - name: CONTAINER_RUNTIME
        value: docker
      - name: SEQUENCE
        value: parallel
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: litmuschaos/go-runner:latest
      imagePullPolicy: Always
      name: pod-network-loss-pgta7r
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mfwdp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: litmus-admin
    serviceAccountName: litmus-admin
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: kube-api-access-mfwdp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:36:35Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:37:15Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:37:15Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:36:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://fe593183633c97ba72b8126c41f8609f78900ca7b73c056a6ef52b1ece91be9f
      image: docker.io/litmuschaos/go-runner:latest
      imageID: docker.io/litmuschaos/go-runner@sha256:8ea284c51d66f2946d7b7bb43fbe5d0ed9cb94dba194e06893798bad3199d05d
      lastState: {}
      name: pod-network-loss-pgta7r
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://fe593183633c97ba72b8126c41f8609f78900ca7b73c056a6ef52b1ece91be9f
          exitCode: 0
          finishedAt: "2023-03-27T13:37:14Z"
          reason: Completed
          startedAt: "2023-03-27T13:37:03Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.166
    podIPs:
    - ip: 172.30.188.166
    qosClass: BestEffort
    startTime: "2023-03-27T13:36:35Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 9949509b81047da9188ca48f04662714c2c31ad84a7788fa0c5a6088a91dff12
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
    creationTimestamp: "2023-03-27T16:29:03Z"
    generateName: pod-network-loss-wfc04e-
    labels:
      app.kubernetes.io/component: experiment-job
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/runtime-api-usage: "true"
      app.kubernetes.io/version: latest
      chaosUID: 8cd4258c-5274-4cc2-8187-8273791de517
      controller-uid: e7fdb2b6-dd80-4211-8073-f4e3c2dc657d
      job-name: pod-network-loss-wfc04e
      name: pod-network-loss
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/runtime-api-usage: {}
            f:app.kubernetes.io/version: {}
            f:chaosUID: {}
            f:controller-uid: {}
            f:job-name: {}
            f:name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e7fdb2b6-dd80-4211-8073-f4e3c2dc657d"}: {}
        f:spec:
          f:containers:
            k:{"name":"pod-network-loss-wfc04e"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ANNOTATION_CHECK"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ANNOTATION_KEY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"APP_KIND"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"APP_LABEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"APP_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOS_SERVICE_ACCOUNT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOS_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOSENGINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CONTAINER_RUNTIME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DESTINATION_HOSTS"}:
                  .: {}
                  f:name: {}
                k:{"name":"DESTINATION_IPS"}:
                  .: {}
                  f:name: {}
                k:{"name":"EXPERIMENT_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"JOB_CLEANUP_POLICY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LIB_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LIB_IMAGE_PULL_POLICY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NETWORK_INTERFACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NETWORK_PACKET_LOSS_PERCENTAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NODE_LABEL"}:
                  .: {}
                  f:name: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"PODS_AFFECTED_PERC"}:
                  .: {}
                  f:name: {}
                k:{"name":"RAMP_TIME"}:
                  .: {}
                  f:name: {}
                k:{"name":"SEQUENCE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SOCKET_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"STATUS_CHECK_DELAY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"STATUS_CHECK_TIMEOUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TARGET_CONTAINER"}:
                  .: {}
                  f:name: {}
                k:{"name":"TARGET_PODS"}:
                  .: {}
                  f:name: {}
                k:{"name":"TC_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TERMINATION_GRACE_PERIOD_SECONDS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TOTAL_CHAOS_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-27T16:29:03Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T16:29:43Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.122"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T16:29:44Z"
    name: pod-network-loss-wfc04e-n5p5j
    namespace: litmus
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: pod-network-loss-wfc04e
      uid: e7fdb2b6-dd80-4211-8073-f4e3c2dc657d
    resourceVersion: "1601583"
    uid: 4f5db6cc-2363-44c5-aa39-d03b4d70537d
  spec:
    containers:
    - args:
      - -c
      - ./experiments -name pod-network-loss
      command:
      - /bin/bash
      env:
      - name: CHAOS_NAMESPACE
        value: litmus
      - name: LIB_IMAGE
        value: litmuschaos/go-runner:latest
      - name: PODS_AFFECTED_PERC
      - name: TC_IMAGE
        value: gaiadocker/iproute2
      - name: RAMP_TIME
      - name: CHAOSENGINE
        value: pod-network-loss-chaoslf8hs
      - name: CHAOS_UID
        value: 8cd4258c-5274-4cc2-8187-8273791de517
      - name: ANNOTATION_KEY
        value: litmuschaos.io/chaos
      - name: NODE_LABEL
      - name: STATUS_CHECK_DELAY
        value: "2"
      - name: LIB_IMAGE_PULL_POLICY
        value: Always
      - name: TARGET_CONTAINER
      - name: NETWORK_PACKET_LOSS_PERCENTAGE
        value: "100"
      - name: APP_KIND
        value: deployment
      - name: TARGET_PODS
      - name: STATUS_CHECK_TIMEOUT
        value: "180"
      - name: TERMINATION_GRACE_PERIOD_SECONDS
        value: "0"
      - name: CHAOS_SERVICE_ACCOUNT
        value: litmus-admin
      - name: DESTINATION_IPS
      - name: JOB_CLEANUP_POLICY
        value: retain
      - name: ANNOTATION_CHECK
        value: "false"
      - name: NETWORK_INTERFACE
        value: eth0
      - name: SOCKET_PATH
        value: /var/run/docker.sock
      - name: TOTAL_CHAOS_DURATION
        value: "90"
      - name: CONTAINER_RUNTIME
        value: docker
      - name: DESTINATION_HOSTS
      - name: APP_LABEL
        value: name=balancereader
      - name: APP_NAMESPACE
        value: bank
      - name: EXPERIMENT_NAME
        value: pod-network-loss
      - name: SEQUENCE
        value: parallel
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: litmuschaos/go-runner:latest
      imagePullPolicy: Always
      name: pod-network-loss-wfc04e
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v5g8s
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: litmus-admin
    serviceAccountName: litmus-admin
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: kube-api-access-v5g8s
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:29:03Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:29:41Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:29:41Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:29:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a613a5b4bc23a25c4e836371f9c4ec553e56e3363ed1e6222ad692e0db5c7035
      image: docker.io/litmuschaos/go-runner:latest
      imageID: docker.io/litmuschaos/go-runner@sha256:8ea284c51d66f2946d7b7bb43fbe5d0ed9cb94dba194e06893798bad3199d05d
      lastState: {}
      name: pod-network-loss-wfc04e
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://a613a5b4bc23a25c4e836371f9c4ec553e56e3363ed1e6222ad692e0db5c7035
          exitCode: 0
          finishedAt: "2023-03-27T16:29:40Z"
          reason: Completed
          startedAt: "2023-03-27T16:29:30Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.122
    podIPs:
    - ip: 172.30.140.122
    qosClass: BestEffort
    startTime: "2023-03-27T16:29:03Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 6bfd28ce376563b2946851c0d568320e4506aab3d2f28290104e51487cda649a
      cni.projectcalico.org/podIP: 172.30.140.109/32
      cni.projectcalico.org/podIPs: 172.30.140.109/32
    creationTimestamp: "2023-03-23T08:16:50Z"
    generateName: subscriber-686d9b8dd9-
    labels:
      app: subscriber
      pod-template-hash: 686d9b8dd9
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"69fc4480-197d-453c-98bd-7f7fef7f3bf8"}: {}
        f:spec:
          f:containers:
            k:{"name":"subscriber"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"AGENT_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:envFrom: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.109"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T08:17:49Z"
    name: subscriber-686d9b8dd9-nbnvl
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: subscriber-686d9b8dd9
      uid: 69fc4480-197d-453c-98bd-7f7fef7f3bf8
    resourceVersion: "863196"
    uid: fdef6beb-1781-43c7-a1bc-161ac2ba26f4
  spec:
    containers:
    - env:
      - name: AGENT_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      envFrom:
      - configMapRef:
          name: agent-config
      - secretRef:
          name: agent-secret
      image: litmuschaos/litmusportal-subscriber:2.14.0
      imagePullPolicy: Always
      name: subscriber
      resources:
        limits:
          cpu: 225m
          ephemeral-storage: 1Gi
          memory: 500Mi
        requests:
          cpu: 125m
          ephemeral-storage: 500Mi
          memory: 300Mi
      securityContext:
        allowPrivilegeEscalation: false
        runAsUser: 2000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v9s66
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: litmus
    serviceAccountName: litmus
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: kube-api-access-v9s66
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:50Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:17:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:17:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7e5ba49badf2af18be188f99d3acb9092e96d7d2f1929be00c1b2168b22fe676
      image: docker.io/litmuschaos/litmusportal-subscriber:2.14.0
      imageID: docker.io/litmuschaos/litmusportal-subscriber@sha256:59e6dd6db68eb7c85a3886bbf0c044ff4c9cbcd632bbb35fcec1c004152077b3
      lastState:
        terminated:
          containerID: containerd://175bb1d5f366c6ef27f31391ecdbd7eff0f3eb8cdeba53616475d37a689c7df8
          exitCode: 1
          finishedAt: "2023-03-23T08:17:33Z"
          reason: Error
          startedAt: "2023-03-23T08:17:31Z"
      name: subscriber
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2023-03-23T08:17:49Z"
    hostIP: 10.85.149.20
    phase: Running
    podIP: 172.30.140.109
    podIPs:
    - ip: 172.30.140.109
    qosClass: Burstable
    startTime: "2023-03-23T08:16:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 2a836b0e5b1959ec05e1e751495d44255b7d827eca7e4d842e6d8f23482c9e33
      cni.projectcalico.org/podIP: 172.30.188.191/32
      cni.projectcalico.org/podIPs: 172.30.188.191/32
    creationTimestamp: "2023-03-23T08:16:50Z"
    generateName: workflow-controller-768f7d94dc-
    labels:
      app: workflow-controller
      pod-template-hash: 768f7d94dc
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"afee2f90-ed75-4509-aa00-859a26e7c6d3"}: {}
        f:spec:
          f:containers:
            k:{"name":"workflow-controller"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"LEADER_ELECTION_DISABLE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.191"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:53Z"
    name: workflow-controller-768f7d94dc-ghwlf
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: workflow-controller-768f7d94dc
      uid: afee2f90-ed75-4509-aa00-859a26e7c6d3
    resourceVersion: "863008"
    uid: 7d4835cb-a31a-4f41-9167-134fde66f4b7
  spec:
    containers:
    - args:
      - --configmap
      - workflow-controller-configmap
      - --executor-image
      - litmuschaos/argoexec:v3.3.1
      - --container-runtime-executor
      - k8sapi
      command:
      - workflow-controller
      env:
      - name: LEADER_ELECTION_DISABLE
        value: "true"
      image: litmuschaos/workflow-controller:v3.3.1
      imagePullPolicy: IfNotPresent
      name: workflow-controller
      resources:
        limits:
          cpu: 225m
          ephemeral-storage: 1Gi
          memory: 500Mi
        requests:
          cpu: 125m
          ephemeral-storage: 500Mi
          memory: 300Mi
      securityContext:
        allowPrivilegeEscalation: false
        runAsUser: 2000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sx7n2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argo
    serviceAccountName: argo
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: kube-api-access-sx7n2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:50Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1b91af1f43f1047c03543fcf08e2cb6f2e13b1b399847d7c6768aac15adc862c
      image: docker.io/litmuschaos/workflow-controller:v3.3.1
      imageID: docker.io/litmuschaos/workflow-controller@sha256:054ba49a9b225a3b49a132b7690662d132c7b73aab1084edb24eccf4557b9e6e
      lastState: {}
      name: workflow-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-23T08:16:53Z"
    hostIP: 10.85.149.8
    phase: Running
    podIP: 172.30.188.191
    podIPs:
    - ip: 172.30.188.191
    qosClass: Burstable
    startTime: "2023-03-23T08:16:50Z"
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2023-03-20T09:46:38Z"
    labels:
      app: chaos-exporter
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":8080,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: server
      operation: Update
      time: "2023-03-20T09:46:38Z"
    name: chaos-exporter
    namespace: litmus
    resourceVersion: "427127"
    uid: cc6ffd31-e8c9-4f85-bbdf-3cfbbde439ac
  spec:
    clusterIP: 172.21.22.236
    clusterIPs:
    - 172.21.22.236
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: chaos-exporter
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: chaos
      meta.helm.sh/release-namespace: litmus
    creationTimestamp: "2023-03-19T14:17:35Z"
    labels:
      app.kubernetes.io/component: litmus-auth-server
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: litmus
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: 2.15.10
      helm.sh/chart: litmus-2.15.10
      litmuschaos.io/version: 2.14.0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:litmuschaos.io/version: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":3030,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":9003,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: helm
      operation: Update
      time: "2023-03-19T14:17:35Z"
    name: chaos-litmus-auth-server-service
    namespace: litmus
    resourceVersion: "357911"
    uid: 58b7460b-9690-4262-9591-16d83dd09b97
  spec:
    clusterIP: 172.21.134.48
    clusterIPs:
    - 172.21.134.48
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: auth-server
      port: 9003
      protocol: TCP
      targetPort: 3000
    - name: auth-rpc-server
      port: 3030
      protocol: TCP
      targetPort: 3030
    selector:
      app.kubernetes.io/component: litmus-auth-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: chaos
      meta.helm.sh/release-namespace: litmus
    creationTimestamp: "2023-03-19T14:17:35Z"
    labels:
      app.kubernetes.io/component: litmus-frontend
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: litmus
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: 2.15.10
      helm.sh/chart: litmus-2.15.10
      litmuschaos.io/version: 2.14.0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:litmuschaos.io/version: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":9091,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: helm
      operation: Update
      time: "2023-03-19T14:17:35Z"
    name: chaos-litmus-frontend-service
    namespace: litmus
    resourceVersion: "357909"
    uid: 050a73de-f5ac-42e2-a7e5-c348ff3e1206
  spec:
    clusterIP: 172.21.206.230
    clusterIPs:
    - 172.21.206.230
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 9091
      protocol: TCP
      targetPort: 8080
    selector:
      app.kubernetes.io/component: litmus-frontend
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: chaos
      meta.helm.sh/release-namespace: litmus
    creationTimestamp: "2023-03-19T14:17:35Z"
    labels:
      app.kubernetes.io/component: litmus-server
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: litmus
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: 2.15.10
      helm.sh/chart: litmus-2.15.10
      litmuschaos.io/version: 2.14.0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:litmuschaos.io/version: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":8000,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":9002,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: helm
      operation: Update
      time: "2023-03-19T14:17:35Z"
    name: chaos-litmus-server-service
    namespace: litmus
    resourceVersion: "357906"
    uid: b5932b8e-775a-40ea-afe9-cb8d990de194
  spec:
    clusterIP: 172.21.140.41
    clusterIPs:
    - 172.21.140.41
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: graphql-server
      port: 9002
      protocol: TCP
      targetPort: 8080
    - name: graphql-rpc-server
      port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      app.kubernetes.io/component: litmus-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: chaos
      meta.helm.sh/release-namespace: litmus
    creationTimestamp: "2023-03-19T14:17:35Z"
    labels:
      app.kubernetes.io/component: mongodb
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: mongodb
      helm.sh/chart: mongodb-12.1.11
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":27017,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: helm
      operation: Update
      time: "2023-03-19T14:17:35Z"
    name: chaos-mongodb
    namespace: litmus
    resourceVersion: "357913"
    uid: 2505cda7-ca29-4c91-b6e2-8f89000eea1b
  spec:
    clusterIP: 172.21.151.126
    clusterIPs:
    - 172.21.151.126
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: mongodb
      port: 27017
      protocol: TCP
      targetPort: mongodb
    selector:
      app.kubernetes.io/component: mongodb
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/name: mongodb
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2023-03-20T09:46:40Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":9090,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: server
      operation: Update
      time: "2023-03-20T09:46:40Z"
    name: workflow-controller-metrics
    namespace: litmus
    resourceVersion: "427164"
    uid: 454f36d8-4078-4303-9e3b-b15503af3704
  spec:
    clusterIP: 172.21.193.102
    clusterIPs:
    - 172.21.193.102
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: metrics
      port: 9090
      protocol: TCP
      targetPort: 9090
    selector:
      app: workflow-controller
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-20T09:46:37Z"
    generation: 5
    labels:
      app: chaos-exporter
      release: prometheus-stack
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:release: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:release: {}
            f:spec:
              f:containers:
                k:{"name":"chaos-exporter"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"TSDB_SCRAPE_INTERVAL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: server
      operation: Update
      time: "2023-03-20T09:46:37Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:54Z"
    name: chaos-exporter
    namespace: litmus
    resourceVersion: "863025"
    uid: 48e97e94-3ff4-4f7c-9820-62f3c452960a
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: chaos-exporter
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: chaos-exporter
          release: prometheus-stack
      spec:
        containers:
        - env:
          - name: TSDB_SCRAPE_INTERVAL
            value: "10"
          image: litmuschaos/chaos-exporter:2.14.0
          imagePullPolicy: Always
          name: chaos-exporter
          ports:
          - containerPort: 8080
            name: tcp
            protocol: TCP
          resources:
            limits:
              cpu: 225m
              ephemeral-storage: 1Gi
              memory: 500Mi
            requests:
              cpu: 125m
              ephemeral-storage: 500Mi
              memory: 300Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: litmus-cluster-scope
        serviceAccountName: litmus-cluster-scope
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-03-20T09:46:37Z"
      lastUpdateTime: "2023-03-20T09:46:46Z"
      message: ReplicaSet "chaos-exporter-6c9b5988c4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-03-23T08:16:54Z"
      lastUpdateTime: "2023-03-23T08:16:54Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: chaos
      meta.helm.sh/release-namespace: litmus
    creationTimestamp: "2023-03-19T14:17:35Z"
    generation: 5
    labels:
      app.kubernetes.io/component: litmus-auth-server
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: litmus
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: 2.15.10
      helm.sh/chart: litmus-2.15.10
      litmuschaos.io/version: 2.14.0
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:litmuschaos.io/version: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:helm.sh/chart: {}
                f:litmuschaos.io/version: {}
            f:spec:
              f:automountServiceAccountToken: {}
              f:containers:
                k:{"name":"auth-server"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"DB_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"DB_USER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_GQL_GRPC_ENDPOINT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_GQL_GRPC_PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":3000,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":3030,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:initContainers:
                .: {}
                k:{"name":"wait-for-mongodb"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: helm
      operation: Update
      time: "2023-03-19T14:17:35Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:17:27Z"
    name: chaos-litmus-auth-server
    namespace: litmus
    resourceVersion: "863128"
    uid: d58ac3a9-feb6-4ace-a8b0-40a6af98ee36
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: litmus-auth-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: litmus-auth-server
          app.kubernetes.io/instance: chaos
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: litmus
          app.kubernetes.io/part-of: litmus
          app.kubernetes.io/version: 2.15.10
          helm.sh/chart: litmus-2.15.10
          litmuschaos.io/version: 2.14.0
      spec:
        automountServiceAccountToken: false
        containers:
        - env:
          - name: DB_PASSWORD
            value: superhardpassword
          - name: DB_USER
            value: root
          - name: LITMUS_GQL_GRPC_ENDPOINT
            value: chaos-litmus-server-service
          - name: LITMUS_GQL_GRPC_PORT
            value: :8000
          envFrom:
          - secretRef:
              name: chaos-litmus-admin-secret
          - configMapRef:
              name: chaos-litmus-admin-config
          image: litmuschaos/litmusportal-auth-server:2.14.0
          imagePullPolicy: Always
          name: auth-server
          ports:
          - containerPort: 3030
            name: auth-server
            protocol: TCP
          - containerPort: 3000
            name: auth-rpc-server
            protocol: TCP
          resources:
            limits:
              cpu: 550m
              ephemeral-storage: 1Gi
              memory: 712Mi
            requests:
              cpu: 225m
              ephemeral-storage: 500Mi
              memory: 250Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - while [[ $(curl -sw '%{http_code}' http://chaos-mongodb:27017 -o /dev/null)
            -ne 200 ]]; do sleep 5; echo 'Waiting for the MongoDB to be ready...';
            done; echo 'Connection with MongoDB established'
          command:
          - /bin/sh
          - -c
          image: litmuschaos/curl:2.14.0
          imagePullPolicy: Always
          name: wait-for-mongodb
          resources:
            limits:
              cpu: 250m
              ephemeral-storage: 1Gi
              memory: 512Mi
            requests:
              cpu: 25m
              ephemeral-storage: 500Mi
              memory: 150Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: litmus-server-account
        serviceAccountName: litmus-server-account
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-03-20T09:37:10Z"
      lastUpdateTime: "2023-03-20T09:37:10Z"
      message: ReplicaSet "chaos-litmus-auth-server-b8dcdf66b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-03-23T08:17:26Z"
      lastUpdateTime: "2023-03-23T08:17:26Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: chaos
      meta.helm.sh/release-namespace: litmus
    creationTimestamp: "2023-03-19T14:17:35Z"
    generation: 5
    labels:
      app.kubernetes.io/component: litmus-frontend
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: litmus
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: 2.15.10
      helm.sh/chart: litmus-2.15.10
      litmuschaos.io/version: 2.14.0
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:litmuschaos.io/version: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:helm.sh/chart: {}
                f:litmuschaos.io/version: {}
            f:spec:
              f:automountServiceAccountToken: {}
              f:containers:
                k:{"name":"litmusportal-frontend"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/nginx/conf.d/default.conf"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:subPath: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"nginx-config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
      manager: helm
      operation: Update
      time: "2023-03-19T14:17:35Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:17:00Z"
    name: chaos-litmus-frontend
    namespace: litmus
    resourceVersion: "863053"
    uid: 8afe133f-a565-423d-8b39-87e0f01f7bf9
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: litmus-frontend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: litmus-frontend
          app.kubernetes.io/instance: chaos
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: litmus
          app.kubernetes.io/part-of: litmus
          app.kubernetes.io/version: 2.15.10
          helm.sh/chart: litmus-2.15.10
          litmuschaos.io/version: 2.14.0
      spec:
        automountServiceAccountToken: false
        containers:
        - image: litmuschaos/litmusportal-frontend:2.14.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: litmusportal-frontend
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 550m
              ephemeral-storage: 1Gi
              memory: 512Mi
            requests:
              cpu: 125m
              ephemeral-storage: 500Mi
              memory: 150Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/nginx/conf.d/default.conf
            name: nginx-config
            subPath: default.conf
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: chaos-litmus-frontend-nginx-configuration
          name: nginx-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-03-19T14:17:35Z"
      lastUpdateTime: "2023-03-19T14:17:56Z"
      message: ReplicaSet "chaos-litmus-frontend-6ffc95c884" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-03-23T08:17:00Z"
      lastUpdateTime: "2023-03-23T08:17:00Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: chaos
      meta.helm.sh/release-namespace: litmus
    creationTimestamp: "2023-03-19T14:17:35Z"
    generation: 5
    labels:
      app.kubernetes.io/component: litmus-server
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: litmus
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: 2.15.10
      helm.sh/chart: litmus-2.15.10
      litmuschaos.io/version: 2.14.0
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:litmuschaos.io/version: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:helm.sh/chart: {}
                f:litmuschaos.io/version: {}
            f:spec:
              f:containers:
                k:{"name":"graphql-server"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"AGENT_DEPLOYMENTS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ARGO_WORKFLOW_CONTROLLER_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ARGO_WORKFLOW_EXECUTOR_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOS_CENTER_SCOPE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOS_CENTER_UI_ENDPOINT"}:
                      .: {}
                      f:name: {}
                    k:{"name":"CONTAINER_RUNTIME_EXECUTOR"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"DB_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"DB_USER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"EVENT_TRACKER_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"HUB_BRANCH_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"INGRESS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"INGRESS_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_AUTH_GRPC_ENDPOINT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_AUTH_GRPC_PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_CHAOS_EXPORTER_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_CHAOS_OPERATOR_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_CHAOS_RUNNER_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_PORTAL_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"NODE_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"REMOTE_HUB_MAX_SIZE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SELF_AGENT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SELF_AGENT_NODE_SELECTOR"}:
                      .: {}
                      f:name: {}
                    k:{"name":"SELF_AGENT_TOLERATIONS"}:
                      .: {}
                      f:name: {}
                    k:{"name":"SERVER_SERVICE_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SUBSCRIBER_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TLS_CERT_64"}:
                      .: {}
                      f:name: {}
                    k:{"name":"TLS_SECRET_NAME"}:
                      .: {}
                      f:name: {}
                    k:{"name":"WORKFLOW_HELPER_IMAGE_VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8000,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/tmp/"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp/version"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:initContainers:
                .: {}
                k:{"name":"wait-for-mongodb"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"gitops-storage"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
                k:{"name":"hub-storage"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: helm
      operation: Update
      time: "2023-03-19T14:17:35Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:17:40Z"
    name: chaos-litmus-server
    namespace: litmus
    resourceVersion: "863172"
    uid: ce145649-c0f8-47eb-af46-efc3e38ec4a0
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: litmus-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: litmus-server
          app.kubernetes.io/instance: chaos
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: litmus
          app.kubernetes.io/part-of: litmus
          app.kubernetes.io/version: 2.15.10
          helm.sh/chart: litmus-2.15.10
          litmuschaos.io/version: 2.14.0
      spec:
        containers:
        - env:
          - name: DB_PASSWORD
            value: superhardpassword
          - name: DB_USER
            value: root
          - name: LITMUS_PORTAL_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CHAOS_CENTER_SCOPE
            value: cluster
          - name: SERVER_SERVICE_NAME
            value: chaos-litmus-server-service
          - name: INGRESS
            value: "false"
          - name: INGRESS_NAME
            value: litmus-ingress
          - name: LITMUS_AUTH_GRPC_ENDPOINT
            value: chaos-litmus-auth-server-service
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: ARGO_WORKFLOW_CONTROLLER_IMAGE
            value: litmuschaos/workflow-controller:v3.3.1
          - name: ARGO_WORKFLOW_EXECUTOR_IMAGE
            value: litmuschaos/argoexec:v3.3.1
          - name: EVENT_TRACKER_IMAGE
            value: litmuschaos/litmusportal-event-tracker:2.14.0
          - name: LITMUS_CHAOS_EXPORTER_IMAGE
            value: litmuschaos/chaos-exporter:2.14.0
          - name: LITMUS_CHAOS_OPERATOR_IMAGE
            value: litmuschaos/chaos-operator:2.14.0
          - name: LITMUS_CHAOS_RUNNER_IMAGE
            value: litmuschaos/chaos-runner:2.14.0
          - name: SUBSCRIBER_IMAGE
            value: litmuschaos/litmusportal-subscriber:2.14.0
          - name: AGENT_DEPLOYMENTS
            value: '["app=chaos-exporter", "name=chaos-operator", "app=event-tracker",
              "app=workflow-controller"]'
          - name: CHAOS_CENTER_UI_ENDPOINT
          - name: CONTAINER_RUNTIME_EXECUTOR
            value: k8sapi
          - name: HUB_BRANCH_NAME
            value: v2.14.x
          - name: LITMUS_AUTH_GRPC_PORT
            value: :3030
          - name: REMOTE_HUB_MAX_SIZE
            value: "5000000"
          - name: SELF_AGENT
            value: "true"
          - name: SELF_AGENT_NODE_SELECTOR
          - name: SELF_AGENT_TOLERATIONS
          - name: TLS_CERT_64
          - name: TLS_SECRET_NAME
          - name: WORKFLOW_HELPER_IMAGE_VERSION
            value: 2.14.0
          envFrom:
          - secretRef:
              name: chaos-litmus-admin-secret
          - configMapRef:
              name: chaos-litmus-admin-config
          image: litmuschaos/litmusportal-server:2.14.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: gql-server
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: graphql-server
          ports:
          - containerPort: 8080
            name: gql-server
            protocol: TCP
          - containerPort: 8000
            name: gql-rpc-server
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: gql-server
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 550m
              ephemeral-storage: 1Gi
              memory: 712Mi
            requests:
              cpu: 225m
              ephemeral-storage: 500Mi
              memory: 250Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/
            name: gitops-storage
          - mountPath: /tmp/version
            name: hub-storage
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - while [[ $(curl -sw '%{http_code}' http://chaos-mongodb:27017 -o /dev/null)
            -ne 200 ]]; do sleep 5; echo 'Waiting for the MongoDB to be ready...';
            done; echo 'Connection with MongoDB established'
          command:
          - /bin/sh
          - -c
          image: litmuschaos/curl:2.14.0
          imagePullPolicy: Always
          name: wait-for-mongodb
          resources:
            limits:
              cpu: 250m
              ephemeral-storage: 1Gi
              memory: 512Mi
            requests:
              cpu: 25m
              ephemeral-storage: 500Mi
              memory: 150Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: litmus-server-account
        serviceAccountName: litmus-server-account
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: gitops-storage
        - emptyDir: {}
          name: hub-storage
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-03-20T09:37:26Z"
      lastUpdateTime: "2023-03-20T09:37:26Z"
      message: ReplicaSet "chaos-litmus-server-585786dd9c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-03-23T08:17:40Z"
      lastUpdateTime: "2023-03-23T08:17:40Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: chaos
      meta.helm.sh/release-namespace: litmus
    creationTimestamp: "2023-03-19T14:17:35Z"
    generation: 8
    labels:
      app.kubernetes.io/component: mongodb
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: mongodb
      helm.sh/chart: mongodb-12.1.11
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:helm.sh/chart: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"mongodb"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"ALLOW_EMPTY_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"BITNAMI_DEBUG"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_DISABLE_JAVASCRIPT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_DISABLE_SYSTEM_LOG"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_ENABLE_DIRECTORY_PER_DB"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_ENABLE_IPV6"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_ENABLE_JOURNAL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_PORT_NUMBER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_ROOT_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                    k:{"name":"MONGODB_ROOT_USER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_SYSTEM_LOG_VERBOSITY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":27017,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/bitnami/mongodb"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/bitnami/scripts"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"common-scripts"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"datadir"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
      manager: helm
      operation: Update
      time: "2023-03-19T14:17:35Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kubectl.kubernetes.io/restartedAt: {}
      manager: kubectl
      operation: Update
      time: "2023-03-20T09:36:03Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:replicas: {}
          f:unavailableReplicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-28T21:49:46Z"
    name: chaos-mongodb
    namespace: litmus
    resourceVersion: "1800493"
    uid: 00150774-1755-4c92-896f-7b5e9f6077d8
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: mongodb
        app.kubernetes.io/instance: chaos
        app.kubernetes.io/name: mongodb
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2023-03-20T10:36:03+01:00"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: mongodb
          app.kubernetes.io/instance: chaos
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: mongodb
          helm.sh/chart: mongodb-12.1.11
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: mongodb
                    app.kubernetes.io/instance: chaos
                    app.kubernetes.io/name: mongodb
                namespaces:
                - litmus
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: MONGODB_ROOT_USER
            value: root
          - name: MONGODB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: mongodb-root-password
                name: chaos-mongodb
          - name: ALLOW_EMPTY_PASSWORD
            value: "no"
          - name: MONGODB_SYSTEM_LOG_VERBOSITY
            value: "0"
          - name: MONGODB_DISABLE_SYSTEM_LOG
            value: "no"
          - name: MONGODB_DISABLE_JAVASCRIPT
            value: "no"
          - name: MONGODB_ENABLE_JOURNAL
            value: "yes"
          - name: MONGODB_PORT_NUMBER
            value: "27017"
          - name: MONGODB_ENABLE_IPV6
            value: "no"
          - name: MONGODB_ENABLE_DIRECTORY_PER_DB
            value: "no"
          image: docker.io/bitnami/mongodb:5.0.8-debian-10-r24
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bitnami/scripts/ping-mongodb.sh
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 10
          name: mongodb
          ports:
          - containerPort: 27017
            name: mongodb
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bitnami/scripts/readiness-probe.sh
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /bitnami/mongodb
            name: datadir
          - mountPath: /bitnami/scripts
            name: common-scripts
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
        serviceAccount: chaos-mongodb
        serviceAccountName: chaos-mongodb
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 360
            name: chaos-mongodb-common-scripts
          name: common-scripts
        - name: datadir
          persistentVolumeClaim:
            claimName: chaos-mongodb
  status:
    conditions:
    - lastTransitionTime: "2023-03-20T09:36:03Z"
      lastUpdateTime: "2023-03-20T09:43:27Z"
      message: ReplicaSet "chaos-mongodb-7fcb7c857f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-03-28T21:49:46Z"
      lastUpdateTime: "2023-03-28T21:49:46Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    observedGeneration: 8
    replicas: 1
    unavailableReplicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-20T09:46:37Z"
    generation: 5
    labels:
      app.kubernetes.io/component: operator
      app.kubernetes.io/managed-by: kubectl
      app.kubernetes.io/name: litmus
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: v2.0.0
      name: litmus
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:name: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:name: {}
            f:spec:
              f:containers:
                k:{"name":"chaos-operator"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"CHAOS_RUNNER_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"OPERATOR_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"WATCH_NAMESPACE"}:
                      .: {}
                      f:name: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: server
      operation: Update
      time: "2023-03-20T09:46:37Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:55Z"
    name: chaos-operator-ce
    namespace: litmus
    resourceVersion: "863032"
    uid: 1aee712b-6f7b-4582-9915-7087af79d071
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        name: chaos-operator
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: operator
          app.kubernetes.io/managed-by: kubectl
          app.kubernetes.io/name: litmus
          app.kubernetes.io/part-of: litmus
          app.kubernetes.io/version: latest
          name: chaos-operator
      spec:
        containers:
        - args:
          - -leader-elect=true
          command:
          - chaos-operator
          env:
          - name: CHAOS_RUNNER_IMAGE
            value: litmuschaos/chaos-runner:2.14.0
          - name: WATCH_NAMESPACE
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: OPERATOR_NAME
            value: chaos-operator
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: litmuschaos/chaos-operator:2.14.0
          imagePullPolicy: Always
          name: chaos-operator
          resources:
            limits:
              cpu: 225m
              ephemeral-storage: 1Gi
              memory: 500Mi
            requests:
              cpu: 125m
              ephemeral-storage: 500Mi
              memory: 300Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: litmus-cluster-scope
        serviceAccountName: litmus-cluster-scope
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-03-20T09:46:37Z"
      lastUpdateTime: "2023-03-20T09:46:44Z"
      message: ReplicaSet "chaos-operator-ce-84bc885775" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-03-23T08:16:55Z"
      lastUpdateTime: "2023-03-23T08:16:55Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "5"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"debug-pod","namespace":"litmus"},"spec":{"selector":{"matchLabels":{"app":"debug-pod"}},"template":{"metadata":{"labels":{"app":"debug-pod"}},"spec":{"containers":[{"args":["-ec","while :; do echo .; sleep 5;done"],"command":["/bin/sh"],"image":"centos:latest","name":"debug-pod","volumeMounts":[{"mountPath":"/bitnami/mongodb","name":"datadir"}]}],"securityContext":{"fsGroup":1001,"runAsGroup":1001,"runAsNonRoot":true,"runAsUser":1001},"volumes":[{"name":"datadir","persistentVolumeClaim":{"claimName":"chaos-mongodb"}}]}}}}
    creationTimestamp: "2023-03-20T09:21:07Z"
    generation: 9
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"debug-pod"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/bitnami/mongodb"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"datadir"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
      manager: kubectl
      operation: Update
      time: "2023-03-20T09:34:39Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:17:06Z"
    name: debug-pod
    namespace: litmus
    resourceVersion: "863070"
    uid: c8586ef1-792f-4351-a747-f599e7e516ec
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: debug-pod
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: debug-pod
      spec:
        containers:
        - args:
          - -ec
          - while :; do echo .; sleep 5;done
          command:
          - /bin/sh
          image: centos:latest
          imagePullPolicy: Always
          name: debug-pod
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /bitnami/mongodb
            name: datadir
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          runAsGroup: 1001
          runAsNonRoot: true
          runAsUser: 1001
        terminationGracePeriodSeconds: 30
        volumes:
        - name: datadir
          persistentVolumeClaim:
            claimName: chaos-mongodb
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-03-20T09:21:07Z"
      lastUpdateTime: "2023-03-20T09:34:42Z"
      message: ReplicaSet "debug-pod-55c9b84fb9" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-03-23T08:17:06Z"
      lastUpdateTime: "2023-03-23T08:17:06Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 9
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-20T09:46:36Z"
    generation: 5
    labels:
      app: event-tracker
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"litmus-event-tracker"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"AGENT_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: server
      operation: Update
      time: "2023-03-20T09:46:36Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:58Z"
    name: event-tracker
    namespace: litmus
    resourceVersion: "863044"
    uid: 334358e7-8bfa-4c8f-b695-ade2269ab713
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: event-tracker
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: event-tracker
      spec:
        containers:
        - env:
          - name: AGENT_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          envFrom:
          - configMapRef:
              name: agent-config
          - secretRef:
              name: agent-secret
          image: litmuschaos/litmusportal-event-tracker:2.14.0
          imagePullPolicy: Always
          name: litmus-event-tracker
          resources:
            limits:
              cpu: 225m
              ephemeral-storage: 1Gi
              memory: 500Mi
            requests:
              cpu: 125m
              ephemeral-storage: 500Mi
              memory: 300Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: event-tracker-sa
        serviceAccountName: event-tracker-sa
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-03-20T09:46:36Z"
      lastUpdateTime: "2023-03-20T09:46:52Z"
      message: ReplicaSet "event-tracker-744b6fd8cf" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-03-23T08:16:58Z"
      lastUpdateTime: "2023-03-23T08:16:58Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-20T09:46:36Z"
    generation: 5
    labels:
      app: subscriber
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"subscriber"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"AGENT_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: server
      operation: Update
      time: "2023-03-20T09:46:36Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:17:49Z"
    name: subscriber
    namespace: litmus
    resourceVersion: "863198"
    uid: 771ca635-bc70-4045-bacf-0d8f9b7ebfb4
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: subscriber
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: subscriber
      spec:
        containers:
        - env:
          - name: AGENT_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          envFrom:
          - configMapRef:
              name: agent-config
          - secretRef:
              name: agent-secret
          image: litmuschaos/litmusportal-subscriber:2.14.0
          imagePullPolicy: Always
          name: subscriber
          resources:
            limits:
              cpu: 225m
              ephemeral-storage: 1Gi
              memory: 500Mi
            requests:
              cpu: 125m
              ephemeral-storage: 500Mi
              memory: 300Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: litmus
        serviceAccountName: litmus
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-03-20T09:46:36Z"
      lastUpdateTime: "2023-03-20T09:46:42Z"
      message: ReplicaSet "subscriber-686d9b8dd9" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-03-23T08:17:49Z"
      lastUpdateTime: "2023-03-23T08:17:49Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-20T09:46:40Z"
    generation: 5
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"workflow-controller"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"LEADER_ELECTION_DISABLE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: server
      operation: Update
      time: "2023-03-20T09:46:40Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:53Z"
    name: workflow-controller
    namespace: litmus
    resourceVersion: "863012"
    uid: e872a24c-04a6-4d72-8771-4df1f6e9c194
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: workflow-controller
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: workflow-controller
      spec:
        containers:
        - args:
          - --configmap
          - workflow-controller-configmap
          - --executor-image
          - litmuschaos/argoexec:v3.3.1
          - --container-runtime-executor
          - k8sapi
          command:
          - workflow-controller
          env:
          - name: LEADER_ELECTION_DISABLE
            value: "true"
          image: litmuschaos/workflow-controller:v3.3.1
          imagePullPolicy: IfNotPresent
          name: workflow-controller
          resources:
            limits:
              cpu: 225m
              ephemeral-storage: 1Gi
              memory: 500Mi
            requests:
              cpu: 125m
              ephemeral-storage: 500Mi
              memory: 300Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argo
        serviceAccountName: argo
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-03-20T09:46:40Z"
      lastUpdateTime: "2023-03-20T09:46:49Z"
      message: ReplicaSet "workflow-controller-768f7d94dc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-03-23T08:16:53Z"
      lastUpdateTime: "2023-03-23T08:16:53Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-20T09:46:37Z"
    generation: 5
    labels:
      app: chaos-exporter
      pod-template-hash: 6c9b5988c4
      release: prometheus-stack
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
            f:release: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"48e97e94-3ff4-4f7c-9820-62f3c452960a"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
                f:release: {}
            f:spec:
              f:containers:
                k:{"name":"chaos-exporter"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"TSDB_SCRAPE_INTERVAL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:49Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:54Z"
    name: chaos-exporter-6c9b5988c4
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: chaos-exporter
      uid: 48e97e94-3ff4-4f7c-9820-62f3c452960a
    resourceVersion: "863024"
    uid: 7f1b8e92-2d8a-465c-8b96-a28912c7b173
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: chaos-exporter
        pod-template-hash: 6c9b5988c4
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: chaos-exporter
          pod-template-hash: 6c9b5988c4
          release: prometheus-stack
      spec:
        containers:
        - env:
          - name: TSDB_SCRAPE_INTERVAL
            value: "10"
          image: litmuschaos/chaos-exporter:2.14.0
          imagePullPolicy: Always
          name: chaos-exporter
          ports:
          - containerPort: 8080
            name: tcp
            protocol: TCP
          resources:
            limits:
              cpu: 225m
              ephemeral-storage: 1Gi
              memory: 500Mi
            requests:
              cpu: 125m
              ephemeral-storage: 500Mi
              memory: 300Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: litmus-cluster-scope
        serviceAccountName: litmus-cluster-scope
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: chaos
      meta.helm.sh/release-namespace: litmus
    creationTimestamp: "2023-03-19T14:17:35Z"
    generation: 5
    labels:
      app.kubernetes.io/component: litmus-auth-server
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: litmus
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: 2.15.10
      helm.sh/chart: litmus-2.15.10
      litmuschaos.io/version: 2.14.0
      pod-template-hash: b8dcdf66b
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:litmuschaos.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d58ac3a9-feb6-4ace-a8b0-40a6af98ee36"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:helm.sh/chart: {}
                f:litmuschaos.io/version: {}
                f:pod-template-hash: {}
            f:spec:
              f:automountServiceAccountToken: {}
              f:containers:
                k:{"name":"auth-server"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"DB_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"DB_USER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_GQL_GRPC_ENDPOINT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_GQL_GRPC_PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":3000,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":3030,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:initContainers:
                .: {}
                k:{"name":"wait-for-mongodb"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:49Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:17:26Z"
    name: chaos-litmus-auth-server-b8dcdf66b
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: chaos-litmus-auth-server
      uid: d58ac3a9-feb6-4ace-a8b0-40a6af98ee36
    resourceVersion: "863126"
    uid: dd754b6f-d49e-46e8-9026-2882d2c135b8
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: litmus-auth-server
        pod-template-hash: b8dcdf66b
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: litmus-auth-server
          app.kubernetes.io/instance: chaos
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: litmus
          app.kubernetes.io/part-of: litmus
          app.kubernetes.io/version: 2.15.10
          helm.sh/chart: litmus-2.15.10
          litmuschaos.io/version: 2.14.0
          pod-template-hash: b8dcdf66b
      spec:
        automountServiceAccountToken: false
        containers:
        - env:
          - name: DB_PASSWORD
            value: superhardpassword
          - name: DB_USER
            value: root
          - name: LITMUS_GQL_GRPC_ENDPOINT
            value: chaos-litmus-server-service
          - name: LITMUS_GQL_GRPC_PORT
            value: :8000
          envFrom:
          - secretRef:
              name: chaos-litmus-admin-secret
          - configMapRef:
              name: chaos-litmus-admin-config
          image: litmuschaos/litmusportal-auth-server:2.14.0
          imagePullPolicy: Always
          name: auth-server
          ports:
          - containerPort: 3030
            name: auth-server
            protocol: TCP
          - containerPort: 3000
            name: auth-rpc-server
            protocol: TCP
          resources:
            limits:
              cpu: 550m
              ephemeral-storage: 1Gi
              memory: 712Mi
            requests:
              cpu: 225m
              ephemeral-storage: 500Mi
              memory: 250Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - while [[ $(curl -sw '%{http_code}' http://chaos-mongodb:27017 -o /dev/null)
            -ne 200 ]]; do sleep 5; echo 'Waiting for the MongoDB to be ready...';
            done; echo 'Connection with MongoDB established'
          command:
          - /bin/sh
          - -c
          image: litmuschaos/curl:2.14.0
          imagePullPolicy: Always
          name: wait-for-mongodb
          resources:
            limits:
              cpu: 250m
              ephemeral-storage: 1Gi
              memory: 512Mi
            requests:
              cpu: 25m
              ephemeral-storage: 500Mi
              memory: 150Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: litmus-server-account
        serviceAccountName: litmus-server-account
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: chaos
      meta.helm.sh/release-namespace: litmus
    creationTimestamp: "2023-03-19T14:17:35Z"
    generation: 5
    labels:
      app.kubernetes.io/component: litmus-frontend
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: litmus
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: 2.15.10
      helm.sh/chart: litmus-2.15.10
      litmuschaos.io/version: 2.14.0
      pod-template-hash: 6ffc95c884
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:litmuschaos.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8afe133f-a565-423d-8b39-87e0f01f7bf9"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:helm.sh/chart: {}
                f:litmuschaos.io/version: {}
                f:pod-template-hash: {}
            f:spec:
              f:automountServiceAccountToken: {}
              f:containers:
                k:{"name":"litmusportal-frontend"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/nginx/conf.d/default.conf"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:subPath: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"nginx-config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:49Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:17:00Z"
    name: chaos-litmus-frontend-6ffc95c884
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: chaos-litmus-frontend
      uid: 8afe133f-a565-423d-8b39-87e0f01f7bf9
    resourceVersion: "863052"
    uid: 00282446-8ea6-4fcb-9b58-082f00087a97
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: litmus-frontend
        pod-template-hash: 6ffc95c884
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: litmus-frontend
          app.kubernetes.io/instance: chaos
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: litmus
          app.kubernetes.io/part-of: litmus
          app.kubernetes.io/version: 2.15.10
          helm.sh/chart: litmus-2.15.10
          litmuschaos.io/version: 2.14.0
          pod-template-hash: 6ffc95c884
      spec:
        automountServiceAccountToken: false
        containers:
        - image: litmuschaos/litmusportal-frontend:2.14.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: litmusportal-frontend
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 550m
              ephemeral-storage: 1Gi
              memory: 512Mi
            requests:
              cpu: 125m
              ephemeral-storage: 500Mi
              memory: 150Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/nginx/conf.d/default.conf
            name: nginx-config
            subPath: default.conf
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: chaos-litmus-frontend-nginx-configuration
          name: nginx-config
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: chaos
      meta.helm.sh/release-namespace: litmus
    creationTimestamp: "2023-03-19T14:17:35Z"
    generation: 5
    labels:
      app.kubernetes.io/component: litmus-server
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: litmus
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: 2.15.10
      helm.sh/chart: litmus-2.15.10
      litmuschaos.io/version: 2.14.0
      pod-template-hash: 585786dd9c
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:litmuschaos.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ce145649-c0f8-47eb-af46-efc3e38ec4a0"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:helm.sh/chart: {}
                f:litmuschaos.io/version: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"graphql-server"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"AGENT_DEPLOYMENTS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ARGO_WORKFLOW_CONTROLLER_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ARGO_WORKFLOW_EXECUTOR_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOS_CENTER_SCOPE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOS_CENTER_UI_ENDPOINT"}:
                      .: {}
                      f:name: {}
                    k:{"name":"CONTAINER_RUNTIME_EXECUTOR"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"DB_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"DB_USER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"EVENT_TRACKER_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"HUB_BRANCH_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"INGRESS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"INGRESS_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_AUTH_GRPC_ENDPOINT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_AUTH_GRPC_PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_CHAOS_EXPORTER_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_CHAOS_OPERATOR_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_CHAOS_RUNNER_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_PORTAL_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"NODE_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"REMOTE_HUB_MAX_SIZE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SELF_AGENT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SELF_AGENT_NODE_SELECTOR"}:
                      .: {}
                      f:name: {}
                    k:{"name":"SELF_AGENT_TOLERATIONS"}:
                      .: {}
                      f:name: {}
                    k:{"name":"SERVER_SERVICE_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SUBSCRIBER_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TLS_CERT_64"}:
                      .: {}
                      f:name: {}
                    k:{"name":"TLS_SECRET_NAME"}:
                      .: {}
                      f:name: {}
                    k:{"name":"WORKFLOW_HELPER_IMAGE_VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8000,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/tmp/"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp/version"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:initContainers:
                .: {}
                k:{"name":"wait-for-mongodb"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"gitops-storage"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
                k:{"name":"hub-storage"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:49Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:17:40Z"
    name: chaos-litmus-server-585786dd9c
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: chaos-litmus-server
      uid: ce145649-c0f8-47eb-af46-efc3e38ec4a0
    resourceVersion: "863171"
    uid: 7c03e29b-696c-4603-820b-2256304b1baa
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: litmus-server
        pod-template-hash: 585786dd9c
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: litmus-server
          app.kubernetes.io/instance: chaos
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: litmus
          app.kubernetes.io/part-of: litmus
          app.kubernetes.io/version: 2.15.10
          helm.sh/chart: litmus-2.15.10
          litmuschaos.io/version: 2.14.0
          pod-template-hash: 585786dd9c
      spec:
        containers:
        - env:
          - name: DB_PASSWORD
            value: superhardpassword
          - name: DB_USER
            value: root
          - name: LITMUS_PORTAL_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CHAOS_CENTER_SCOPE
            value: cluster
          - name: SERVER_SERVICE_NAME
            value: chaos-litmus-server-service
          - name: INGRESS
            value: "false"
          - name: INGRESS_NAME
            value: litmus-ingress
          - name: LITMUS_AUTH_GRPC_ENDPOINT
            value: chaos-litmus-auth-server-service
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: ARGO_WORKFLOW_CONTROLLER_IMAGE
            value: litmuschaos/workflow-controller:v3.3.1
          - name: ARGO_WORKFLOW_EXECUTOR_IMAGE
            value: litmuschaos/argoexec:v3.3.1
          - name: EVENT_TRACKER_IMAGE
            value: litmuschaos/litmusportal-event-tracker:2.14.0
          - name: LITMUS_CHAOS_EXPORTER_IMAGE
            value: litmuschaos/chaos-exporter:2.14.0
          - name: LITMUS_CHAOS_OPERATOR_IMAGE
            value: litmuschaos/chaos-operator:2.14.0
          - name: LITMUS_CHAOS_RUNNER_IMAGE
            value: litmuschaos/chaos-runner:2.14.0
          - name: SUBSCRIBER_IMAGE
            value: litmuschaos/litmusportal-subscriber:2.14.0
          - name: AGENT_DEPLOYMENTS
            value: '["app=chaos-exporter", "name=chaos-operator", "app=event-tracker",
              "app=workflow-controller"]'
          - name: CHAOS_CENTER_UI_ENDPOINT
          - name: CONTAINER_RUNTIME_EXECUTOR
            value: k8sapi
          - name: HUB_BRANCH_NAME
            value: v2.14.x
          - name: LITMUS_AUTH_GRPC_PORT
            value: :3030
          - name: REMOTE_HUB_MAX_SIZE
            value: "5000000"
          - name: SELF_AGENT
            value: "true"
          - name: SELF_AGENT_NODE_SELECTOR
          - name: SELF_AGENT_TOLERATIONS
          - name: TLS_CERT_64
          - name: TLS_SECRET_NAME
          - name: WORKFLOW_HELPER_IMAGE_VERSION
            value: 2.14.0
          envFrom:
          - secretRef:
              name: chaos-litmus-admin-secret
          - configMapRef:
              name: chaos-litmus-admin-config
          image: litmuschaos/litmusportal-server:2.14.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: gql-server
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: graphql-server
          ports:
          - containerPort: 8080
            name: gql-server
            protocol: TCP
          - containerPort: 8000
            name: gql-rpc-server
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: gql-server
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 550m
              ephemeral-storage: 1Gi
              memory: 712Mi
            requests:
              cpu: 225m
              ephemeral-storage: 500Mi
              memory: 250Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/
            name: gitops-storage
          - mountPath: /tmp/version
            name: hub-storage
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - while [[ $(curl -sw '%{http_code}' http://chaos-mongodb:27017 -o /dev/null)
            -ne 200 ]]; do sleep 5; echo 'Waiting for the MongoDB to be ready...';
            done; echo 'Connection with MongoDB established'
          command:
          - /bin/sh
          - -c
          image: litmuschaos/curl:2.14.0
          imagePullPolicy: Always
          name: wait-for-mongodb
          resources:
            limits:
              cpu: 250m
              ephemeral-storage: 1Gi
              memory: 512Mi
            requests:
              cpu: 25m
              ephemeral-storage: 500Mi
              memory: 150Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: litmus-server-account
        serviceAccountName: litmus-server-account
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: gitops-storage
        - emptyDir: {}
          name: hub-storage
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: chaos
      meta.helm.sh/release-namespace: litmus
    creationTimestamp: "2023-03-20T09:36:03Z"
    generation: 7
    labels:
      app.kubernetes.io/component: mongodb
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: mongodb
      helm.sh/chart: mongodb-12.1.11
      pod-template-hash: 7fcb7c857f
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"00150774-1755-4c92-896f-7b5e9f6077d8"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kubectl.kubernetes.io/restartedAt: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:helm.sh/chart: {}
                f:pod-template-hash: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"mongodb"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"ALLOW_EMPTY_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"BITNAMI_DEBUG"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_DISABLE_JAVASCRIPT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_DISABLE_SYSTEM_LOG"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_ENABLE_DIRECTORY_PER_DB"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_ENABLE_IPV6"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_ENABLE_JOURNAL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_PORT_NUMBER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_ROOT_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                    k:{"name":"MONGODB_ROOT_USER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_SYSTEM_LOG_VERBOSITY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":27017,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/bitnami/mongodb"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/bitnami/scripts"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"common-scripts"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"datadir"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:49Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-28T21:47:25Z"
    name: chaos-mongodb-7fcb7c857f
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: chaos-mongodb
      uid: 00150774-1755-4c92-896f-7b5e9f6077d8
    resourceVersion: "1800492"
    uid: 8ee3b385-1d72-46c7-bb2d-006db5d155ab
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: mongodb
        app.kubernetes.io/instance: chaos
        app.kubernetes.io/name: mongodb
        pod-template-hash: 7fcb7c857f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2023-03-20T10:36:03+01:00"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: mongodb
          app.kubernetes.io/instance: chaos
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: mongodb
          helm.sh/chart: mongodb-12.1.11
          pod-template-hash: 7fcb7c857f
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: mongodb
                    app.kubernetes.io/instance: chaos
                    app.kubernetes.io/name: mongodb
                namespaces:
                - litmus
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: MONGODB_ROOT_USER
            value: root
          - name: MONGODB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: mongodb-root-password
                name: chaos-mongodb
          - name: ALLOW_EMPTY_PASSWORD
            value: "no"
          - name: MONGODB_SYSTEM_LOG_VERBOSITY
            value: "0"
          - name: MONGODB_DISABLE_SYSTEM_LOG
            value: "no"
          - name: MONGODB_DISABLE_JAVASCRIPT
            value: "no"
          - name: MONGODB_ENABLE_JOURNAL
            value: "yes"
          - name: MONGODB_PORT_NUMBER
            value: "27017"
          - name: MONGODB_ENABLE_IPV6
            value: "no"
          - name: MONGODB_ENABLE_DIRECTORY_PER_DB
            value: "no"
          image: docker.io/bitnami/mongodb:5.0.8-debian-10-r24
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bitnami/scripts/ping-mongodb.sh
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 10
          name: mongodb
          ports:
          - containerPort: 27017
            name: mongodb
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bitnami/scripts/readiness-probe.sh
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /bitnami/mongodb
            name: datadir
          - mountPath: /bitnami/scripts
            name: common-scripts
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
        serviceAccount: chaos-mongodb
        serviceAccountName: chaos-mongodb
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 360
            name: chaos-mongodb-common-scripts
          name: common-scripts
        - name: datadir
          persistentVolumeClaim:
            claimName: chaos-mongodb
  status:
    fullyLabeledReplicas: 1
    observedGeneration: 7
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-20T09:46:37Z"
    generation: 5
    labels:
      app.kubernetes.io/component: operator
      app.kubernetes.io/managed-by: kubectl
      app.kubernetes.io/name: litmus
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: latest
      name: chaos-operator
      pod-template-hash: 84bc885775
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:name: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"1aee712b-6f7b-4582-9915-7087af79d071"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:name: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"chaos-operator"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"CHAOS_RUNNER_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"OPERATOR_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"WATCH_NAMESPACE"}:
                      .: {}
                      f:name: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:49Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:55Z"
    name: chaos-operator-ce-84bc885775
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: chaos-operator-ce
      uid: 1aee712b-6f7b-4582-9915-7087af79d071
    resourceVersion: "863031"
    uid: 04871a0e-cf60-4e81-8c13-4b1a833d1457
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: chaos-operator
        pod-template-hash: 84bc885775
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: operator
          app.kubernetes.io/managed-by: kubectl
          app.kubernetes.io/name: litmus
          app.kubernetes.io/part-of: litmus
          app.kubernetes.io/version: latest
          name: chaos-operator
          pod-template-hash: 84bc885775
      spec:
        containers:
        - args:
          - -leader-elect=true
          command:
          - chaos-operator
          env:
          - name: CHAOS_RUNNER_IMAGE
            value: litmuschaos/chaos-runner:2.14.0
          - name: WATCH_NAMESPACE
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: OPERATOR_NAME
            value: chaos-operator
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: litmuschaos/chaos-operator:2.14.0
          imagePullPolicy: Always
          name: chaos-operator
          resources:
            limits:
              cpu: 225m
              ephemeral-storage: 1Gi
              memory: 500Mi
            requests:
              cpu: 125m
              ephemeral-storage: 500Mi
              memory: 300Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: litmus-cluster-scope
        serviceAccountName: litmus-cluster-scope
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "5"
      deployment.kubernetes.io/revision-history: "3"
    creationTimestamp: "2023-03-20T09:31:31Z"
    generation: 7
    labels:
      app: debug-pod
      pod-template-hash: 55c9b84fb9
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:deployment.kubernetes.io/revision-history: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c8586ef1-792f-4351-a747-f599e7e516ec"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"debug-pod"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/bitnami/mongodb"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"datadir"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:49Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:17:06Z"
    name: debug-pod-55c9b84fb9
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: debug-pod
      uid: c8586ef1-792f-4351-a747-f599e7e516ec
    resourceVersion: "863069"
    uid: bf421729-bae6-470d-ba09-711dcb35c615
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: debug-pod
        pod-template-hash: 55c9b84fb9
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: debug-pod
          pod-template-hash: 55c9b84fb9
      spec:
        containers:
        - args:
          - -ec
          - while :; do echo .; sleep 5;done
          command:
          - /bin/sh
          image: centos:latest
          imagePullPolicy: Always
          name: debug-pod
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /bitnami/mongodb
            name: datadir
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          runAsGroup: 1001
          runAsNonRoot: true
          runAsUser: 1001
        terminationGracePeriodSeconds: 30
        volumes:
        - name: datadir
          persistentVolumeClaim:
            claimName: chaos-mongodb
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 7
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-20T09:46:36Z"
    generation: 5
    labels:
      app: event-tracker
      pod-template-hash: 744b6fd8cf
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"334358e7-8bfa-4c8f-b695-ade2269ab713"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"litmus-event-tracker"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"AGENT_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:50Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:58Z"
    name: event-tracker-744b6fd8cf
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: event-tracker
      uid: 334358e7-8bfa-4c8f-b695-ade2269ab713
    resourceVersion: "863043"
    uid: d2d2b583-afa8-40ba-8beb-fc7d429093e2
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: event-tracker
        pod-template-hash: 744b6fd8cf
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: event-tracker
          pod-template-hash: 744b6fd8cf
      spec:
        containers:
        - env:
          - name: AGENT_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          envFrom:
          - configMapRef:
              name: agent-config
          - secretRef:
              name: agent-secret
          image: litmuschaos/litmusportal-event-tracker:2.14.0
          imagePullPolicy: Always
          name: litmus-event-tracker
          resources:
            limits:
              cpu: 225m
              ephemeral-storage: 1Gi
              memory: 500Mi
            requests:
              cpu: 125m
              ephemeral-storage: 500Mi
              memory: 300Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: event-tracker-sa
        serviceAccountName: event-tracker-sa
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-20T09:46:36Z"
    generation: 5
    labels:
      app: subscriber
      pod-template-hash: 686d9b8dd9
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"771ca635-bc70-4045-bacf-0d8f9b7ebfb4"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"subscriber"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"AGENT_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:50Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:17:49Z"
    name: subscriber-686d9b8dd9
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: subscriber
      uid: 771ca635-bc70-4045-bacf-0d8f9b7ebfb4
    resourceVersion: "863197"
    uid: 69fc4480-197d-453c-98bd-7f7fef7f3bf8
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: subscriber
        pod-template-hash: 686d9b8dd9
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: subscriber
          pod-template-hash: 686d9b8dd9
      spec:
        containers:
        - env:
          - name: AGENT_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          envFrom:
          - configMapRef:
              name: agent-config
          - secretRef:
              name: agent-secret
          image: litmuschaos/litmusportal-subscriber:2.14.0
          imagePullPolicy: Always
          name: subscriber
          resources:
            limits:
              cpu: 225m
              ephemeral-storage: 1Gi
              memory: 500Mi
            requests:
              cpu: 125m
              ephemeral-storage: 500Mi
              memory: 300Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: litmus
        serviceAccountName: litmus
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-20T09:46:40Z"
    generation: 5
    labels:
      app: workflow-controller
      pod-template-hash: 768f7d94dc
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e872a24c-04a6-4d72-8771-4df1f6e9c194"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"workflow-controller"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"LEADER_ELECTION_DISABLE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:50Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:53Z"
    name: workflow-controller-768f7d94dc
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: workflow-controller
      uid: e872a24c-04a6-4d72-8771-4df1f6e9c194
    resourceVersion: "863011"
    uid: afee2f90-ed75-4509-aa00-859a26e7c6d3
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: workflow-controller
        pod-template-hash: 768f7d94dc
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: workflow-controller
          pod-template-hash: 768f7d94dc
      spec:
        containers:
        - args:
          - --configmap
          - workflow-controller-configmap
          - --executor-image
          - litmuschaos/argoexec:v3.3.1
          - --container-runtime-executor
          - k8sapi
          command:
          - workflow-controller
          env:
          - name: LEADER_ELECTION_DISABLE
            value: "true"
          image: litmuschaos/workflow-controller:v3.3.1
          imagePullPolicy: IfNotPresent
          name: workflow-controller
          resources:
            limits:
              cpu: 225m
              ephemeral-storage: 1Gi
              memory: 500Mi
            requests:
              cpu: 125m
              ephemeral-storage: 500Mi
              memory: 300Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argo
        serviceAccountName: argo
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      batch.kubernetes.io/job-tracking: ""
    creationTimestamp: "2023-03-22T14:11:12Z"
    generation: 1
    labels:
      app.kubernetes.io/component: experiment-job
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: 2.14.0
      chaosUID: 20e9d138-7dd0-4242-8670-3cac9d5ab8ac
      name: pod-delete
    managedFields:
    - apiVersion: batch/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:chaosUID: {}
            f:name: {}
        f:spec:
          f:backoffLimit: {}
          f:completionMode: {}
          f:completions: {}
          f:parallelism: {}
          f:suspend: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:chaosUID: {}
                f:name: {}
              f:name: {}
              f:namespace: {}
            f:spec:
              f:containers:
                k:{"name":"pod-delete-mzxuev"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"ANNOTATION_CHECK"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ANNOTATION_KEY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"APP_KIND"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"APP_LABEL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"APP_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOS_INTERVAL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOS_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOS_SERVICE_ACCOUNT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOS_UID"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOSENGINE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"EXPERIMENT_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"FORCE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"JOB_CLEANUP_POLICY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LIB"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LIB_IMAGE_PULL_POLICY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NODE_LABEL"}:
                      .: {}
                      f:name: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"PODS_AFFECTED_PERC"}:
                      .: {}
                      f:name: {}
                    k:{"name":"RAMP_TIME"}:
                      .: {}
                      f:name: {}
                    k:{"name":"SEQUENCE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"STATUS_CHECK_DELAY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"STATUS_CHECK_TIMEOUT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TARGET_PODS"}:
                      .: {}
                      f:name: {}
                    k:{"name":"TERMINATION_GRACE_PERIOD_SECONDS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TOTAL_CHAOS_DURATION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: chaos-runner
      operation: Update
      time: "2023-03-22T14:11:12Z"
    - apiVersion: batch/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:completionTime: {}
          f:conditions: {}
          f:ready: {}
          f:startTime: {}
          f:succeeded: {}
          f:uncountedTerminatedPods: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-22T14:12:29Z"
    name: pod-delete-mzxuev
    namespace: litmus
    resourceVersion: "788489"
    uid: 637dc50d-ff6b-4160-8d59-9262f3a425f7
  spec:
    backoffLimit: 6
    completionMode: NonIndexed
    completions: 1
    parallelism: 1
    selector:
      matchLabels:
        controller-uid: 637dc50d-ff6b-4160-8d59-9262f3a425f7
    suspend: false
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: experiment-job
          app.kubernetes.io/part-of: litmus
          app.kubernetes.io/version: 2.14.0
          chaosUID: 20e9d138-7dd0-4242-8670-3cac9d5ab8ac
          controller-uid: 637dc50d-ff6b-4160-8d59-9262f3a425f7
          job-name: pod-delete-mzxuev
          name: pod-delete
        name: pod-delete-mzxuev
        namespace: litmus
      spec:
        containers:
        - args:
          - -c
          - ./experiments -name pod-delete
          command:
          - /bin/bash
          env:
          - name: ANNOTATION_KEY
            value: litmuschaos.io/chaos
          - name: TOTAL_CHAOS_DURATION
            value: "30"
          - name: FORCE
            value: "false"
          - name: PODS_AFFECTED_PERC
          - name: ANNOTATION_CHECK
            value: "false"
          - name: CHAOS_SERVICE_ACCOUNT
            value: litmus-admin
          - name: TARGET_PODS
          - name: SEQUENCE
            value: parallel
          - name: STATUS_CHECK_TIMEOUT
            value: "180"
          - name: CHAOS_INTERVAL
            value: "10"
          - name: NODE_LABEL
          - name: CHAOS_NAMESPACE
            value: litmus
          - name: APP_NAMESPACE
            value: podtato
          - name: APP_KIND
            value: deployment
          - name: CHAOS_UID
            value: 20e9d138-7dd0-4242-8670-3cac9d5ab8ac
          - name: LIB_IMAGE_PULL_POLICY
            value: Always
          - name: RAMP_TIME
          - name: STATUS_CHECK_DELAY
            value: "2"
          - name: CHAOSENGINE
            value: podtato-main-pod-delete-chaosw854p
          - name: APP_LABEL
            value: name=podtato-main
          - name: EXPERIMENT_NAME
            value: pod-delete
          - name: TERMINATION_GRACE_PERIOD_SECONDS
            value: "0"
          - name: LIB
            value: litmus
          - name: JOB_CLEANUP_POLICY
            value: retain
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: litmuschaos/go-runner:2.14.0
          imagePullPolicy: Always
          name: pod-delete-mzxuev
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Never
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: litmus-admin
        serviceAccountName: litmus-admin
        terminationGracePeriodSeconds: 30
  status:
    completionTime: "2023-03-22T14:12:29Z"
    conditions:
    - lastProbeTime: "2023-03-22T14:12:29Z"
      lastTransitionTime: "2023-03-22T14:12:29Z"
      status: "True"
      type: Complete
    ready: 0
    startTime: "2023-03-22T14:11:12Z"
    succeeded: 1
    uncountedTerminatedPods: {}
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      batch.kubernetes.io/job-tracking: ""
    creationTimestamp: "2023-03-27T13:36:35Z"
    generation: 1
    labels:
      app.kubernetes.io/component: experiment-job
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/runtime-api-usage: "true"
      app.kubernetes.io/version: latest
      chaosUID: 49b7adf7-8b81-47ab-9d5c-9f7553c12cae
      name: pod-network-loss
    managedFields:
    - apiVersion: batch/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/runtime-api-usage: {}
            f:app.kubernetes.io/version: {}
            f:chaosUID: {}
            f:name: {}
        f:spec:
          f:backoffLimit: {}
          f:completionMode: {}
          f:completions: {}
          f:parallelism: {}
          f:suspend: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/runtime-api-usage: {}
                f:app.kubernetes.io/version: {}
                f:chaosUID: {}
                f:name: {}
              f:name: {}
              f:namespace: {}
            f:spec:
              f:containers:
                k:{"name":"pod-network-loss-pgta7r"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"ANNOTATION_CHECK"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ANNOTATION_KEY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"APP_KIND"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"APP_LABEL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"APP_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOS_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOS_SERVICE_ACCOUNT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOS_UID"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOSENGINE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CONTAINER_RUNTIME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"DESTINATION_HOSTS"}:
                      .: {}
                      f:name: {}
                    k:{"name":"DESTINATION_IPS"}:
                      .: {}
                      f:name: {}
                    k:{"name":"EXPERIMENT_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"JOB_CLEANUP_POLICY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LIB_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LIB_IMAGE_PULL_POLICY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NETWORK_INTERFACE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NETWORK_PACKET_LOSS_PERCENTAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NODE_LABEL"}:
                      .: {}
                      f:name: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"PODS_AFFECTED_PERC"}:
                      .: {}
                      f:name: {}
                    k:{"name":"RAMP_TIME"}:
                      .: {}
                      f:name: {}
                    k:{"name":"SEQUENCE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SOCKET_PATH"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"STATUS_CHECK_DELAY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"STATUS_CHECK_TIMEOUT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TARGET_CONTAINER"}:
                      .: {}
                      f:name: {}
                    k:{"name":"TARGET_PODS"}:
                      .: {}
                      f:name: {}
                    k:{"name":"TC_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TERMINATION_GRACE_PERIOD_SECONDS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TOTAL_CHAOS_DURATION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: chaos-runner
      operation: Update
      time: "2023-03-27T13:36:35Z"
    - apiVersion: batch/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:completionTime: {}
          f:conditions: {}
          f:ready: {}
          f:startTime: {}
          f:succeeded: {}
          f:uncountedTerminatedPods: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-27T13:37:18Z"
    name: pod-network-loss-pgta7r
    namespace: litmus
    resourceVersion: "1578939"
    uid: cb100e92-c6bc-43d7-8630-c6d58c32cee8
  spec:
    backoffLimit: 6
    completionMode: NonIndexed
    completions: 1
    parallelism: 1
    selector:
      matchLabels:
        controller-uid: cb100e92-c6bc-43d7-8630-c6d58c32cee8
    suspend: false
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: experiment-job
          app.kubernetes.io/part-of: litmus
          app.kubernetes.io/runtime-api-usage: "true"
          app.kubernetes.io/version: latest
          chaosUID: 49b7adf7-8b81-47ab-9d5c-9f7553c12cae
          controller-uid: cb100e92-c6bc-43d7-8630-c6d58c32cee8
          job-name: pod-network-loss-pgta7r
          name: pod-network-loss
        name: pod-network-loss-pgta7r
        namespace: litmus
      spec:
        containers:
        - args:
          - -c
          - ./experiments -name pod-network-loss
          command:
          - /bin/bash
          env:
          - name: LIB_IMAGE_PULL_POLICY
            value: Always
          - name: TARGET_CONTAINER
          - name: NETWORK_INTERFACE
            value: eth0
          - name: APP_LABEL
            value: name in (balancereader,transactionhistory)
          - name: NETWORK_PACKET_LOSS_PERCENTAGE
            value: "100"
          - name: TOTAL_CHAOS_DURATION
            value: "90"
          - name: NODE_LABEL
          - name: STATUS_CHECK_TIMEOUT
            value: "180"
          - name: CHAOS_SERVICE_ACCOUNT
            value: litmus-admin
          - name: TARGET_PODS
          - name: SOCKET_PATH
            value: /var/run/docker.sock
          - name: JOB_CLEANUP_POLICY
            value: retain
          - name: APP_NAMESPACE
            value: bank
          - name: APP_KIND
            value: deployment
          - name: PODS_AFFECTED_PERC
          - name: DESTINATION_IPS
          - name: DESTINATION_HOSTS
          - name: STATUS_CHECK_DELAY
            value: "2"
          - name: TC_IMAGE
            value: gaiadocker/iproute2
          - name: RAMP_TIME
          - name: CHAOS_NAMESPACE
            value: litmus
          - name: EXPERIMENT_NAME
            value: pod-network-loss
          - name: TERMINATION_GRACE_PERIOD_SECONDS
            value: "0"
          - name: CHAOS_UID
            value: 49b7adf7-8b81-47ab-9d5c-9f7553c12cae
          - name: ANNOTATION_CHECK
            value: "false"
          - name: CHAOSENGINE
            value: pod-network-loss-chaos9b6k8
          - name: ANNOTATION_KEY
            value: litmuschaos.io/chaos
          - name: LIB_IMAGE
            value: litmuschaos/go-runner:latest
          - name: CONTAINER_RUNTIME
            value: docker
          - name: SEQUENCE
            value: parallel
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: litmuschaos/go-runner:latest
          imagePullPolicy: Always
          name: pod-network-loss-pgta7r
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Never
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: litmus-admin
        serviceAccountName: litmus-admin
        terminationGracePeriodSeconds: 30
  status:
    completionTime: "2023-03-27T13:37:18Z"
    conditions:
    - lastProbeTime: "2023-03-27T13:37:18Z"
      lastTransitionTime: "2023-03-27T13:37:18Z"
      status: "True"
      type: Complete
    ready: 0
    startTime: "2023-03-27T13:36:35Z"
    succeeded: 1
    uncountedTerminatedPods: {}
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      batch.kubernetes.io/job-tracking: ""
    creationTimestamp: "2023-03-27T16:29:03Z"
    generation: 1
    labels:
      app.kubernetes.io/component: experiment-job
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/runtime-api-usage: "true"
      app.kubernetes.io/version: latest
      chaosUID: 8cd4258c-5274-4cc2-8187-8273791de517
      name: pod-network-loss
    managedFields:
    - apiVersion: batch/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/runtime-api-usage: {}
            f:app.kubernetes.io/version: {}
            f:chaosUID: {}
            f:name: {}
        f:spec:
          f:backoffLimit: {}
          f:completionMode: {}
          f:completions: {}
          f:parallelism: {}
          f:suspend: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/runtime-api-usage: {}
                f:app.kubernetes.io/version: {}
                f:chaosUID: {}
                f:name: {}
              f:name: {}
              f:namespace: {}
            f:spec:
              f:containers:
                k:{"name":"pod-network-loss-wfc04e"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"ANNOTATION_CHECK"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ANNOTATION_KEY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"APP_KIND"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"APP_LABEL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"APP_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOS_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOS_SERVICE_ACCOUNT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOS_UID"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOSENGINE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CONTAINER_RUNTIME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"DESTINATION_HOSTS"}:
                      .: {}
                      f:name: {}
                    k:{"name":"DESTINATION_IPS"}:
                      .: {}
                      f:name: {}
                    k:{"name":"EXPERIMENT_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"JOB_CLEANUP_POLICY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LIB_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LIB_IMAGE_PULL_POLICY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NETWORK_INTERFACE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NETWORK_PACKET_LOSS_PERCENTAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NODE_LABEL"}:
                      .: {}
                      f:name: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"PODS_AFFECTED_PERC"}:
                      .: {}
                      f:name: {}
                    k:{"name":"RAMP_TIME"}:
                      .: {}
                      f:name: {}
                    k:{"name":"SEQUENCE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SOCKET_PATH"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"STATUS_CHECK_DELAY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"STATUS_CHECK_TIMEOUT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TARGET_CONTAINER"}:
                      .: {}
                      f:name: {}
                    k:{"name":"TARGET_PODS"}:
                      .: {}
                      f:name: {}
                    k:{"name":"TC_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TERMINATION_GRACE_PERIOD_SECONDS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TOTAL_CHAOS_DURATION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: chaos-runner
      operation: Update
      time: "2023-03-27T16:29:03Z"
    - apiVersion: batch/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:completionTime: {}
          f:conditions: {}
          f:ready: {}
          f:startTime: {}
          f:succeeded: {}
          f:uncountedTerminatedPods: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-27T16:29:45Z"
    name: pod-network-loss-wfc04e
    namespace: litmus
    resourceVersion: "1601585"
    uid: e7fdb2b6-dd80-4211-8073-f4e3c2dc657d
  spec:
    backoffLimit: 6
    completionMode: NonIndexed
    completions: 1
    parallelism: 1
    selector:
      matchLabels:
        controller-uid: e7fdb2b6-dd80-4211-8073-f4e3c2dc657d
    suspend: false
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: experiment-job
          app.kubernetes.io/part-of: litmus
          app.kubernetes.io/runtime-api-usage: "true"
          app.kubernetes.io/version: latest
          chaosUID: 8cd4258c-5274-4cc2-8187-8273791de517
          controller-uid: e7fdb2b6-dd80-4211-8073-f4e3c2dc657d
          job-name: pod-network-loss-wfc04e
          name: pod-network-loss
        name: pod-network-loss-wfc04e
        namespace: litmus
      spec:
        containers:
        - args:
          - -c
          - ./experiments -name pod-network-loss
          command:
          - /bin/bash
          env:
          - name: CHAOS_NAMESPACE
            value: litmus
          - name: LIB_IMAGE
            value: litmuschaos/go-runner:latest
          - name: PODS_AFFECTED_PERC
          - name: TC_IMAGE
            value: gaiadocker/iproute2
          - name: RAMP_TIME
          - name: CHAOSENGINE
            value: pod-network-loss-chaoslf8hs
          - name: CHAOS_UID
            value: 8cd4258c-5274-4cc2-8187-8273791de517
          - name: ANNOTATION_KEY
            value: litmuschaos.io/chaos
          - name: NODE_LABEL
          - name: STATUS_CHECK_DELAY
            value: "2"
          - name: LIB_IMAGE_PULL_POLICY
            value: Always
          - name: TARGET_CONTAINER
          - name: NETWORK_PACKET_LOSS_PERCENTAGE
            value: "100"
          - name: APP_KIND
            value: deployment
          - name: TARGET_PODS
          - name: STATUS_CHECK_TIMEOUT
            value: "180"
          - name: TERMINATION_GRACE_PERIOD_SECONDS
            value: "0"
          - name: CHAOS_SERVICE_ACCOUNT
            value: litmus-admin
          - name: DESTINATION_IPS
          - name: JOB_CLEANUP_POLICY
            value: retain
          - name: ANNOTATION_CHECK
            value: "false"
          - name: NETWORK_INTERFACE
            value: eth0
          - name: SOCKET_PATH
            value: /var/run/docker.sock
          - name: TOTAL_CHAOS_DURATION
            value: "90"
          - name: CONTAINER_RUNTIME
            value: docker
          - name: DESTINATION_HOSTS
          - name: APP_LABEL
            value: name=balancereader
          - name: APP_NAMESPACE
            value: bank
          - name: EXPERIMENT_NAME
            value: pod-network-loss
          - name: SEQUENCE
            value: parallel
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: litmuschaos/go-runner:latest
          imagePullPolicy: Always
          name: pod-network-loss-wfc04e
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Never
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: litmus-admin
        serviceAccountName: litmus-admin
        terminationGracePeriodSeconds: 30
  status:
    completionTime: "2023-03-27T16:29:45Z"
    conditions:
    - lastProbeTime: "2023-03-27T16:29:45Z"
      lastTransitionTime: "2023-03-27T16:29:45Z"
      status: "True"
      type: Complete
    ready: 0
    startTime: "2023-03-27T16:29:03Z"
    succeeded: 1
    uncountedTerminatedPods: {}
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
