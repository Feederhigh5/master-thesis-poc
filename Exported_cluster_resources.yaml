apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 00602b60241d85ce8339c227a90f3dd948c06442843041332471143b5b866e59
      cni.projectcalico.org/podIP: 172.30.188.147/32
      cni.projectcalico.org/podIPs: 172.30.188.147/32
    creationTimestamp: "2023-03-16T08:51:10Z"
    generateName: logdna-agent-
    labels:
      app: logdna-agent
      app.kubernetes.io/instance: logdna-agent
      app.kubernetes.io/name: logdna-agent
      app.kubernetes.io/version: 2.2.8
      controller-revision-hash: 746649d769
      pod-template-generation: "3"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"687b80cc-408d-4d89-8ab4-557e1ce63644"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"logdna-agent"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"LOGDNA_AGENT_KEY"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"LOGDNA_EXCLUDE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOGDNA_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOGDNA_TAGS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_APP_LABEL"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:capabilities:
                  .: {}
                  f:add: {}
                  f:drop: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/logdna-hostname"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/mnt"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/data"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/docker/containers"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/log"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"logdnahostname"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"mnt"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"osrelease"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"vardata"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"varlibdockercontainers"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"varlog"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-16T08:51:10Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-16T08:51:11Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.147"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-16T08:51:13Z"
    name: logdna-agent-5786t
    namespace: ibm-observe
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: logdna-agent
      uid: 687b80cc-408d-4d89-8ab4-557e1ce63644
    resourceVersion: "86751"
    uid: 5e3cf462-5850-4f35-8db2-07df0ddd1a65
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - 10.85.149.8
    containers:
    - env:
      - name: LOGDNA_AGENT_KEY
        valueFrom:
          secretKeyRef:
            key: logdna-agent-key
            name: logdna-agent-key
      - name: LOGDNA_HOST
        value: logs.eu-de.logging.cloud.ibm.com
      - name: POD_APP_LABEL
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.labels['app.kubernetes.io/name']
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: LOGDNA_TAGS
        value: mycluster-fra02-b3c.4x16
      - name: LOGDNA_EXCLUDE
        value: /var/log/!(containers)/**,/var/log/containers/*_kube-system_*,/var/log/containers/*_ibm-system_*,/var/log/containers/calico*,/var/log/containers/*ibm-observe_*,/var/log/containerd.log,/var/log/kubelet.log,/var/log/syslog,/var/log/ntpstats/*,/var/log/ibm-cloud-databases-prod
      image: icr.io/ext/logdna-agent:2.2.8
      imagePullPolicy: Always
      name: logdna-agent
      resources:
        limits:
          memory: 500Mi
        requests:
          cpu: 20m
          memory: 500Mi
      securityContext:
        capabilities:
          add:
          - DAC_READ_SEARCH
          drop:
          - all
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/data
        name: vardata
      - mountPath: /var/lib/docker/containers
        name: varlibdockercontainers
        readOnly: true
      - mountPath: /mnt
        name: mnt
        readOnly: true
      - mountPath: /etc/os-release
        name: osrelease
      - mountPath: /etc/logdna-hostname
        name: logdnahostname
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bjdjs
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: logdna-agent
    serviceAccountName: logdna-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/log
        type: ""
      name: varlog
    - hostPath:
        path: /var/data
        type: ""
      name: vardata
    - hostPath:
        path: /var/lib/docker/containers
        type: ""
      name: varlibdockercontainers
    - hostPath:
        path: /mnt
        type: ""
      name: mnt
    - hostPath:
        path: /etc/os-release
        type: ""
      name: osrelease
    - hostPath:
        path: /etc/hostname
        type: ""
      name: logdnahostname
    - name: kube-api-access-bjdjs
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-16T08:51:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-16T08:51:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-16T08:51:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-16T08:51:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://491d5d145606619d53c7ef36c5590ca4885a652e95a8599e74ccd357f24dd443
      image: icr.io/ext/logdna-agent:2.2.8
      imageID: icr.io/ext/logdna-agent@sha256:97d401c2cffca9d24e91edd7cfcae2f5a67ccb38a02d53060d2ed6e526a3f8ea
      lastState: {}
      name: logdna-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-16T08:51:13Z"
    hostIP: 10.85.149.8
    phase: Running
    podIP: 172.30.188.147
    podIPs:
    - ip: 172.30.188.147
    qosClass: Burstable
    startTime: "2023-03-16T08:51:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: b4505de17db6e8923cdca61310eb45883e049dbff9e788a8e79678cfebc9157a
      cni.projectcalico.org/podIP: 172.30.140.86/32
      cni.projectcalico.org/podIPs: 172.30.140.86/32
    creationTimestamp: "2023-03-16T08:51:10Z"
    generateName: logdna-agent-
    labels:
      app: logdna-agent
      app.kubernetes.io/instance: logdna-agent
      app.kubernetes.io/name: logdna-agent
      app.kubernetes.io/version: 2.2.8
      controller-revision-hash: 746649d769
      pod-template-generation: "3"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"687b80cc-408d-4d89-8ab4-557e1ce63644"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"logdna-agent"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"LOGDNA_AGENT_KEY"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"LOGDNA_EXCLUDE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOGDNA_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOGDNA_TAGS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_APP_LABEL"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:capabilities:
                  .: {}
                  f:add: {}
                  f:drop: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/logdna-hostname"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/mnt"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/data"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/docker/containers"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/log"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"logdnahostname"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"mnt"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"osrelease"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"vardata"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"varlibdockercontainers"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"varlog"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-16T08:51:10Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-16T08:51:11Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.86"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-16T08:51:13Z"
    name: logdna-agent-tjbxk
    namespace: ibm-observe
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: logdna-agent
      uid: 687b80cc-408d-4d89-8ab4-557e1ce63644
    resourceVersion: "86749"
    uid: 89f07686-9413-4ca1-9af7-bace50d46d8a
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - 10.85.149.20
    containers:
    - env:
      - name: LOGDNA_AGENT_KEY
        valueFrom:
          secretKeyRef:
            key: logdna-agent-key
            name: logdna-agent-key
      - name: LOGDNA_HOST
        value: logs.eu-de.logging.cloud.ibm.com
      - name: POD_APP_LABEL
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.labels['app.kubernetes.io/name']
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: LOGDNA_TAGS
        value: mycluster-fra02-b3c.4x16
      - name: LOGDNA_EXCLUDE
        value: /var/log/!(containers)/**,/var/log/containers/*_kube-system_*,/var/log/containers/*_ibm-system_*,/var/log/containers/calico*,/var/log/containers/*ibm-observe_*,/var/log/containerd.log,/var/log/kubelet.log,/var/log/syslog,/var/log/ntpstats/*,/var/log/ibm-cloud-databases-prod
      image: icr.io/ext/logdna-agent:2.2.8
      imagePullPolicy: Always
      name: logdna-agent
      resources:
        limits:
          memory: 500Mi
        requests:
          cpu: 20m
          memory: 500Mi
      securityContext:
        capabilities:
          add:
          - DAC_READ_SEARCH
          drop:
          - all
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/data
        name: vardata
      - mountPath: /var/lib/docker/containers
        name: varlibdockercontainers
        readOnly: true
      - mountPath: /mnt
        name: mnt
        readOnly: true
      - mountPath: /etc/os-release
        name: osrelease
      - mountPath: /etc/logdna-hostname
        name: logdnahostname
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p6gx2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: logdna-agent
    serviceAccountName: logdna-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/log
        type: ""
      name: varlog
    - hostPath:
        path: /var/data
        type: ""
      name: vardata
    - hostPath:
        path: /var/lib/docker/containers
        type: ""
      name: varlibdockercontainers
    - hostPath:
        path: /mnt
        type: ""
      name: mnt
    - hostPath:
        path: /etc/os-release
        type: ""
      name: osrelease
    - hostPath:
        path: /etc/hostname
        type: ""
      name: logdnahostname
    - name: kube-api-access-p6gx2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-16T08:51:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-16T08:51:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-16T08:51:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-16T08:51:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6b6897234e73036f060c0b785fa84ff636d5bcfa233ff972907995cafd66ab0b
      image: icr.io/ext/logdna-agent:2.2.8
      imageID: icr.io/ext/logdna-agent@sha256:97d401c2cffca9d24e91edd7cfcae2f5a67ccb38a02d53060d2ed6e526a3f8ea
      lastState: {}
      name: logdna-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-16T08:51:13Z"
    hostIP: 10.85.149.20
    phase: Running
    podIP: 172.30.140.86
    podIPs:
    - ip: 172.30.140.86
    qosClass: Burstable
    startTime: "2023-03-16T08:51:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-15T09:40:30Z"
    generateName: sysdig-agent-
    labels:
      app: sysdig-agent
      controller-revision-hash: 7cf77dc8d
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"0eb0df11-8492-485a-90fb-530c7bcb9ba9"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"sysdig-agent"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/dev/shm"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/modprobe.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/podinfo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/boot"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/dev"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/lib/modules"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/proc"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/run"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/usr"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/var/run"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/draios/etc/kubernetes/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/draios/etc/kubernetes/secrets"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"boot-vol"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"dev-vol"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"dshm"}:
              .: {}
              f:emptyDir:
                .: {}
                f:medium: {}
              f:name: {}
            k:{"name":"etc-vol"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"modprobe-d"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"modules-vol"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"podinfo"}:
              .: {}
              f:downwardAPI:
                .: {}
                f:defaultMode: {}
                f:items: {}
              f:name: {}
            k:{"name":"proc-vol"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"run-vol"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sysdig-agent-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"sysdig-agent-secrets"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"usr-vol"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"varrun-vol"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-15T09:40:30Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.85.149.20"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-15T09:42:21Z"
    name: sysdig-agent-c5zph
    namespace: ibm-observe
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: sysdig-agent
      uid: 0eb0df11-8492-485a-90fb-530c7bcb9ba9
    resourceVersion: "2974"
    uid: 704cfc3e-c1ad-4803-9780-6d0ac7f39170
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - 10.85.149.20
    containers:
    - env:
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: icr.io/ext/sysdig/agent
      imagePullPolicy: Always
      name: sysdig-agent
      readinessProbe:
        exec:
          command:
          - test
          - -e
          - /opt/draios/logs/running
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: "1"
          memory: 1Gi
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/modprobe.d
        name: modprobe-d
        readOnly: true
      - mountPath: /host/etc
        name: etc-vol
        readOnly: true
      - mountPath: /host/dev
        name: dev-vol
      - mountPath: /host/proc
        name: proc-vol
        readOnly: true
      - mountPath: /host/boot
        name: boot-vol
        readOnly: true
      - mountPath: /host/lib/modules
        name: modules-vol
        readOnly: true
      - mountPath: /host/usr
        name: usr-vol
        readOnly: true
      - mountPath: /host/run
        name: run-vol
      - mountPath: /host/var/run
        name: varrun-vol
      - mountPath: /dev/shm
        name: dshm
      - mountPath: /opt/draios/etc/kubernetes/config
        name: sysdig-agent-config
      - mountPath: /opt/draios/etc/kubernetes/secrets
        name: sysdig-agent-secrets
      - mountPath: /etc/podinfo
        name: podinfo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8ztqq
        readOnly: true
    dnsPolicy: ClusterFirstWithHostNet
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: sysdig-agent
    serviceAccountName: sysdig-agent
    terminationGracePeriodSeconds: 5
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoSchedule
      key: node-role.kubernetes.io/controlplane
      operator: Equal
      value: "true"
    - effect: NoExecute
      key: node-role.kubernetes.io/etcd
      operator: Equal
      value: "true"
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/modprobe.d
        type: ""
      name: modprobe-d
    - emptyDir:
        medium: Memory
      name: dshm
    - hostPath:
        path: /etc
        type: ""
      name: etc-vol
    - hostPath:
        path: /dev
        type: ""
      name: dev-vol
    - hostPath:
        path: /proc
        type: ""
      name: proc-vol
    - hostPath:
        path: /boot
        type: ""
      name: boot-vol
    - hostPath:
        path: /lib/modules
        type: ""
      name: modules-vol
    - hostPath:
        path: /usr
        type: ""
      name: usr-vol
    - hostPath:
        path: /run
        type: ""
      name: run-vol
    - hostPath:
        path: /var/run
        type: ""
      name: varrun-vol
    - configMap:
        defaultMode: 420
        name: sysdig-agent
        optional: true
      name: sysdig-agent-config
    - name: sysdig-agent-secrets
      secret:
        defaultMode: 420
        secretName: sysdig-agent
    - downwardAPI:
        defaultMode: 420
        items:
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
          path: namespace
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
          path: name
      name: podinfo
    - name: kube-api-access-8ztqq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:40:30Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:42:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:42:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:40:30Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d9b3b4e2fb1ba0fdace4f7e12b181cebb5211402c47a06d782b780b3750c9b22
      image: icr.io/ext/sysdig/agent:latest
      imageID: icr.io/ext/sysdig/agent@sha256:a5c81495a36c37ca1170300431271f49c0a524a6c72df04186207194fefbda4b
      lastState: {}
      name: sysdig-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-15T09:41:45Z"
    hostIP: 10.85.149.20
    phase: Running
    podIP: 10.85.149.20
    podIPs:
    - ip: 10.85.149.20
    qosClass: Guaranteed
    startTime: "2023-03-15T09:40:30Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-15T09:40:30Z"
    generateName: sysdig-agent-
    labels:
      app: sysdig-agent
      controller-revision-hash: 7cf77dc8d
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"0eb0df11-8492-485a-90fb-530c7bcb9ba9"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"sysdig-agent"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/dev/shm"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/modprobe.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/podinfo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/boot"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/dev"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/lib/modules"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/proc"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/run"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/usr"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/var/run"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/draios/etc/kubernetes/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/draios/etc/kubernetes/secrets"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"boot-vol"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"dev-vol"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"dshm"}:
              .: {}
              f:emptyDir:
                .: {}
                f:medium: {}
              f:name: {}
            k:{"name":"etc-vol"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"modprobe-d"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"modules-vol"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"podinfo"}:
              .: {}
              f:downwardAPI:
                .: {}
                f:defaultMode: {}
                f:items: {}
              f:name: {}
            k:{"name":"proc-vol"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"run-vol"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sysdig-agent-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"sysdig-agent-secrets"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"usr-vol"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"varrun-vol"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-15T09:40:30Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.85.149.8"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-15T09:42:21Z"
    name: sysdig-agent-t7tpv
    namespace: ibm-observe
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: sysdig-agent
      uid: 0eb0df11-8492-485a-90fb-530c7bcb9ba9
    resourceVersion: "2973"
    uid: be7d3002-8f24-45d4-bf1f-76f1649624f2
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - 10.85.149.8
    containers:
    - env:
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: icr.io/ext/sysdig/agent
      imagePullPolicy: Always
      name: sysdig-agent
      readinessProbe:
        exec:
          command:
          - test
          - -e
          - /opt/draios/logs/running
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: "1"
          memory: 1Gi
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/modprobe.d
        name: modprobe-d
        readOnly: true
      - mountPath: /host/etc
        name: etc-vol
        readOnly: true
      - mountPath: /host/dev
        name: dev-vol
      - mountPath: /host/proc
        name: proc-vol
        readOnly: true
      - mountPath: /host/boot
        name: boot-vol
        readOnly: true
      - mountPath: /host/lib/modules
        name: modules-vol
        readOnly: true
      - mountPath: /host/usr
        name: usr-vol
        readOnly: true
      - mountPath: /host/run
        name: run-vol
      - mountPath: /host/var/run
        name: varrun-vol
      - mountPath: /dev/shm
        name: dshm
      - mountPath: /opt/draios/etc/kubernetes/config
        name: sysdig-agent-config
      - mountPath: /opt/draios/etc/kubernetes/secrets
        name: sysdig-agent-secrets
      - mountPath: /etc/podinfo
        name: podinfo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rjslr
        readOnly: true
    dnsPolicy: ClusterFirstWithHostNet
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: sysdig-agent
    serviceAccountName: sysdig-agent
    terminationGracePeriodSeconds: 5
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoSchedule
      key: node-role.kubernetes.io/controlplane
      operator: Equal
      value: "true"
    - effect: NoExecute
      key: node-role.kubernetes.io/etcd
      operator: Equal
      value: "true"
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/modprobe.d
        type: ""
      name: modprobe-d
    - emptyDir:
        medium: Memory
      name: dshm
    - hostPath:
        path: /etc
        type: ""
      name: etc-vol
    - hostPath:
        path: /dev
        type: ""
      name: dev-vol
    - hostPath:
        path: /proc
        type: ""
      name: proc-vol
    - hostPath:
        path: /boot
        type: ""
      name: boot-vol
    - hostPath:
        path: /lib/modules
        type: ""
      name: modules-vol
    - hostPath:
        path: /usr
        type: ""
      name: usr-vol
    - hostPath:
        path: /run
        type: ""
      name: run-vol
    - hostPath:
        path: /var/run
        type: ""
      name: varrun-vol
    - configMap:
        defaultMode: 420
        name: sysdig-agent
        optional: true
      name: sysdig-agent-config
    - name: sysdig-agent-secrets
      secret:
        defaultMode: 420
        secretName: sysdig-agent
    - downwardAPI:
        defaultMode: 420
        items:
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
          path: namespace
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
          path: name
      name: podinfo
    - name: kube-api-access-rjslr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:40:30Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:42:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:42:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:40:30Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d7e7c66a8a3187d42441fe9f5b62ebf95fba2b157d97934e15962ada4a22ca4f
      image: icr.io/ext/sysdig/agent:latest
      imageID: icr.io/ext/sysdig/agent@sha256:a5c81495a36c37ca1170300431271f49c0a524a6c72df04186207194fefbda4b
      lastState: {}
      name: sysdig-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-15T09:41:45Z"
    hostIP: 10.85.149.8
    phase: Running
    podIP: 10.85.149.8
    podIPs:
    - ip: 10.85.149.8
    qosClass: Guaranteed
    startTime: "2023-03-15T09:40:30Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-26T18:20:50Z"
    generateName: ibm-cloud-provider-ip-158-177-65-42-dfbfcd5fd-
    labels:
      ibm-cloud-provider-ip: 158-177-65-42
      ibm-cloud-provider-lb-app: keepalived
      ibm-cloud-provider-lb-name: a3ae8d4f4434849469c226c5e824584f
      pod-template-hash: dfbfcd5fd
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:ibm-cloud-provider-ip: {}
            f:ibm-cloud-provider-lb-app: {}
            f:ibm-cloud-provider-lb-name: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"7eb1745f-3a93-40a9-a7a9-b413680e8c6e"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"ibm-cloud-provider-ip-158-177-65-42"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"FEATURES"}:
                  .: {}
                  f:name: {}
                k:{"name":"VIRTUAL_IP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:capabilities:
                  .: {}
                  f:add: {}
                f:privileged: {}
                f:runAsGroup: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/status"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"ibm-cloud-provider-ip-keepalived-init"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:runAsGroup: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/status"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"keepalived-status"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-26T18:20:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.85.149.20"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-26T18:20:55Z"
    name: ibm-cloud-provider-ip-158-177-65-42-dfbfcd5fd-hx7zs
    namespace: ibm-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ibm-cloud-provider-ip-158-177-65-42-dfbfcd5fd
      uid: 7eb1745f-3a93-40a9-a7a9-b413680e8c6e
    resourceVersion: "1449208"
    uid: 4a77919c-3d09-4736-a1d5-7c48109a3fad
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: publicVLAN
              operator: In
              values:
              - "3319718"
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: ibm-cloud-provider-lb-app
                operator: In
                values:
                - keepalived
            topologyKey: kubernetes.io/hostname
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              ibm-cloud-provider-ip: 158-177-65-42
              ibm-cloud-provider-lb-name: a3ae8d4f4434849469c226c5e824584f
          topologyKey: kubernetes.io/hostname
    containers:
    - env:
      - name: VIRTUAL_IP
        value: 158.177.65.42
      - name: FEATURES
      image: de.icr.io/armada-master/keepalived:2383
      imagePullPolicy: IfNotPresent
      name: ibm-cloud-provider-ip-158-177-65-42
      resources:
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
        privileged: false
        runAsGroup: 2000
        runAsUser: 2000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /status
        name: keepalived-status
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rd2fg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /usr/local/bin/hostDirPerms
      image: de.icr.io/armada-master/keepalived:2383
      imagePullPolicy: IfNotPresent
      name: ibm-cloud-provider-ip-keepalived-init
      resources:
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        runAsGroup: 0
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /status
        name: keepalived-status
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rd2fg
        readOnly: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 900000000
    priorityClassName: ibm-app-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: dedicated
      value: gateway
    - key: dedicated
      value: edge
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - hostPath:
        path: /tmp/keepalived
        type: ""
      name: keepalived-status
    - name: kube-api-access-rd2fg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:54Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b3bcd84ab7a26525dcf6e497e622db28dc5b95a0ded14ef78a49dc7c0ab98a70
      image: de.icr.io/armada-master/keepalived:2383
      imageID: de.icr.io/armada-master/keepalived@sha256:f926936e40b5bcbef19fb1367b3c0e36e51126ff2685087785537b18542e2480
      lastState: {}
      name: ibm-cloud-provider-ip-158-177-65-42
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-26T18:20:55Z"
    hostIP: 10.85.149.20
    initContainerStatuses:
    - containerID: containerd://f0c0a3409b68dcdd0f1e4645331f86142b06892c80ee16e8017babfd36f37bcb
      image: de.icr.io/armada-master/keepalived:2383
      imageID: de.icr.io/armada-master/keepalived@sha256:f926936e40b5bcbef19fb1367b3c0e36e51126ff2685087785537b18542e2480
      lastState: {}
      name: ibm-cloud-provider-ip-keepalived-init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://f0c0a3409b68dcdd0f1e4645331f86142b06892c80ee16e8017babfd36f37bcb
          exitCode: 0
          finishedAt: "2023-03-26T18:20:53Z"
          reason: Completed
          startedAt: "2023-03-26T18:20:53Z"
    phase: Running
    podIP: 10.85.149.20
    podIPs:
    - ip: 10.85.149.20
    qosClass: Burstable
    startTime: "2023-03-26T18:20:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-19T10:57:10Z"
    generateName: ibm-cloud-provider-ip-158-177-65-42-dfbfcd5fd-
    labels:
      ibm-cloud-provider-ip: 158-177-65-42
      ibm-cloud-provider-lb-app: keepalived
      ibm-cloud-provider-lb-name: a3ae8d4f4434849469c226c5e824584f
      pod-template-hash: dfbfcd5fd
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:ibm-cloud-provider-ip: {}
            f:ibm-cloud-provider-lb-app: {}
            f:ibm-cloud-provider-lb-name: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"7eb1745f-3a93-40a9-a7a9-b413680e8c6e"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"ibm-cloud-provider-ip-158-177-65-42"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"FEATURES"}:
                  .: {}
                  f:name: {}
                k:{"name":"VIRTUAL_IP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:capabilities:
                  .: {}
                  f:add: {}
                f:privileged: {}
                f:runAsGroup: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/status"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"ibm-cloud-provider-ip-keepalived-init"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:runAsGroup: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/status"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"keepalived-status"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-19T10:57:10Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.85.149.8"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-19T10:57:15Z"
    name: ibm-cloud-provider-ip-158-177-65-42-dfbfcd5fd-qpz4k
    namespace: ibm-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ibm-cloud-provider-ip-158-177-65-42-dfbfcd5fd
      uid: 7eb1745f-3a93-40a9-a7a9-b413680e8c6e
    resourceVersion: "345664"
    uid: 8f908fae-0c19-4550-9531-0b125ca4e9c9
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: publicVLAN
              operator: In
              values:
              - "3319718"
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: ibm-cloud-provider-lb-app
                operator: In
                values:
                - keepalived
            topologyKey: kubernetes.io/hostname
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              ibm-cloud-provider-ip: 158-177-65-42
              ibm-cloud-provider-lb-name: a3ae8d4f4434849469c226c5e824584f
          topologyKey: kubernetes.io/hostname
    containers:
    - env:
      - name: VIRTUAL_IP
        value: 158.177.65.42
      - name: FEATURES
      image: de.icr.io/armada-master/keepalived:2383
      imagePullPolicy: IfNotPresent
      name: ibm-cloud-provider-ip-158-177-65-42
      resources:
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
        privileged: false
        runAsGroup: 2000
        runAsUser: 2000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /status
        name: keepalived-status
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-z2d4j
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /usr/local/bin/hostDirPerms
      image: de.icr.io/armada-master/keepalived:2383
      imagePullPolicy: IfNotPresent
      name: ibm-cloud-provider-ip-keepalived-init
      resources:
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        runAsGroup: 0
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /status
        name: keepalived-status
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-z2d4j
        readOnly: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 900000000
    priorityClassName: ibm-app-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: dedicated
      value: gateway
    - key: dedicated
      value: edge
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - hostPath:
        path: /tmp/keepalived
        type: ""
      name: keepalived-status
    - name: kube-api-access-z2d4j
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-19T10:57:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-19T10:57:15Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-19T10:57:15Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-19T10:57:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b48be7885fb32feb9a0b12b2304380bd374da4c57f49149ef0783f6fdf39ff72
      image: de.icr.io/armada-master/keepalived:2383
      imageID: de.icr.io/armada-master/keepalived@sha256:f926936e40b5bcbef19fb1367b3c0e36e51126ff2685087785537b18542e2480
      lastState: {}
      name: ibm-cloud-provider-ip-158-177-65-42
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-19T10:57:14Z"
    hostIP: 10.85.149.8
    initContainerStatuses:
    - containerID: containerd://9b3990abaafedaaa93a7b942759291311c6c7aa35b612e93228a9f1164128dc7
      image: de.icr.io/armada-master/keepalived:2383
      imageID: de.icr.io/armada-master/keepalived@sha256:f926936e40b5bcbef19fb1367b3c0e36e51126ff2685087785537b18542e2480
      lastState: {}
      name: ibm-cloud-provider-ip-keepalived-init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://9b3990abaafedaaa93a7b942759291311c6c7aa35b612e93228a9f1164128dc7
          exitCode: 0
          finishedAt: "2023-03-19T10:57:12Z"
          reason: Completed
          startedAt: "2023-03-19T10:57:12Z"
    phase: Running
    podIP: 10.85.149.8
    podIPs:
    - ip: 10.85.149.8
    qosClass: Burstable
    startTime: "2023-03-19T10:57:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-15T09:41:05Z"
    generateName: ibm-cloud-provider-ip-158-177-65-46-5f65d64758-
    labels:
      ibm-cloud-provider-ip: 158-177-65-46
      ibm-cloud-provider-lb-app: keepalived
      ibm-cloud-provider-lb-name: a95e34b653e7249dc986e6d973eec8c0
      pod-template-hash: 5f65d64758
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:ibm-cloud-provider-ip: {}
            f:ibm-cloud-provider-lb-app: {}
            f:ibm-cloud-provider-lb-name: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"bbda97a1-1b0b-4d97-93a2-93982fce446f"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"ibm-cloud-provider-ip-158-177-65-46"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"FEATURES"}:
                  .: {}
                  f:name: {}
                k:{"name":"VIRTUAL_IP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:capabilities:
                  .: {}
                  f:add: {}
                f:privileged: {}
                f:runAsGroup: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/status"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"ibm-cloud-provider-ip-keepalived-init"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:runAsGroup: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/status"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"keepalived-status"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-15T09:41:05Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.85.149.8"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-15T09:41:16Z"
    name: ibm-cloud-provider-ip-158-177-65-46-5f65d64758-mpldw
    namespace: ibm-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ibm-cloud-provider-ip-158-177-65-46-5f65d64758
      uid: bbda97a1-1b0b-4d97-93a2-93982fce446f
    resourceVersion: "2817"
    uid: 269a63ae-4185-47b8-908c-9a2ba923c046
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: publicVLAN
              operator: In
              values:
              - "3319718"
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: ibm-cloud-provider-lb-app
                operator: In
                values:
                - keepalived
            topologyKey: kubernetes.io/hostname
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              ibm-cloud-provider-ip: 158-177-65-46
              ibm-cloud-provider-lb-name: a95e34b653e7249dc986e6d973eec8c0
          topologyKey: kubernetes.io/hostname
    containers:
    - env:
      - name: VIRTUAL_IP
        value: 158.177.65.46
      - name: FEATURES
      image: de.icr.io/armada-master/keepalived:2383
      imagePullPolicy: IfNotPresent
      name: ibm-cloud-provider-ip-158-177-65-46
      resources:
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
        privileged: false
        runAsGroup: 2000
        runAsUser: 2000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /status
        name: keepalived-status
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-958zf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /usr/local/bin/hostDirPerms
      image: de.icr.io/armada-master/keepalived:2383
      imagePullPolicy: IfNotPresent
      name: ibm-cloud-provider-ip-keepalived-init
      resources:
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        runAsGroup: 0
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /status
        name: keepalived-status
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-958zf
        readOnly: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 900000000
    priorityClassName: ibm-app-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: dedicated
      value: gateway
    - key: dedicated
      value: edge
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - hostPath:
        path: /tmp/keepalived
        type: ""
      name: keepalived-status
    - name: kube-api-access-958zf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:41:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:41:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:41:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:41:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b98baa7f98892580ad9b359e32e556906fcdfed82208e64fbcd6759bb55a0b12
      image: de.icr.io/armada-master/keepalived:2383
      imageID: de.icr.io/armada-master/keepalived@sha256:f926936e40b5bcbef19fb1367b3c0e36e51126ff2685087785537b18542e2480
      lastState: {}
      name: ibm-cloud-provider-ip-158-177-65-46
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-15T09:41:15Z"
    hostIP: 10.85.149.8
    initContainerStatuses:
    - containerID: containerd://dd3890307940f9c06fd72c8b944ef5a04521cafa14926d7df4ba4b17b9ca9839
      image: de.icr.io/armada-master/keepalived:2383
      imageID: de.icr.io/armada-master/keepalived@sha256:f926936e40b5bcbef19fb1367b3c0e36e51126ff2685087785537b18542e2480
      lastState: {}
      name: ibm-cloud-provider-ip-keepalived-init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://dd3890307940f9c06fd72c8b944ef5a04521cafa14926d7df4ba4b17b9ca9839
          exitCode: 0
          finishedAt: "2023-03-15T09:41:11Z"
          reason: Completed
          startedAt: "2023-03-15T09:41:11Z"
    phase: Running
    podIP: 10.85.149.8
    podIPs:
    - ip: 10.85.149.8
    qosClass: Burstable
    startTime: "2023-03-15T09:41:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-15T09:41:05Z"
    generateName: ibm-cloud-provider-ip-158-177-65-46-5f65d64758-
    labels:
      ibm-cloud-provider-ip: 158-177-65-46
      ibm-cloud-provider-lb-app: keepalived
      ibm-cloud-provider-lb-name: a95e34b653e7249dc986e6d973eec8c0
      pod-template-hash: 5f65d64758
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:ibm-cloud-provider-ip: {}
            f:ibm-cloud-provider-lb-app: {}
            f:ibm-cloud-provider-lb-name: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"bbda97a1-1b0b-4d97-93a2-93982fce446f"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"ibm-cloud-provider-ip-158-177-65-46"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"FEATURES"}:
                  .: {}
                  f:name: {}
                k:{"name":"VIRTUAL_IP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:capabilities:
                  .: {}
                  f:add: {}
                f:privileged: {}
                f:runAsGroup: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/status"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"ibm-cloud-provider-ip-keepalived-init"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:runAsGroup: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/status"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"keepalived-status"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-15T09:41:05Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.85.149.20"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-15T09:41:15Z"
    name: ibm-cloud-provider-ip-158-177-65-46-5f65d64758-st2nz
    namespace: ibm-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ibm-cloud-provider-ip-158-177-65-46-5f65d64758
      uid: bbda97a1-1b0b-4d97-93a2-93982fce446f
    resourceVersion: "2810"
    uid: 209919b7-5794-4259-a704-d8e40dee73d8
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: publicVLAN
              operator: In
              values:
              - "3319718"
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: ibm-cloud-provider-lb-app
                operator: In
                values:
                - keepalived
            topologyKey: kubernetes.io/hostname
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              ibm-cloud-provider-ip: 158-177-65-46
              ibm-cloud-provider-lb-name: a95e34b653e7249dc986e6d973eec8c0
          topologyKey: kubernetes.io/hostname
    containers:
    - env:
      - name: VIRTUAL_IP
        value: 158.177.65.46
      - name: FEATURES
      image: de.icr.io/armada-master/keepalived:2383
      imagePullPolicy: IfNotPresent
      name: ibm-cloud-provider-ip-158-177-65-46
      resources:
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
        privileged: false
        runAsGroup: 2000
        runAsUser: 2000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /status
        name: keepalived-status
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4f8jz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /usr/local/bin/hostDirPerms
      image: de.icr.io/armada-master/keepalived:2383
      imagePullPolicy: IfNotPresent
      name: ibm-cloud-provider-ip-keepalived-init
      resources:
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        runAsGroup: 0
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /status
        name: keepalived-status
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4f8jz
        readOnly: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 900000000
    priorityClassName: ibm-app-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: dedicated
      value: gateway
    - key: dedicated
      value: edge
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - hostPath:
        path: /tmp/keepalived
        type: ""
      name: keepalived-status
    - name: kube-api-access-4f8jz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:41:14Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:41:15Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:41:15Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:41:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c4d23623f7a1ed4fa8cda795b24bceffe1bf7d0502a0192270f404f2d021dd14
      image: de.icr.io/armada-master/keepalived:2383
      imageID: de.icr.io/armada-master/keepalived@sha256:f926936e40b5bcbef19fb1367b3c0e36e51126ff2685087785537b18542e2480
      lastState: {}
      name: ibm-cloud-provider-ip-158-177-65-46
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-15T09:41:14Z"
    hostIP: 10.85.149.20
    initContainerStatuses:
    - containerID: containerd://2868a91f0183c3856e7aa5e6f2c30b964edb0696bb7caf31d2ee13144b71a868
      image: de.icr.io/armada-master/keepalived:2383
      imageID: de.icr.io/armada-master/keepalived@sha256:f926936e40b5bcbef19fb1367b3c0e36e51126ff2685087785537b18542e2480
      lastState: {}
      name: ibm-cloud-provider-ip-keepalived-init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://2868a91f0183c3856e7aa5e6f2c30b964edb0696bb7caf31d2ee13144b71a868
          exitCode: 0
          finishedAt: "2023-03-15T09:41:09Z"
          reason: Completed
          startedAt: "2023-03-15T09:41:09Z"
    phase: Running
    podIP: 10.85.149.20
    podIPs:
    - ip: 10.85.149.20
    qosClass: Burstable
    startTime: "2023-03-15T09:41:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: a3c9624ae37a844692fe004e680346e29624878bf7757259d2020697f32d8cf8
      cni.projectcalico.org/podIP: 172.30.188.136/32
      cni.projectcalico.org/podIPs: 172.30.188.136/32
    creationTimestamp: "2023-03-26T18:20:51Z"
    generateName: calico-kube-controllers-68c88d7549-
    labels:
      k8s-app: calico-kube-controllers
      pod-template-hash: 68c88d7549
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:k8s-app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ede4e14a-79ee-4d90-996c-18681519e738"}: {}
        f:spec:
          f:containers:
            k:{"name":"calico-kube-controllers"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"DATASTORE_TYPE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ENABLED_CONTROLLERS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-26T18:20:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-26T18:20:55Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.136"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:12Z"
    name: calico-kube-controllers-68c88d7549-j6fz8
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: calico-kube-controllers-68c88d7549
      uid: ede4e14a-79ee-4d90-996c-18681519e738
    resourceVersion: "1449389"
    uid: a87fcbbe-0a8c-4fe6-88a8-ec7dc92e0582
  spec:
    containers:
    - env:
      - name: ENABLED_CONTROLLERS
        value: node
      - name: DATASTORE_TYPE
        value: kubernetes
      image: de.icr.io/armada-master/calico/kube-controllers:v3.24.5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /usr/bin/check-status
          - -l
        failureThreshold: 6
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: calico-kube-controllers
      readinessProbe:
        exec:
          command:
          - /usr/bin/check-status
          - -r
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: 10m
          memory: 25Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vbmzk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: calico-kube-controllers
    serviceAccountName: calico-kube-controllers
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: kube-api-access-vbmzk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:21:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:21:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://83b8a130c6aa0f9d6e588b08ee63314360ca1bb8a08d5d7931cbd9e71fed1554
      image: de.icr.io/armada-master/calico/kube-controllers:v3.24.5
      imageID: de.icr.io/armada-master/calico/kube-controllers@sha256:3cc37c38525117a7ceb834bba0cc7a71716430a677e6b29d9317c2d5dca24e77
      lastState: {}
      name: calico-kube-controllers
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-26T18:21:10Z"
    hostIP: 10.85.149.8
    phase: Running
    podIP: 172.30.188.136
    podIPs:
    - ip: 172.30.188.136
    qosClass: Burstable
    startTime: "2023-03-26T18:20:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-15T09:27:31Z"
    generateName: calico-node-
    labels:
      controller-revision-hash: 55dfdb5755
      k8s-app: calico-node
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:controller-revision-hash: {}
            f:k8s-app: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"0e0ada95-2f6b-4bf9-a294-20800a104e0b"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"calico-node"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"CALICO_DISABLE_FILE_LOGGING"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CALICO_IPV4POOL_CIDR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CALICO_IPV4POOL_IPIP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CALICO_NETWORKING_BACKEND"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:configMapKeyRef: {}
                k:{"name":"CLUSTER_TYPE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DATASTORE_TYPE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FELIX_DEFAULTENDPOINTTOHOSTACTION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FELIX_FAILSAFEINBOUNDHOSTPORTS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FELIX_FAILSAFEOUTBOUNDHOSTPORTS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FELIX_HEALTHENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FELIX_IPINIPMTU"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:configMapKeyRef: {}
                k:{"name":"FELIX_IPTABLESREFRESHINTERVAL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FELIX_IPV6SUPPORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FELIX_PROMETHEUSMETRICSENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FELIX_PROMETHEUSMETRICSPORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FELIX_TYPHAK8SSERVICENAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:configMapKeyRef: {}
                k:{"name":"FELIX_USAGEREPORTINGENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"IP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"IP_AUTODETECTION_METHOD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NODENAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"WAIT_FOR_DATASTORE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:envFrom: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/lib/modules"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run/xtables.lock"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/calico"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/calico/cni"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/calico"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"calico-extension"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"CALICO_K8S_NODE_REF"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"DATASTORE_TYPE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"install-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_CONF_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_MTU"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:configMapKeyRef: {}
                k:{"name":"CNI_NETWORK_CONFIG"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:configMapKeyRef: {}
                k:{"name":"KUBERNETES_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:envFrom: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-bin-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"cni-log-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"cni-net-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"lib-modules"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lib-calico"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-run-calico"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"xtables-lock"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-15T09:27:31Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.85.149.20"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-15T09:29:22Z"
    name: calico-node-v4b5q
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: calico-node
      uid: 0e0ada95-2f6b-4bf9-a294-20800a104e0b
    resourceVersion: "2089"
    uid: b2b94a2d-b7af-4c00-8421-dd55b578d61f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - 10.85.149.20
    containers:
    - env:
      - name: DATASTORE_TYPE
        value: kubernetes
      - name: FELIX_TYPHAK8SSERVICENAME
        valueFrom:
          configMapKeyRef:
            key: typha_service_name
            name: calico-config
      - name: WAIT_FOR_DATASTORE
        value: "true"
      - name: NODENAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CALICO_NETWORKING_BACKEND
        valueFrom:
          configMapKeyRef:
            key: calico_backend
            name: calico-config
      - name: CLUSTER_TYPE
        value: k8s,bgp
      - name: IP
        value: autodetect
      - name: CALICO_IPV4POOL_IPIP
        value: CrossSubnet
      - name: FELIX_IPINIPMTU
        valueFrom:
          configMapKeyRef:
            key: veth_mtu
            name: calico-config
      - name: CALICO_IPV4POOL_CIDR
        value: 172.30.0.0/16
      - name: CALICO_DISABLE_FILE_LOGGING
        value: "true"
      - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
        value: ACCEPT
      - name: FELIX_IPV6SUPPORT
        value: "false"
      - name: FELIX_IPTABLESREFRESHINTERVAL
        value: "60"
      - name: FELIX_PROMETHEUSMETRICSENABLED
        value: "true"
      - name: FELIX_PROMETHEUSMETRICSPORT
        value: "9091"
      - name: FELIX_FAILSAFEINBOUNDHOSTPORTS
        value: none
      - name: FELIX_FAILSAFEOUTBOUNDHOSTPORTS
        value: none
      - name: IP_AUTODETECTION_METHOD
        value: interface=(^bond0$|^eth0$|^ens.*$|^enc.*$)
      - name: FELIX_HEALTHENABLED
        value: "true"
      - name: FELIX_USAGEREPORTINGENABLED
        value: "false"
      envFrom:
      - configMapRef:
          name: kubernetes-services-endpoint
          optional: true
      image: de.icr.io/armada-master/calico/node:v3.24.5
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/calico-node
            - -shutdown
      livenessProbe:
        exec:
          command:
          - /bin/calico-node
          - -felix-live
          - -bird-live
        failureThreshold: 6
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: calico-node
      readinessProbe:
        exec:
          command:
          - /bin/calico-node
          - -felix-ready
          - -bird-ready
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 250m
          memory: 90Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/calico
        name: var-run-calico
      - mountPath: /var/lib/calico
        name: var-lib-calico
      - mountPath: /var/log/calico/cni
        name: cni-log-dir
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2smnl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /opt/cni/bin/install
      env:
      - name: CNI_CONF_NAME
        value: 10-calico.conflist
      - name: CNI_NETWORK_CONFIG
        valueFrom:
          configMapKeyRef:
            key: cni_network_config
            name: calico-config
      - name: KUBERNETES_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CNI_MTU
        valueFrom:
          configMapKeyRef:
            key: veth_mtu
            name: calico-config
      - name: SLEEP
        value: "false"
      envFrom:
      - configMapRef:
          name: kubernetes-services-endpoint
          optional: true
      image: de.icr.io/armada-master/calico/cni:v3.24.5
      imagePullPolicy: IfNotPresent
      name: install-cni
      resources:
        requests:
          cpu: 5m
          memory: 5Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2smnl
        readOnly: true
    - env:
      - name: CALICO_K8S_NODE_REF
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: DATASTORE_TYPE
        value: kubernetes
      image: de.icr.io/armada-master/armada-calico-extension:1308-amd64
      imagePullPolicy: IfNotPresent
      name: calico-extension
      resources:
        requests:
          cpu: 5m
          memory: 5Mi
      securityContext:
        runAsUser: 2000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2smnl
        readOnly: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: calico-node
    serviceAccountName: calico-node
    terminationGracePeriodSeconds: 180
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - hostPath:
        path: /var/run/calico
        type: ""
      name: var-run-calico
    - hostPath:
        path: /var/lib/calico
        type: ""
      name: var-lib-calico
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /opt/cni/bin
        type: ""
      name: cni-bin-dir
    - hostPath:
        path: /etc/cni/net.d
        type: ""
      name: cni-net-dir
    - hostPath:
        path: /var/log/calico/cni
        type: ""
      name: cni-log-dir
    - name: kube-api-access-2smnl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:28:05Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:29:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:29:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:31Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6e5b599da903703b20e8ea396169712f1ccea5aa5e273c8b18cd0ad07e6f9d32
      image: de.icr.io/armada-master/calico/node:v3.24.5
      imageID: de.icr.io/armada-master/calico/node@sha256:b85f039c76e50c2559f5cc3bb3bd477f47314511bb457711e142dcb2a04e6821
      lastState: {}
      name: calico-node
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-15T09:28:15Z"
    hostIP: 10.85.149.20
    initContainerStatuses:
    - containerID: containerd://e7743cb053b94466eefc06134e64915a2f5109c2aaf5b69263719b2f7784ecc0
      image: de.icr.io/armada-master/calico/cni:v3.24.5
      imageID: de.icr.io/armada-master/calico/cni@sha256:04524020bfcc0bdec334c9437c5f53027f5e21fe5a3883db947dff936c700ee4
      lastState: {}
      name: install-cni
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://e7743cb053b94466eefc06134e64915a2f5109c2aaf5b69263719b2f7784ecc0
          exitCode: 0
          finishedAt: "2023-03-15T09:27:47Z"
          reason: Completed
          startedAt: "2023-03-15T09:27:45Z"
    - containerID: containerd://cd0b9d9c8beacf45489f76c36180bc248c4d167d90d688956db39976bb70febb
      image: de.icr.io/armada-master/armada-calico-extension:1308-amd64
      imageID: de.icr.io/armada-master/armada-calico-extension@sha256:d0cfa42ea053e2d0c782372895f58fffd07c9b55cac83f702700638ba5f1002d
      lastState: {}
      name: calico-extension
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://cd0b9d9c8beacf45489f76c36180bc248c4d167d90d688956db39976bb70febb
          exitCode: 0
          finishedAt: "2023-03-15T09:28:02Z"
          reason: Completed
          startedAt: "2023-03-15T09:28:02Z"
    phase: Running
    podIP: 10.85.149.20
    podIPs:
    - ip: 10.85.149.20
    qosClass: Burstable
    startTime: "2023-03-15T09:27:31Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-15T09:27:26Z"
    generateName: calico-node-
    labels:
      controller-revision-hash: 55dfdb5755
      k8s-app: calico-node
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:controller-revision-hash: {}
            f:k8s-app: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"0e0ada95-2f6b-4bf9-a294-20800a104e0b"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"calico-node"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"CALICO_DISABLE_FILE_LOGGING"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CALICO_IPV4POOL_CIDR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CALICO_IPV4POOL_IPIP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CALICO_NETWORKING_BACKEND"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:configMapKeyRef: {}
                k:{"name":"CLUSTER_TYPE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DATASTORE_TYPE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FELIX_DEFAULTENDPOINTTOHOSTACTION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FELIX_FAILSAFEINBOUNDHOSTPORTS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FELIX_FAILSAFEOUTBOUNDHOSTPORTS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FELIX_HEALTHENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FELIX_IPINIPMTU"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:configMapKeyRef: {}
                k:{"name":"FELIX_IPTABLESREFRESHINTERVAL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FELIX_IPV6SUPPORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FELIX_PROMETHEUSMETRICSENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FELIX_PROMETHEUSMETRICSPORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FELIX_TYPHAK8SSERVICENAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:configMapKeyRef: {}
                k:{"name":"FELIX_USAGEREPORTINGENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"IP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"IP_AUTODETECTION_METHOD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NODENAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"WAIT_FOR_DATASTORE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:envFrom: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/lib/modules"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run/xtables.lock"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/calico"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/calico/cni"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/calico"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"calico-extension"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"CALICO_K8S_NODE_REF"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"DATASTORE_TYPE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"install-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_CONF_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_MTU"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:configMapKeyRef: {}
                k:{"name":"CNI_NETWORK_CONFIG"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:configMapKeyRef: {}
                k:{"name":"KUBERNETES_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:envFrom: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-bin-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"cni-log-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"cni-net-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"lib-modules"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lib-calico"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-run-calico"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"xtables-lock"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-15T09:27:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.85.149.8"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-15T09:29:14Z"
    name: calico-node-xnlct
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: calico-node
      uid: 0e0ada95-2f6b-4bf9-a294-20800a104e0b
    resourceVersion: "2082"
    uid: d43fb4a9-065f-42b9-bce5-c607f1aff669
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - 10.85.149.8
    containers:
    - env:
      - name: DATASTORE_TYPE
        value: kubernetes
      - name: FELIX_TYPHAK8SSERVICENAME
        valueFrom:
          configMapKeyRef:
            key: typha_service_name
            name: calico-config
      - name: WAIT_FOR_DATASTORE
        value: "true"
      - name: NODENAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CALICO_NETWORKING_BACKEND
        valueFrom:
          configMapKeyRef:
            key: calico_backend
            name: calico-config
      - name: CLUSTER_TYPE
        value: k8s,bgp
      - name: IP
        value: autodetect
      - name: CALICO_IPV4POOL_IPIP
        value: CrossSubnet
      - name: FELIX_IPINIPMTU
        valueFrom:
          configMapKeyRef:
            key: veth_mtu
            name: calico-config
      - name: CALICO_IPV4POOL_CIDR
        value: 172.30.0.0/16
      - name: CALICO_DISABLE_FILE_LOGGING
        value: "true"
      - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
        value: ACCEPT
      - name: FELIX_IPV6SUPPORT
        value: "false"
      - name: FELIX_IPTABLESREFRESHINTERVAL
        value: "60"
      - name: FELIX_PROMETHEUSMETRICSENABLED
        value: "true"
      - name: FELIX_PROMETHEUSMETRICSPORT
        value: "9091"
      - name: FELIX_FAILSAFEINBOUNDHOSTPORTS
        value: none
      - name: FELIX_FAILSAFEOUTBOUNDHOSTPORTS
        value: none
      - name: IP_AUTODETECTION_METHOD
        value: interface=(^bond0$|^eth0$|^ens.*$|^enc.*$)
      - name: FELIX_HEALTHENABLED
        value: "true"
      - name: FELIX_USAGEREPORTINGENABLED
        value: "false"
      envFrom:
      - configMapRef:
          name: kubernetes-services-endpoint
          optional: true
      image: de.icr.io/armada-master/calico/node:v3.24.5
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/calico-node
            - -shutdown
      livenessProbe:
        exec:
          command:
          - /bin/calico-node
          - -felix-live
          - -bird-live
        failureThreshold: 6
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: calico-node
      readinessProbe:
        exec:
          command:
          - /bin/calico-node
          - -felix-ready
          - -bird-ready
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 250m
          memory: 90Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/calico
        name: var-run-calico
      - mountPath: /var/lib/calico
        name: var-lib-calico
      - mountPath: /var/log/calico/cni
        name: cni-log-dir
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wxqng
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /opt/cni/bin/install
      env:
      - name: CNI_CONF_NAME
        value: 10-calico.conflist
      - name: CNI_NETWORK_CONFIG
        valueFrom:
          configMapKeyRef:
            key: cni_network_config
            name: calico-config
      - name: KUBERNETES_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CNI_MTU
        valueFrom:
          configMapKeyRef:
            key: veth_mtu
            name: calico-config
      - name: SLEEP
        value: "false"
      envFrom:
      - configMapRef:
          name: kubernetes-services-endpoint
          optional: true
      image: de.icr.io/armada-master/calico/cni:v3.24.5
      imagePullPolicy: IfNotPresent
      name: install-cni
      resources:
        requests:
          cpu: 5m
          memory: 5Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wxqng
        readOnly: true
    - env:
      - name: CALICO_K8S_NODE_REF
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: DATASTORE_TYPE
        value: kubernetes
      image: de.icr.io/armada-master/armada-calico-extension:1308-amd64
      imagePullPolicy: IfNotPresent
      name: calico-extension
      resources:
        requests:
          cpu: 5m
          memory: 5Mi
      securityContext:
        runAsUser: 2000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wxqng
        readOnly: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: calico-node
    serviceAccountName: calico-node
    terminationGracePeriodSeconds: 180
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - hostPath:
        path: /var/run/calico
        type: ""
      name: var-run-calico
    - hostPath:
        path: /var/lib/calico
        type: ""
      name: var-lib-calico
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /opt/cni/bin
        type: ""
      name: cni-bin-dir
    - hostPath:
        path: /etc/cni/net.d
        type: ""
      name: cni-net-dir
    - hostPath:
        path: /var/log/calico/cni
        type: ""
      name: cni-log-dir
    - name: kube-api-access-wxqng
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:56Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:29:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:29:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ba9b61e38b37a5dacdf26d7e6fd357abea0adac7305a2378050a13ca42577a80
      image: de.icr.io/armada-master/calico/node:v3.24.5
      imageID: de.icr.io/armada-master/calico/node@sha256:b85f039c76e50c2559f5cc3bb3bd477f47314511bb457711e142dcb2a04e6821
      lastState: {}
      name: calico-node
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-15T09:28:07Z"
    hostIP: 10.85.149.8
    initContainerStatuses:
    - containerID: containerd://5b18ce72a51875b347f7d8d5dbe6071e3ae4ae1a97a4dce0fabaa37fd5e46071
      image: de.icr.io/armada-master/calico/cni:v3.24.5
      imageID: de.icr.io/armada-master/calico/cni@sha256:04524020bfcc0bdec334c9437c5f53027f5e21fe5a3883db947dff936c700ee4
      lastState: {}
      name: install-cni
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://5b18ce72a51875b347f7d8d5dbe6071e3ae4ae1a97a4dce0fabaa37fd5e46071
          exitCode: 0
          finishedAt: "2023-03-15T09:27:40Z"
          reason: Completed
          startedAt: "2023-03-15T09:27:38Z"
    - containerID: containerd://0ae8129396937c672cb6cdf44ed52b73e75a9f94863d87ec9715f3055bc64717
      image: de.icr.io/armada-master/armada-calico-extension:1308-amd64
      imageID: de.icr.io/armada-master/armada-calico-extension@sha256:d0cfa42ea053e2d0c782372895f58fffd07c9b55cac83f702700638ba5f1002d
      lastState: {}
      name: calico-extension
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://0ae8129396937c672cb6cdf44ed52b73e75a9f94863d87ec9715f3055bc64717
          exitCode: 0
          finishedAt: "2023-03-15T09:27:54Z"
          reason: Completed
          startedAt: "2023-03-15T09:27:53Z"
    phase: Running
    podIP: 10.85.149.8
    podIPs:
    - ip: 10.85.149.8
    qosClass: Burstable
    startTime: "2023-03-15T09:27:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    creationTimestamp: "2023-03-26T18:20:50Z"
    generateName: calico-typha-7d8459ddf6-
    labels:
      k8s-app: calico-typha
      pod-template-hash: 7d8459ddf6
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/safe-to-evict: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:k8s-app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"fe93cdaa-2d61-41dc-9ccc-87a272f481aa"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"calico-typha"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"TYPHA_CONNECTIONREBALANCINGMODE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TYPHA_DATASTORETYPE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TYPHA_HEALTHENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TYPHA_LOGFILEPATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TYPHA_LOGSEVERITYSCREEN"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TYPHA_LOGSEVERITYSYS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:envFrom: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:host: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":5473,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:host: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:runAsNonRoot: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:topologySpreadConstraints:
            .: {}
            k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-26T18:20:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      subresource: status
      time: "2023-03-26T18:26:32Z"
    name: calico-typha-7d8459ddf6-89nz4
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: calico-typha-7d8459ddf6
      uid: fe93cdaa-2d61-41dc-9ccc-87a272f481aa
    resourceVersion: "1450125"
    uid: efba9c7a-612d-4993-9b3e-c4dd995381e4
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - calico-typha
            topologyKey: topology.kubernetes.io/zone
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: k8s-app
              operator: In
              values:
              - calico-typha
          topologyKey: kubernetes.io/hostname
    containers:
    - env:
      - name: TYPHA_LOGSEVERITYSCREEN
        value: info
      - name: TYPHA_LOGFILEPATH
        value: none
      - name: TYPHA_LOGSEVERITYSYS
        value: none
      - name: TYPHA_CONNECTIONREBALANCINGMODE
        value: kubernetes
      - name: TYPHA_DATASTORETYPE
        value: kubernetes
      - name: TYPHA_HEALTHENABLED
        value: "true"
      envFrom:
      - configMapRef:
          name: kubernetes-services-endpoint
          optional: true
      image: de.icr.io/armada-master/calico/typha:v3.24.5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: localhost
          path: /liveness
          port: 9098
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 10
      name: calico-typha
      ports:
      - containerPort: 5473
        hostPort: 5473
        name: calico-typha
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: localhost
          path: /readiness
          port: 9098
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 250m
          memory: 80Mi
      securityContext:
        allowPrivilegeEscalation: false
        runAsNonRoot: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-d7ksx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
    serviceAccount: calico-node
    serviceAccountName: calico-node
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          k8s-app: calico-typha
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - name: kube-api-access-d7ksx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:50Z"
      message: '0/2 nodes are available: 2 node(s) didn''t have free ports for the
        requested pod ports. preemption: 0/2 nodes are available: 2 node(s) didn''t
        have free ports for the requested pod ports.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: Burstable
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    creationTimestamp: "2023-03-15T09:19:32Z"
    generateName: calico-typha-7d8459ddf6-
    labels:
      k8s-app: calico-typha
      pod-template-hash: 7d8459ddf6
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/safe-to-evict: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:k8s-app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"fe93cdaa-2d61-41dc-9ccc-87a272f481aa"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"calico-typha"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"TYPHA_CONNECTIONREBALANCINGMODE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TYPHA_DATASTORETYPE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TYPHA_HEALTHENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TYPHA_LOGFILEPATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TYPHA_LOGSEVERITYSCREEN"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TYPHA_LOGSEVERITYSYS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:envFrom: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:host: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":5473,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:host: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:runAsNonRoot: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:topologySpreadConstraints:
            .: {}
            k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-15T09:19:32Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      subresource: status
      time: "2023-03-15T09:27:47Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.85.149.20"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-15T09:28:06Z"
    name: calico-typha-7d8459ddf6-lpqhl
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: calico-typha-7d8459ddf6
      uid: fe93cdaa-2d61-41dc-9ccc-87a272f481aa
    resourceVersion: "1958"
    uid: 819f1baf-44b2-435e-8bb6-f0d99353deb7
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - calico-typha
            topologyKey: topology.kubernetes.io/zone
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: k8s-app
              operator: In
              values:
              - calico-typha
          topologyKey: kubernetes.io/hostname
    containers:
    - env:
      - name: TYPHA_LOGSEVERITYSCREEN
        value: info
      - name: TYPHA_LOGFILEPATH
        value: none
      - name: TYPHA_LOGSEVERITYSYS
        value: none
      - name: TYPHA_CONNECTIONREBALANCINGMODE
        value: kubernetes
      - name: TYPHA_DATASTORETYPE
        value: kubernetes
      - name: TYPHA_HEALTHENABLED
        value: "true"
      envFrom:
      - configMapRef:
          name: kubernetes-services-endpoint
          optional: true
      image: de.icr.io/armada-master/calico/typha:v3.24.5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: localhost
          path: /liveness
          port: 9098
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 10
      name: calico-typha
      ports:
      - containerPort: 5473
        hostPort: 5473
        name: calico-typha
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: localhost
          path: /readiness
          port: 9098
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 250m
          memory: 80Mi
      securityContext:
        allowPrivilegeEscalation: false
        runAsNonRoot: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tl7fr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
    serviceAccount: calico-node
    serviceAccountName: calico-node
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          k8s-app: calico-typha
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - name: kube-api-access-tl7fr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:58Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:28:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:28:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3557274e3eced68f07394caa38466128981e7ff648d3881e64018edac3ac359d
      image: de.icr.io/armada-master/calico/typha:v3.24.5
      imageID: de.icr.io/armada-master/calico/typha@sha256:6ea02901883b5cba41c89693376bb83cd4cc25ad5ccfb32c670d4d5c724dea6d
      lastState: {}
      name: calico-typha
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-15T09:28:05Z"
    hostIP: 10.85.149.20
    phase: Running
    podIP: 10.85.149.20
    podIPs:
    - ip: 10.85.149.20
    qosClass: Burstable
    startTime: "2023-03-15T09:27:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    creationTimestamp: "2023-03-15T09:19:32Z"
    generateName: calico-typha-7d8459ddf6-
    labels:
      k8s-app: calico-typha
      pod-template-hash: 7d8459ddf6
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/safe-to-evict: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:k8s-app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"fe93cdaa-2d61-41dc-9ccc-87a272f481aa"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"calico-typha"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"TYPHA_CONNECTIONREBALANCINGMODE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TYPHA_DATASTORETYPE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TYPHA_HEALTHENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TYPHA_LOGFILEPATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TYPHA_LOGSEVERITYSCREEN"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TYPHA_LOGSEVERITYSYS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:envFrom: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:host: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":5473,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:host: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:runAsNonRoot: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:topologySpreadConstraints:
            .: {}
            k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-15T09:19:32Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      subresource: status
      time: "2023-03-15T09:25:54Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.85.149.8"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-15T09:27:54Z"
    name: calico-typha-7d8459ddf6-mqmzb
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: calico-typha-7d8459ddf6
      uid: fe93cdaa-2d61-41dc-9ccc-87a272f481aa
    resourceVersion: "1919"
    uid: be5bb3c4-58d1-4362-a16c-897c40bdd559
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - calico-typha
            topologyKey: topology.kubernetes.io/zone
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: k8s-app
              operator: In
              values:
              - calico-typha
          topologyKey: kubernetes.io/hostname
    containers:
    - env:
      - name: TYPHA_LOGSEVERITYSCREEN
        value: info
      - name: TYPHA_LOGFILEPATH
        value: none
      - name: TYPHA_LOGSEVERITYSYS
        value: none
      - name: TYPHA_CONNECTIONREBALANCINGMODE
        value: kubernetes
      - name: TYPHA_DATASTORETYPE
        value: kubernetes
      - name: TYPHA_HEALTHENABLED
        value: "true"
      envFrom:
      - configMapRef:
          name: kubernetes-services-endpoint
          optional: true
      image: de.icr.io/armada-master/calico/typha:v3.24.5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: localhost
          path: /liveness
          port: 9098
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 10
      name: calico-typha
      ports:
      - containerPort: 5473
        hostPort: 5473
        name: calico-typha
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: localhost
          path: /readiness
          port: 9098
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 250m
          memory: 80Mi
      securityContext:
        allowPrivilegeEscalation: false
        runAsNonRoot: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9sfcp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
    serviceAccount: calico-node
    serviceAccountName: calico-node
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          k8s-app: calico-typha
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - name: kube-api-access-9sfcp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:47Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:47Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://af796b0de6b23b677c0ec4687d7c54dc8723a898a7437e85139873b3eaa99a57
      image: de.icr.io/armada-master/calico/typha:v3.24.5
      imageID: de.icr.io/armada-master/calico/typha@sha256:6ea02901883b5cba41c89693376bb83cd4cc25ad5ccfb32c670d4d5c724dea6d
      lastState: {}
      name: calico-typha
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-15T09:27:53Z"
    hostIP: 10.85.149.8
    phase: Running
    podIP: 10.85.149.8
    podIPs:
    - ip: 10.85.149.8
    qosClass: Burstable
    startTime: "2023-03-15T09:27:47Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 3b41ac14e2bd6ebb9009bb74a38ad05426a0957ab8acd17683bf249dccaa9ccf
      cni.projectcalico.org/podIP: 172.30.140.90/32
      cni.projectcalico.org/podIPs: 172.30.140.90/32
    creationTimestamp: "2023-03-26T18:20:51Z"
    generateName: coredns-599d67449d-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 599d67449d
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:k8s-app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e7dab542-795b-41d9-920c-95f9ac5b33a2"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"coredns"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":53,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":53,"protocol":"UDP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9153,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:add: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsUser: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/coredns"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:topologySpreadConstraints:
            .: {}
            k:{"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
            k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
          f:volumes:
            .: {}
            k:{"name":"config-volume"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-26T18:20:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-26T18:20:54Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.90"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:08Z"
    name: coredns-599d67449d-cmmsn
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-599d67449d
      uid: e7dab542-795b-41d9-920c-95f9ac5b33a2
    resourceVersion: "1449346"
    uid: c56e9a38-af68-4c64-b969-b29b58a56518
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: topology.kubernetes.io/zone
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: de.icr.io/armada-master/coredns:1.10.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 400Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4xg9d
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - key: dedicated
      value: gpu-task
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          k8s-app: kube-dns
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          k8s-app: kube-dns
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        name: coredns
      name: config-volume
    - name: kube-api-access-4xg9d
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:21:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:21:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ebfb700f4b39254c2a5ebe3549e0f8b3c4ab5fe67a01dc10f18d6a7a6a494364
      image: de.icr.io/armada-master/coredns:1.10.0
      imageID: de.icr.io/armada-master/coredns@sha256:36a112d2d406f985b72abc2274c1d8ba734d9c8ea743323a26dba976cc635338
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-26T18:21:06Z"
    hostIP: 10.85.149.20
    phase: Running
    podIP: 172.30.140.90
    podIPs:
    - ip: 172.30.140.90
    qosClass: Burstable
    startTime: "2023-03-26T18:20:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 7d5b3cb74cda724d00a9a3d2244c8a71047ece82f88213c1fb57a79aa34f2098
      cni.projectcalico.org/podIP: 172.30.188.181/32
      cni.projectcalico.org/podIPs: 172.30.188.181/32
    creationTimestamp: "2023-03-26T18:20:50Z"
    generateName: coredns-599d67449d-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 599d67449d
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:k8s-app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e7dab542-795b-41d9-920c-95f9ac5b33a2"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"coredns"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":53,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":53,"protocol":"UDP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9153,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:add: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsUser: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/coredns"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:topologySpreadConstraints:
            .: {}
            k:{"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
            k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
          f:volumes:
            .: {}
            k:{"name":"config-volume"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-26T18:20:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-26T18:20:53Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.181"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:16Z"
    name: coredns-599d67449d-d6p54
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-599d67449d
      uid: e7dab542-795b-41d9-920c-95f9ac5b33a2
    resourceVersion: "1449440"
    uid: aa90e1bf-8ead-4bc0-bbb8-6afd555b9722
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: topology.kubernetes.io/zone
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: de.icr.io/armada-master/coredns:1.10.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 400Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n7cp9
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - key: dedicated
      value: gpu-task
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          k8s-app: kube-dns
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          k8s-app: kube-dns
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        name: coredns
      name: config-volume
    - name: kube-api-access-n7cp9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:21:15Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:21:15Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f8b5b6b95eff0c6a37b3be823ee51eeec77bed96d44afb4e75e2377eca1da326
      image: de.icr.io/armada-master/coredns:1.10.0
      imageID: de.icr.io/armada-master/coredns@sha256:36a112d2d406f985b72abc2274c1d8ba734d9c8ea743323a26dba976cc635338
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-26T18:21:14Z"
    hostIP: 10.85.149.8
    phase: Running
    podIP: 172.30.188.181
    podIPs:
    - ip: 172.30.188.181
    qosClass: Burstable
    startTime: "2023-03-26T18:20:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 5c1219650b6cff0ae387b1de7df705e4f535d4f6b2d786339d1539a32566ef86
      cni.projectcalico.org/podIP: 172.30.188.186/32
      cni.projectcalico.org/podIPs: 172.30.188.186/32
    creationTimestamp: "2023-03-26T18:20:51Z"
    generateName: coredns-599d67449d-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 599d67449d
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:k8s-app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e7dab542-795b-41d9-920c-95f9ac5b33a2"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"coredns"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":53,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":53,"protocol":"UDP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9153,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:add: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsUser: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/coredns"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:topologySpreadConstraints:
            .: {}
            k:{"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
            k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
          f:volumes:
            .: {}
            k:{"name":"config-volume"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-26T18:20:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-26T18:20:55Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.186"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:15Z"
    name: coredns-599d67449d-vpb4w
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-599d67449d
      uid: e7dab542-795b-41d9-920c-95f9ac5b33a2
    resourceVersion: "1449433"
    uid: 2a82b7a3-e13a-4eb5-a028-60b0e8d78e3a
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: topology.kubernetes.io/zone
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: de.icr.io/armada-master/coredns:1.10.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 400Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6nb48
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - key: dedicated
      value: gpu-task
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          k8s-app: kube-dns
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          k8s-app: kube-dns
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        name: coredns
      name: config-volume
    - name: kube-api-access-6nb48
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:21:15Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:21:15Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c254e6835d26af1476dd5d17c89390eac7ea1b1f3bfe53516da1b8172a201433
      image: de.icr.io/armada-master/coredns:1.10.0
      imageID: de.icr.io/armada-master/coredns@sha256:36a112d2d406f985b72abc2274c1d8ba734d9c8ea743323a26dba976cc635338
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-26T18:21:13Z"
    hostIP: 10.85.149.8
    phase: Running
    podIP: 172.30.188.186
    podIPs:
    - ip: 172.30.188.186
    qosClass: Burstable
    startTime: "2023-03-26T18:20:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 7d98dbeb01c9d7441c4d493ef0342fed8003876811778a4d35547e329c040ac8
      cni.projectcalico.org/podIP: 172.30.140.83/32
      cni.projectcalico.org/podIPs: 172.30.140.83/32
    creationTimestamp: "2023-03-26T18:20:51Z"
    generateName: coredns-autoscaler-5b84849d77-
    labels:
      k8s-app: coredns-autoscaler
      pod-template-hash: 5b84849d77
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:k8s-app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"181d69c8-df91-442a-9dd7-9850d1c14318"}: {}
        f:spec:
          f:containers:
            k:{"name":"autoscaler"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:runAsGroup: {}
            f:runAsUser: {}
            f:seccompProfile:
              .: {}
              f:type: {}
            f:supplementalGroups: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-26T18:20:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-26T18:20:54Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.83"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:06Z"
    name: coredns-autoscaler-5b84849d77-pcqrb
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-autoscaler-5b84849d77
      uid: 181d69c8-df91-442a-9dd7-9850d1c14318
    resourceVersion: "1449327"
    uid: a29bfd2e-fccb-4025-a86d-098cddef5f79
  spec:
    containers:
    - command:
      - /cluster-proportional-autoscaler
      - --namespace=kube-system
      - --configmap=coredns-autoscaler
      - --target=Deployment/coredns
      - --default-params={"linear":{"coresPerReplica":256,"nodesPerReplica":16,"preventSinglePointFailure":true,"min":3,"includeUnschedulableNodes":true}}
      - --logtostderr=true
      - --v=2
      image: de.icr.io/armada-master/cluster-proportional-autoscaler:1.8.6
      imagePullPolicy: IfNotPresent
      name: autoscaler
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-85jbk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsGroup: 65532
      runAsUser: 65532
      seccompProfile:
        type: RuntimeDefault
      supplementalGroups:
      - 65534
    serviceAccount: coredns-autoscaler
    serviceAccountName: coredns-autoscaler
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: kube-api-access-85jbk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:21:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:21:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7a34372a99cdc534997c4db8a89adc7608dcbe06e7beefd3823ada2f3ec40188
      image: de.icr.io/armada-master/cluster-proportional-autoscaler:1.8.6
      imageID: de.icr.io/armada-master/cluster-proportional-autoscaler@sha256:eea822eabe1b5afa4b84cfe00cc2abc876483d03a8f2a64417ff1186e324520e
      lastState: {}
      name: autoscaler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-26T18:21:06Z"
    hostIP: 10.85.149.20
    phase: Running
    podIP: 172.30.140.83
    podIPs:
    - ip: 172.30.140.83
    qosClass: Burstable
    startTime: "2023-03-26T18:20:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: a3afcbaae99acdb5e0b4bf5e2b160150a6cca90c03091ff899fa8c9acaeb372d
      cni.projectcalico.org/podIP: 172.30.140.66/32
      cni.projectcalico.org/podIPs: 172.30.140.66/32
    creationTimestamp: "2023-03-26T18:20:51Z"
    generateName: dashboard-metrics-scraper-c69fc9c89-
    labels:
      k8s-app: dashboard-metrics-scraper
      pod-template-hash: c69fc9c89
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:k8s-app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"7cd7e73f-9d8e-48c1-8380-63f05264720c"}: {}
        f:spec:
          f:containers:
            k:{"name":"dashboard-metrics-scraper"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8000,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:readOnlyRootFilesystem: {}
                f:runAsGroup: {}
                f:runAsUser: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"tmp-volume"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-26T18:20:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-26T18:20:55Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.66"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:41Z"
    name: dashboard-metrics-scraper-c69fc9c89-mmm78
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: dashboard-metrics-scraper-c69fc9c89
      uid: 7cd7e73f-9d8e-48c1-8380-63f05264720c
    resourceVersion: "1449521"
    uid: a616a5b7-6aaf-4167-a26f-804a908fa34d
  spec:
    containers:
    - image: de.icr.io/armada-master/kubernetesui-metrics-scraper:v1.0.8
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /
          port: 8000
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: dashboard-metrics-scraper
      ports:
      - containerPort: 8000
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8000
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 2001
        runAsUser: 1001
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s6xhg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kubernetes-dashboard
    serviceAccountName: kubernetes-dashboard
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: tmp-volume
    - name: kube-api-access-s6xhg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:21:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:21:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a4826fe6e9234384b5b1f7da20f031a3511ece77e32f2298cd628ef490841f53
      image: de.icr.io/armada-master/kubernetesui-metrics-scraper:v1.0.8
      imageID: de.icr.io/armada-master/kubernetesui-metrics-scraper@sha256:1f77d661c52fb13d0741fc7c06308db6f8055ba0252aa429314740d3405ae12c
      lastState: {}
      name: dashboard-metrics-scraper
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-26T18:21:07Z"
    hostIP: 10.85.149.20
    phase: Running
    podIP: 172.30.140.66
    podIPs:
    - ip: 172.30.140.66
    qosClass: Burstable
    startTime: "2023-03-26T18:20:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 4d0a1b7114b619d536e574b572dff1c9abfefb9be0aa770ddd391216777a407a
      cni.projectcalico.org/podIP: 172.30.140.88/32
      cni.projectcalico.org/podIPs: 172.30.140.88/32
    creationTimestamp: "2023-03-26T18:20:51Z"
    generateName: ibm-file-plugin-746759ffb4-
    labels:
      app: ibm-file-plugin
      pod-template-hash: 746759ffb4
      tier: frontend
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
            f:tier: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"079d635d-8f98-4874-ba8d-1717c25e3d11"}: {}
        f:spec:
          f:containers:
            k:{"name":"ibm-file-plugin-container"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"CLUSTER_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CM_SUBNET"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CRN_CONFIGMAP_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"PLUGIN_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"STORAGE_CONFIG_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WATCHER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/ibm_crn_info"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/storage_ibmc"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"crn-info-ibmc"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"storage-plugin-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-26T18:20:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-26T18:20:56Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.88"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:11Z"
    name: ibm-file-plugin-746759ffb4-8ks6j
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ibm-file-plugin-746759ffb4
      uid: 079d635d-8f98-4874-ba8d-1717c25e3d11
    resourceVersion: "1449379"
    uid: 26178d2e-fd69-4993-a203-a99d79438560
  spec:
    containers:
    - args:
      - -provisioner=ibm.io/ibmc-file
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: PLUGIN_IMAGE
        value: de.icr.io/armada-master/storage-file-plugin:427
      - name: CLUSTER_ID
        value: cg8om62f01beu8rudp30
      - name: CM_SUBNET
        value: subnet-config
      - name: WATCHER
        value: "false"
      - name: STORAGE_CONFIG_PATH
        value: /etc/storage_ibmc
      - name: CRN_CONFIGMAP_PATH
        value: /etc/ibm_crn_info
      image: de.icr.io/armada-master/storage-file-plugin:427
      imagePullPolicy: IfNotPresent
      name: ibm-file-plugin-container
      resources:
        limits:
          cpu: 200m
          memory: 200Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        privileged: true
        runAsNonRoot: false
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/storage_ibmc
        name: storage-plugin-secret
      - mountPath: /etc/ibm_crn_info
        name: crn-info-ibmc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g656c
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ibm-file-plugin
    serviceAccountName: ibm-file-plugin
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: storage-plugin-secret
      secret:
        defaultMode: 420
        secretName: storage-secret-store
    - configMap:
        defaultMode: 420
        name: crn-info-ibmc
      name: crn-info-ibmc
    - name: kube-api-access-g656c
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:21:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:21:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0f654137aaa25786afcd80b6ceb75afdf375a677b7c84d2c365f66809189a254
      image: de.icr.io/armada-master/storage-file-plugin:427
      imageID: de.icr.io/armada-master/storage-file-plugin@sha256:a3de6a27b686c1ef062fb0d1ed3122044f22e9b237340d0e8eb3358a03c49c0e
      lastState: {}
      name: ibm-file-plugin-container
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-26T18:21:10Z"
    hostIP: 10.85.149.20
    phase: Running
    podIP: 172.30.140.88
    podIPs:
    - ip: 172.30.140.88
    qosClass: Burstable
    startTime: "2023-03-26T18:20:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-15T09:27:31Z"
    generateName: ibm-keepalived-watcher-
    labels:
      app: ibm-keepalived-watcher
      controller-revision-hash: 559b4fccfb
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"277a5454-2bb2-4dc1-9fc7-760469e01677"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"keepalived-watcher"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:capabilities:
                  .: {}
                  f:add: {}
                f:runAsGroup: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/status"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"keepalived-init"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:runAsGroup: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/status"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"keepalived-status"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-15T09:27:31Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.85.149.20"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-15T09:27:39Z"
    name: ibm-keepalived-watcher-qvwm7
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ibm-keepalived-watcher
      uid: 277a5454-2bb2-4dc1-9fc7-760469e01677
    resourceVersion: "1838"
    uid: 31e8ba19-895e-4a31-bb27-29147cf30cbe
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - 10.85.149.20
    containers:
    - image: de.icr.io/armada-master/keepalived-watcher:2383
      imagePullPolicy: IfNotPresent
      name: keepalived-watcher
      resources:
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
        runAsGroup: 2000
        runAsUser: 2000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /status
        name: keepalived-status
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xnsqf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /usr/local/bin/hostDirPerms
      image: de.icr.io/armada-master/keepalived-watcher:2383
      imagePullPolicy: IfNotPresent
      name: keepalived-init
      resources:
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        runAsGroup: 0
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /status
        name: keepalived-status
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xnsqf
        readOnly: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ibm-keepalived-watcher
    serviceAccountName: ibm-keepalived-watcher
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /tmp/keepalived
        type: ""
      name: keepalived-status
    - name: kube-api-access-xnsqf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:31Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://015e4b7a2b3ac65a686e3ef9f6523ad964dc35ee3b09e3a0843ed706b2fb3310
      image: de.icr.io/armada-master/keepalived-watcher:2383
      imageID: de.icr.io/armada-master/keepalived-watcher@sha256:37d767fa9a66ff68c9b7f4efe3612201727c03279b89c56483080ca3f67abae4
      lastState: {}
      name: keepalived-watcher
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-15T09:27:38Z"
    hostIP: 10.85.149.20
    initContainerStatuses:
    - containerID: containerd://b818729e5991069e772f6449e192f39b67d7f50a5c759403eb791f70a801c96a
      image: de.icr.io/armada-master/keepalived-watcher:2383
      imageID: de.icr.io/armada-master/keepalived-watcher@sha256:37d767fa9a66ff68c9b7f4efe3612201727c03279b89c56483080ca3f67abae4
      lastState: {}
      name: keepalived-init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://b818729e5991069e772f6449e192f39b67d7f50a5c759403eb791f70a801c96a
          exitCode: 0
          finishedAt: "2023-03-15T09:27:37Z"
          reason: Completed
          startedAt: "2023-03-15T09:27:37Z"
    phase: Running
    podIP: 10.85.149.20
    podIPs:
    - ip: 10.85.149.20
    qosClass: Burstable
    startTime: "2023-03-15T09:27:31Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-15T09:27:26Z"
    generateName: ibm-keepalived-watcher-
    labels:
      app: ibm-keepalived-watcher
      controller-revision-hash: 559b4fccfb
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"277a5454-2bb2-4dc1-9fc7-760469e01677"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"keepalived-watcher"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:capabilities:
                  .: {}
                  f:add: {}
                f:runAsGroup: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/status"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"keepalived-init"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:runAsGroup: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/status"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"keepalived-status"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-15T09:27:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.85.149.8"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-15T09:27:34Z"
    name: ibm-keepalived-watcher-sxlkd
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ibm-keepalived-watcher
      uid: 277a5454-2bb2-4dc1-9fc7-760469e01677
    resourceVersion: "1765"
    uid: cad3b751-f39f-4cca-8f1e-722208f4ba0d
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - 10.85.149.8
    containers:
    - image: de.icr.io/armada-master/keepalived-watcher:2383
      imagePullPolicy: IfNotPresent
      name: keepalived-watcher
      resources:
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
        runAsGroup: 2000
        runAsUser: 2000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /status
        name: keepalived-status
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q9ktm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /usr/local/bin/hostDirPerms
      image: de.icr.io/armada-master/keepalived-watcher:2383
      imagePullPolicy: IfNotPresent
      name: keepalived-init
      resources:
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        runAsGroup: 0
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /status
        name: keepalived-status
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q9ktm
        readOnly: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ibm-keepalived-watcher
    serviceAccountName: ibm-keepalived-watcher
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /tmp/keepalived
        type: ""
      name: keepalived-status
    - name: kube-api-access-q9ktm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:33Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:34Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:34Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d7e58efb18bc2c93c1036c9690cd9d8cd25a273ca2b8edb7fca3b3e7e5101fdf
      image: de.icr.io/armada-master/keepalived-watcher:2383
      imageID: de.icr.io/armada-master/keepalived-watcher@sha256:37d767fa9a66ff68c9b7f4efe3612201727c03279b89c56483080ca3f67abae4
      lastState: {}
      name: keepalived-watcher
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-15T09:27:33Z"
    hostIP: 10.85.149.8
    initContainerStatuses:
    - containerID: containerd://049e6f7c8fe30e6f03430b1f5734d6db2061b9a71f1529de731947ad4d337898
      image: de.icr.io/armada-master/keepalived-watcher:2383
      imageID: de.icr.io/armada-master/keepalived-watcher@sha256:37d767fa9a66ff68c9b7f4efe3612201727c03279b89c56483080ca3f67abae4
      lastState: {}
      name: keepalived-init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://049e6f7c8fe30e6f03430b1f5734d6db2061b9a71f1529de731947ad4d337898
          exitCode: 0
          finishedAt: "2023-03-15T09:27:31Z"
          reason: Completed
          startedAt: "2023-03-15T09:27:31Z"
    phase: Running
    podIP: 10.85.149.8
    podIPs:
    - ip: 10.85.149.8
    qosClass: Burstable
    startTime: "2023-03-15T09:27:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: 2f57b4719eef1b449869871d68c5a972
      kubernetes.io/config.mirror: 2f57b4719eef1b449869871d68c5a972
      kubernetes.io/config.seen: "2023-03-15T09:27:18.529108436Z"
      kubernetes.io/config.source: file
      scheduler.alpha.kubernetes.io/tolerations: '[{"key":"CriticalAddonsOnly", "operator":"Exists"}]'
    creationTimestamp: "2023-03-15T09:28:39Z"
    labels:
      app: ibm-master-proxy-static
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/config.hash: {}
            f:kubernetes.io/config.mirror: {}
            f:kubernetes.io/config.seen: {}
            f:kubernetes.io/config.source: {}
            f:scheduler.alpha.kubernetes.io/tolerations: {}
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"26825d8c-b2aa-458c-9809-c6aa8009bcff"}: {}
        f:spec:
          f:containers:
            k:{"name":"ibm-master-proxy-static"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:host: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":2040,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:capabilities:
                  .: {}
                  f:add: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/usr/local/etc/haproxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"pause"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:nodeName: {}
          f:priority: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"etc-config"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kubelet
      operation: Update
      time: "2023-03-15T09:28:39Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.85.149.20"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-15T09:28:49Z"
    name: ibm-master-proxy-static-10.85.149.20
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: 10.85.149.20
      uid: 26825d8c-b2aa-458c-9809-c6aa8009bcff
    resourceVersion: "2060"
    uid: 3f5a9195-e5a1-4ba1-b95e-0956ce22f7e0
  spec:
    containers:
    - command:
      - /docker-entrypoint.sh
      - -f
      - /usr/local/etc/haproxy/haproxy-static-pod.cfg
      - -V
      - -dR
      image: de.icr.io/armada-master/haproxy:af503144d750a67126d99190f83475ba18cc5638
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: 172.20.0.1
          path: /version
          port: 2040
          scheme: HTTPS
        initialDelaySeconds: 120
        periodSeconds: 120
        successThreshold: 1
        timeoutSeconds: 60
      name: ibm-master-proxy-static
      ports:
      - containerPort: 2040
        hostPort: 2040
        name: apiserver
        protocol: TCP
      resources:
        limits:
          cpu: 300m
          memory: 512M
        requests:
          cpu: 25m
          memory: 32M
      securityContext:
        capabilities:
          add:
          - NET_BIND_SERVICE
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/local/etc/haproxy
        name: etc-config
        readOnly: true
    - image: de.icr.io/armada-master/pause:3.8
      imagePullPolicy: IfNotPresent
      name: pause
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 1001
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/haproxy
        type: ""
      name: etc-config
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://fc737053e8f7f14d49e1cd272bc7e94965abb9610bb55d20f14fe6921e1f6581
      image: de.icr.io/armada-master/haproxy:af503144d750a67126d99190f83475ba18cc5638
      imageID: de.icr.io/armada-master/haproxy@sha256:1f0b0ea9071d3749f95baa961fde5535c6c5e28e2bb45daa43417553c7bea40b
      lastState: {}
      name: ibm-master-proxy-static
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-15T09:27:20Z"
    - containerID: containerd://6e700eaa2c37cca34656af652a63b96df1266dedf5749c74a99b8fea01028f9f
      image: de.icr.io/armada-master/pause:3.8
      imageID: de.icr.io/armada-master/pause@sha256:99564ebdba53b461ab2728f752e542b1907d71aafe62fd9916f51cc5a6441d79
      lastState: {}
      name: pause
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-15T09:27:20Z"
    hostIP: 10.85.149.20
    phase: Running
    podIP: 10.85.149.20
    podIPs:
    - ip: 10.85.149.20
    qosClass: Burstable
    startTime: "2023-03-15T09:27:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: ded79d56875bb62e9b7d9d65a1ef70ab
      kubernetes.io/config.mirror: ded79d56875bb62e9b7d9d65a1ef70ab
      kubernetes.io/config.seen: "2023-03-15T09:27:23.643364188Z"
      kubernetes.io/config.source: file
      scheduler.alpha.kubernetes.io/tolerations: '[{"key":"CriticalAddonsOnly", "operator":"Exists"}]'
    creationTimestamp: "2023-03-15T09:27:27Z"
    labels:
      app: ibm-master-proxy-static
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/config.hash: {}
            f:kubernetes.io/config.mirror: {}
            f:kubernetes.io/config.seen: {}
            f:kubernetes.io/config.source: {}
            f:scheduler.alpha.kubernetes.io/tolerations: {}
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"7325b9ff-bd42-48cb-91fa-73274bc5be43"}: {}
        f:spec:
          f:containers:
            k:{"name":"ibm-master-proxy-static"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:host: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":2040,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:capabilities:
                  .: {}
                  f:add: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/usr/local/etc/haproxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"pause"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:nodeName: {}
          f:priority: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"etc-config"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kubelet
      operation: Update
      time: "2023-03-15T09:27:27Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.85.149.8"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-15T09:27:34Z"
    name: ibm-master-proxy-static-10.85.149.8
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: 10.85.149.8
      uid: 7325b9ff-bd42-48cb-91fa-73274bc5be43
    resourceVersion: "1762"
    uid: 7dc02f6b-3426-4c82-8bc9-3db56e8cab53
  spec:
    containers:
    - command:
      - /docker-entrypoint.sh
      - -f
      - /usr/local/etc/haproxy/haproxy-static-pod.cfg
      - -V
      - -dR
      image: de.icr.io/armada-master/haproxy:af503144d750a67126d99190f83475ba18cc5638
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: 172.20.0.1
          path: /version
          port: 2040
          scheme: HTTPS
        initialDelaySeconds: 120
        periodSeconds: 120
        successThreshold: 1
        timeoutSeconds: 60
      name: ibm-master-proxy-static
      ports:
      - containerPort: 2040
        hostPort: 2040
        name: apiserver
        protocol: TCP
      resources:
        limits:
          cpu: 300m
          memory: 512M
        requests:
          cpu: 25m
          memory: 32M
      securityContext:
        capabilities:
          add:
          - NET_BIND_SERVICE
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/local/etc/haproxy
        name: etc-config
        readOnly: true
    - image: de.icr.io/armada-master/pause:3.8
      imagePullPolicy: IfNotPresent
      name: pause
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 1001
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/haproxy
        type: ""
      name: etc-config
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://db2dddb1255cd1537a6d6c6553ab4f1dfcd3b1ea1782a557d8367bf2ef235449
      image: de.icr.io/armada-master/haproxy:af503144d750a67126d99190f83475ba18cc5638
      imageID: de.icr.io/armada-master/haproxy@sha256:1f0b0ea9071d3749f95baa961fde5535c6c5e28e2bb45daa43417553c7bea40b
      lastState: {}
      name: ibm-master-proxy-static
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-15T09:27:25Z"
    - containerID: containerd://bd38dc41c9c7f5308fbdc0c4d3bbc4fc18e660883913d4e698b5a6028980f1fc
      image: de.icr.io/armada-master/pause:3.8
      imageID: de.icr.io/armada-master/pause@sha256:99564ebdba53b461ab2728f752e542b1907d71aafe62fd9916f51cc5a6441d79
      lastState: {}
      name: pause
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-15T09:27:25Z"
    hostIP: 10.85.149.8
    phase: Running
    podIP: 10.85.149.8
    podIPs:
    - ip: 10.85.149.8
    qosClass: Burstable
    startTime: "2023-03-15T09:27:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: d9c2db6a98e3268a059e6a1816f682b0f15cad09624f10d6515be078e794b4b1
      cni.projectcalico.org/podIP: 172.30.140.89/32
      cni.projectcalico.org/podIPs: 172.30.140.89/32
    creationTimestamp: "2023-03-26T18:20:51Z"
    generateName: ibm-storage-watcher-7fdf48b55d-
    labels:
      app: ibm-storage-watcher
      pod-template-hash: 7fdf48b55d
      tier: frontend
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
            f:tier: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"bee8b0fd-1494-44da-a8e7-d49e96f38320"}: {}
        f:spec:
          f:containers:
            k:{"name":"ibm-storage-watcher-container"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"CLUSTER_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CM_SUBNET"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CRN_CONFIGMAP_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"STORAGE_CONFIG_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WATCHER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:privileged: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/ibm_crn_info"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/storage_ibmc"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"crn-info-ibmc"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"storage-plugin-secret"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-26T18:20:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-26T18:20:56Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.89"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:11Z"
    name: ibm-storage-watcher-7fdf48b55d-kn7j9
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ibm-storage-watcher-7fdf48b55d
      uid: bee8b0fd-1494-44da-a8e7-d49e96f38320
    resourceVersion: "1449382"
    uid: fcc511cb-723c-4566-abaf-63c35029c76a
  spec:
    containers:
    - args:
      - -provisioner=ibm.io/ibmc-file
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CLUSTER_ID
        value: cg8om62f01beu8rudp30
      - name: CM_SUBNET
        value: subnet-config
      - name: WATCHER
        value: "true"
      - name: STORAGE_CONFIG_PATH
        value: /etc/storage_ibmc
      - name: CRN_CONFIGMAP_PATH
        value: /etc/ibm_crn_info
      image: de.icr.io/armada-master/storage-file-plugin:427
      imagePullPolicy: IfNotPresent
      name: ibm-storage-watcher-container
      resources:
        limits:
          cpu: 200m
          memory: 200Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        privileged: false
        runAsNonRoot: true
        runAsUser: 2000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/storage_ibmc
        name: storage-plugin-secret
      - mountPath: /etc/ibm_crn_info
        name: crn-info-ibmc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tmzzv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ibm-file-plugin
    serviceAccountName: ibm-file-plugin
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: storage-plugin-secret
      secret:
        defaultMode: 420
        secretName: storage-secret-store
    - configMap:
        defaultMode: 420
        name: crn-info-ibmc
      name: crn-info-ibmc
    - name: kube-api-access-tmzzv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:21:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:21:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://71f7e974554975977c95c6abcd99605d38978410a2a5bd93413ee5c65270b4b7
      image: de.icr.io/armada-master/storage-file-plugin:427
      imageID: de.icr.io/armada-master/storage-file-plugin@sha256:a3de6a27b686c1ef062fb0d1ed3122044f22e9b237340d0e8eb3358a03c49c0e
      lastState: {}
      name: ibm-storage-watcher-container
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-26T18:21:10Z"
    hostIP: 10.85.149.20
    phase: Running
    podIP: 172.30.140.89
    podIPs:
    - ip: 172.30.140.89
    qosClass: Burstable
    startTime: "2023-03-26T18:20:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-15T09:27:39Z"
    generateName: ibmcloud-block-storage-driver-
    labels:
      app: ibmcloud-block-storage-driver
      controller-revision-hash: 56c7cd997c
      pod-template-generation: "1"
      release: ibmc-block
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
            f:release: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"fb11f04f-5c99-4914-a1b3-b6a61ee9a385"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"ibmcloud-block-storage-driver-container"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"HOST_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"IBMC_FEATURE_GATES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:privileged: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/usr"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/var/log"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/systemd"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"host-etc"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-lib"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-usr"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-log"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sysd-run"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-15T09:27:39Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.85.149.20"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-15T09:28:08Z"
    name: ibmcloud-block-storage-driver-2cnch
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ibmcloud-block-storage-driver
      uid: fb11f04f-5c99-4914-a1b3-b6a61ee9a385
    resourceVersion: "1984"
    uid: e2e4ab03-dccc-401e-b919-367567aeecdf
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - 10.85.149.20
    containers:
    - env:
      - name: IBMC_FEATURE_GATES
        value: KeyManagementBYOK=true
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      image: de.icr.io/armada-master/ibmcloud-block-storage-driver:v2.3.7
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - ls
          - /host/usr/libexec/kubernetes/kubelet-plugins/volume/exec/ibm~ibmc-block/ibmc-block
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 5
      name: ibmcloud-block-storage-driver-container
      resources:
        limits:
          cpu: 300m
          memory: 300Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        privileged: false
        runAsNonRoot: false
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/usr
        name: host-usr
      - mountPath: /run/systemd
        name: sysd-run
      - mountPath: /host/etc
        name: host-etc
      - mountPath: /host/lib
        name: host-lib
      - mountPath: /host/var/log
        name: host-var-log
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m822n
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ibmcloud-block-storage-plugin
    serviceAccountName: ibmcloud-block-storage-plugin
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /usr/
        type: ""
      name: host-usr
    - hostPath:
        path: /run/systemd
        type: ""
      name: sysd-run
    - hostPath:
        path: /etc/
        type: ""
      name: host-etc
    - hostPath:
        path: /lib/
        type: ""
      name: host-lib
    - hostPath:
        path: /var/log
        type: ""
      name: host-var-log
    - name: kube-api-access-m822n
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:28:08Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:28:08Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://065462617630282e75b6fcc95a56fa1d8cf126251de63ce6855e6c5b67d5dd94
      image: de.icr.io/armada-master/ibmcloud-block-storage-driver:v2.3.7
      imageID: de.icr.io/armada-master/ibmcloud-block-storage-driver@sha256:e63d8da917b80f09162a3540da471dff020fc077099ed0a7f00a1dcd3a51afd2
      lastState: {}
      name: ibmcloud-block-storage-driver-container
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-15T09:28:08Z"
    hostIP: 10.85.149.20
    phase: Running
    podIP: 10.85.149.20
    podIPs:
    - ip: 10.85.149.20
    qosClass: Burstable
    startTime: "2023-03-15T09:27:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-03-15T09:27:38Z"
    generateName: ibmcloud-block-storage-driver-
    labels:
      app: ibmcloud-block-storage-driver
      controller-revision-hash: 56c7cd997c
      pod-template-generation: "1"
      release: ibmc-block
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
            f:release: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"fb11f04f-5c99-4914-a1b3-b6a61ee9a385"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"ibmcloud-block-storage-driver-container"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"HOST_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"IBMC_FEATURE_GATES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:privileged: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/usr"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/var/log"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/systemd"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"host-etc"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-lib"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-usr"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-log"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sysd-run"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-15T09:27:38Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.85.149.8"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-15T09:28:07Z"
    name: ibmcloud-block-storage-driver-bz48n
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ibmcloud-block-storage-driver
      uid: fb11f04f-5c99-4914-a1b3-b6a61ee9a385
    resourceVersion: "1971"
    uid: 03b375ba-26d0-40df-a302-9ba27e5dcbeb
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - 10.85.149.8
    containers:
    - env:
      - name: IBMC_FEATURE_GATES
        value: KeyManagementBYOK=true
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      image: de.icr.io/armada-master/ibmcloud-block-storage-driver:v2.3.7
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - ls
          - /host/usr/libexec/kubernetes/kubelet-plugins/volume/exec/ibm~ibmc-block/ibmc-block
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 5
      name: ibmcloud-block-storage-driver-container
      resources:
        limits:
          cpu: 300m
          memory: 300Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        privileged: false
        runAsNonRoot: false
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/usr
        name: host-usr
      - mountPath: /run/systemd
        name: sysd-run
      - mountPath: /host/etc
        name: host-etc
      - mountPath: /host/lib
        name: host-lib
      - mountPath: /host/var/log
        name: host-var-log
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7cnm4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ibmcloud-block-storage-plugin
    serviceAccountName: ibmcloud-block-storage-plugin
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /usr/
        type: ""
      name: host-usr
    - hostPath:
        path: /run/systemd
        type: ""
      name: sysd-run
    - hostPath:
        path: /etc/
        type: ""
      name: host-etc
    - hostPath:
        path: /lib/
        type: ""
      name: host-lib
    - hostPath:
        path: /var/log
        type: ""
      name: host-var-log
    - name: kube-api-access-7cnm4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:28:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:28:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://155a19f8863966347c6d87945aa32073aa75b79e437b70e3d9aee7bab7a080bd
      image: de.icr.io/armada-master/ibmcloud-block-storage-driver:v2.3.7
      imageID: de.icr.io/armada-master/ibmcloud-block-storage-driver@sha256:e63d8da917b80f09162a3540da471dff020fc077099ed0a7f00a1dcd3a51afd2
      lastState: {}
      name: ibmcloud-block-storage-driver-container
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-15T09:28:07Z"
    hostIP: 10.85.149.8
    phase: Running
    podIP: 10.85.149.8
    podIPs:
    - ip: 10.85.149.8
    qosClass: Burstable
    startTime: "2023-03-15T09:27:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 6e56c99d2bbdd7e051baf57c7eb55a49f0b19779b11092bdc4c1377aa65e27a9
      cni.projectcalico.org/podIP: 172.30.140.85/32
      cni.projectcalico.org/podIPs: 172.30.140.85/32
    creationTimestamp: "2023-03-26T18:20:52Z"
    generateName: ibmcloud-block-storage-plugin-74dc98bc8-
    labels:
      app: ibmcloud-block-storage-plugin
      pod-template-hash: 74dc98bc8
      release: ibmc-block
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
            f:release: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"3a196418-37de-4f2e-87a7-76f2829031c0"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"ibmcloud-block-storage-plugin-container"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"DEBUG_TRACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"IBMC_FEATURE_GATES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"PLUGIN_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"STORAGE_CONFIG_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:privileged: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/storage_ibmc"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"customer-auth"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-26T18:20:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-26T18:20:55Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.85"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:08Z"
    name: ibmcloud-block-storage-plugin-74dc98bc8-n4qr2
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ibmcloud-block-storage-plugin-74dc98bc8
      uid: 3a196418-37de-4f2e-87a7-76f2829031c0
    resourceVersion: "1449361"
    uid: 42a36dbb-0207-4a35-86b3-f73a11cd80b8
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: ibm-cloud.kubernetes.io/iaas-provider
              operator: In
              values:
              - softlayer
            - key: kubernetes.io/arch
              operator: In
              values:
              - amd64
    containers:
    - args:
      - --provisioner=ibm.io/ibmc-block
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: PLUGIN_IMAGE
        value: de.icr.io/armada-master/ibmcloud-block-storage-plugin:v2.3.7
      - name: DEBUG_TRACE
        value: "false"
      - name: STORAGE_CONFIG_PATH
        value: /etc/storage_ibmc
      - name: IBMC_FEATURE_GATES
        value: KeyManagementBYOK=true
      image: de.icr.io/armada-master/ibmcloud-block-storage-plugin:v2.3.7
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - ls
          - /etc/storage_ibmc
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 5
      name: ibmcloud-block-storage-plugin-container
      resources:
        limits:
          cpu: 300m
          memory: 300Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        privileged: false
        runAsNonRoot: true
        runAsUser: 2000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/storage_ibmc
        name: customer-auth
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-522xk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ibmcloud-block-storage-plugin
    serviceAccountName: ibmcloud-block-storage-plugin
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: customer-auth
      secret:
        defaultMode: 420
        secretName: storage-secret-store
    - name: kube-api-access-522xk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:21:08Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:21:08Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://12f63d7576af1d860cbb3466a15630111ac360a16aaf92af2439c825be9ec1a4
      image: de.icr.io/armada-master/ibmcloud-block-storage-plugin:v2.3.7
      imageID: de.icr.io/armada-master/ibmcloud-block-storage-plugin@sha256:45c82e0df500af0da3aed708c7317b4319c1d38f2677b9e936a0151bddd44387
      lastState: {}
      name: ibmcloud-block-storage-plugin-container
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-26T18:21:08Z"
    hostIP: 10.85.149.20
    phase: Running
    podIP: 172.30.140.85
    podIPs:
    - ip: 172.30.140.85
    qosClass: Burstable
    startTime: "2023-03-26T18:20:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 999766df295e81692152b01c1e2afdfda5119cebd48c532310102d62ef91ac7a
      cni.projectcalico.org/podIP: 172.30.140.81/32
      cni.projectcalico.org/podIPs: 172.30.140.81/32
      razee.io/build-url: https://travis.ibm.com/alchemy-containers/armada-ingress-microservice/builds/87269293
      razee.io/source-url: https://github.ibm.com/alchemy-containers/armada-ingress-microservice/commit/6c850dc1996a468700d2bf02ec4a933a52d54130
    creationTimestamp: "2023-03-24T15:07:04Z"
    generateName: ingress-cluster-healthcheck-7997bfb4c5-
    labels:
      app: ingress-cluster-healthcheck
      appVersion: 1.0.0_402
      pod-template-hash: 7997bfb4c5
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:razee.io/build-url: {}
            f:razee.io/source-url: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:appVersion: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"042008cf-0104-4d9c-bd09-c61455a09d98"}: {}
        f:spec:
          f:containers:
            k:{"name":"ingress-cluster-healthcheck"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:privileged: {}
                f:readOnlyRootFilesystem: {}
                f:runAsGroup: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsGroup: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-24T15:07:04Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-24T15:07:05Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.81"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-24T15:07:07Z"
    name: ingress-cluster-healthcheck-7997bfb4c5-brt4h
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ingress-cluster-healthcheck-7997bfb4c5
      uid: 042008cf-0104-4d9c-bd09-c61455a09d98
    resourceVersion: "1084364"
    uid: e64d3d32-c71c-410f-b331-0bf0b8d472a2
  spec:
    containers:
    - image: us.icr.io/armada-master/armada-ingress-cluster-healthcheck:1.0.0_402
      imagePullPolicy: Always
      name: ingress-cluster-healthcheck
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 2000
        runAsUser: 2000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cprlw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsGroup: 2000
      runAsUser: 2000
    serviceAccount: ibm-k8s-ingress
    serviceAccountName: ibm-k8s-ingress
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: kube-api-access-cprlw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-24T15:07:04Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-24T15:07:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-24T15:07:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-24T15:07:04Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6aa3eaa2685fc783ba8927241cae3b22c4346f8109e1257018f51ae40bbca573
      image: us.icr.io/armada-master/armada-ingress-cluster-healthcheck:1.0.0_402
      imageID: us.icr.io/armada-master/armada-ingress-cluster-healthcheck@sha256:8de495a0307ab5dc6f4892eb0bcb01cd0cb7c326db3ad4758f0d30472e7ee245
      lastState: {}
      name: ingress-cluster-healthcheck
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-24T15:07:06Z"
    hostIP: 10.85.149.20
    phase: Running
    podIP: 172.30.140.81
    podIPs:
    - ip: 172.30.140.81
    qosClass: Burstable
    startTime: "2023-03-24T15:07:04Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 1febda7607927732675ebf233a395782b0dce3a49929aacc8e44ee4cf16dc555
      cni.projectcalico.org/podIP: 172.30.188.129/32
      cni.projectcalico.org/podIPs: 172.30.188.129/32
    creationTimestamp: "2023-03-15T09:27:26Z"
    generateName: konnectivity-agent-
    labels:
      controller-revision-hash: 5bb87c5d6
      dashboard-metrics-scraper-policy: allow
      k8s-app: konnectivity-agent
      kubernetes-dashboard-policy: allow
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:controller-revision-hash: {}
            f:dashboard-metrics-scraper-policy: {}
            f:k8s-app: {}
            f:kubernetes-dashboard-policy: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ebf4d21b-2318-4f18-865a-4fa9e1fcb543"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"konnectivity-agent"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"HOST_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:runAsGroup: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/secrets/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/konn-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"konnectivity-agent-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"kube-root-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-15T09:27:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-15T09:28:14Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.129"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-15T09:28:19Z"
    name: konnectivity-agent-g7mwr
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: konnectivity-agent
      uid: ebf4d21b-2318-4f18-865a-4fa9e1fcb543
    resourceVersion: "2020"
    uid: 191c2627-0e34-40f6-94bb-461476e3e719
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - 10.85.149.8
    automountServiceAccountToken: false
    containers:
    - args:
      - --ca-cert=/var/run/secrets/certs/ca.crt
      - --proxy-server-host=c111.eu-de.containers.cloud.ibm.com
      - --proxy-server-port=32519
      - --health-server-port=8093
      - --agent-cert=/var/run/secrets/konn-certs/konnectivity-agent.pem
      - --agent-key=/var/run/secrets/konn-certs/konnectivity-agent-key.pem
      - --agent-identifiers=ipv4=$(HOST_IP)
      command:
      - /bin/proxy-agent
      env:
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      image: de.icr.io/armada-master/konnectivity-community:v0.1.1_569_iks-amd64
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8093
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 30
      name: konnectivity-agent
      resources:
        limits:
          memory: 500Mi
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        runAsGroup: 0
        runAsUser: 2000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/certs
        name: kube-root-ca
      - mountPath: /var/run/secrets/konn-certs
        name: konnectivity-agent-certs
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: konnectivity-agent-certs
      secret:
        defaultMode: 416
        secretName: konnectivity-agent-certs
    - configMap:
        defaultMode: 420
        name: kube-root-ca.crt
      name: kube-root-ca
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:26Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:28:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:28:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b26ccd434f7cbb9237ce6d489cb3843336aeff6013f5c7113c72f0333ed38d45
      image: de.icr.io/armada-master/konnectivity-community:v0.1.1_569_iks-amd64
      imageID: de.icr.io/armada-master/konnectivity-community@sha256:a2556035deb1889bf09fd1aa424919f508371cb6a2e478df0b547a2851b15a89
      lastState: {}
      name: konnectivity-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-15T09:28:18Z"
    hostIP: 10.85.149.8
    phase: Running
    podIP: 172.30.188.129
    podIPs:
    - ip: 172.30.188.129
    qosClass: Burstable
    startTime: "2023-03-15T09:27:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 6bab96d7f1a115cdf3ba903dfc379cc6452b87ff1d904d806df1d066318dec4c
      cni.projectcalico.org/podIP: 172.30.140.65/32
      cni.projectcalico.org/podIPs: 172.30.140.65/32
    creationTimestamp: "2023-03-15T09:27:31Z"
    generateName: konnectivity-agent-
    labels:
      controller-revision-hash: 5bb87c5d6
      dashboard-metrics-scraper-policy: allow
      k8s-app: konnectivity-agent
      kubernetes-dashboard-policy: allow
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:controller-revision-hash: {}
            f:dashboard-metrics-scraper-policy: {}
            f:k8s-app: {}
            f:kubernetes-dashboard-policy: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ebf4d21b-2318-4f18-865a-4fa9e1fcb543"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"konnectivity-agent"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"HOST_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:runAsGroup: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/secrets/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/konn-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"konnectivity-agent-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"kube-root-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-15T09:27:31Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-15T09:28:20Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.65"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-15T09:28:24Z"
    name: konnectivity-agent-q8b24
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: konnectivity-agent
      uid: ebf4d21b-2318-4f18-865a-4fa9e1fcb543
    resourceVersion: "2036"
    uid: 09549978-3101-4dd7-8d40-6c3e7c429c9e
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - 10.85.149.20
    automountServiceAccountToken: false
    containers:
    - args:
      - --ca-cert=/var/run/secrets/certs/ca.crt
      - --proxy-server-host=c111.eu-de.containers.cloud.ibm.com
      - --proxy-server-port=32519
      - --health-server-port=8093
      - --agent-cert=/var/run/secrets/konn-certs/konnectivity-agent.pem
      - --agent-key=/var/run/secrets/konn-certs/konnectivity-agent-key.pem
      - --agent-identifiers=ipv4=$(HOST_IP)
      command:
      - /bin/proxy-agent
      env:
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      image: de.icr.io/armada-master/konnectivity-community:v0.1.1_569_iks-amd64
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8093
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 30
      name: konnectivity-agent
      resources:
        limits:
          memory: 500Mi
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        runAsGroup: 0
        runAsUser: 2000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/certs
        name: kube-root-ca
      - mountPath: /var/run/secrets/konn-certs
        name: konnectivity-agent-certs
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: konnectivity-agent-certs
      secret:
        defaultMode: 416
        secretName: konnectivity-agent-certs
    - configMap:
        defaultMode: 420
        name: kube-root-ca.crt
      name: kube-root-ca
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:31Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:28:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:28:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-15T09:27:31Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d63b004e8489f1b94c79b23a88c286c01501dd2675efcdd9ac69126ff3e7aebe
      image: de.icr.io/armada-master/konnectivity-community:v0.1.1_569_iks-amd64
      imageID: de.icr.io/armada-master/konnectivity-community@sha256:a2556035deb1889bf09fd1aa424919f508371cb6a2e478df0b547a2851b15a89
      lastState: {}
      name: konnectivity-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-15T09:28:24Z"
    hostIP: 10.85.149.20
    phase: Running
    podIP: 172.30.140.65
    podIPs:
    - ip: 172.30.140.65
    qosClass: Burstable
    startTime: "2023-03-15T09:27:31Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 829f99db49f52d98d2c51f0f0ae82d2493bf045735fdcc97b08c3f05e1da7685
      cni.projectcalico.org/podIP: 172.30.188.188/32
      cni.projectcalico.org/podIPs: 172.30.188.188/32
    creationTimestamp: "2023-03-26T18:20:52Z"
    generateName: kubernetes-dashboard-7bd7565fc7-
    labels:
      k8s-app: kubernetes-dashboard
      pod-template-hash: 7bd7565fc7
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:k8s-app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d4e78c3c-78e4-4525-ba2e-ca5eb260abc0"}: {}
        f:spec:
          f:containers:
            k:{"name":"kubernetes-dashboard"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:readOnlyRootFilesystem: {}
                f:runAsGroup: {}
                f:runAsUser: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kubernetes-dashboard-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"tmp-volume"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-26T18:20:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-26T18:20:57Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.188"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:42Z"
    name: kubernetes-dashboard-7bd7565fc7-9zk9h
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kubernetes-dashboard-7bd7565fc7
      uid: d4e78c3c-78e4-4525-ba2e-ca5eb260abc0
    resourceVersion: "1449529"
    uid: 3a09c7df-bd7d-4f52-9653-8e43823e9eb0
  spec:
    containers:
    - args:
      - --auto-generate-certificates
      - --namespace=kube-system
      image: de.icr.io/armada-master/kubernetesui-dashboard:v2.7.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: kubernetes-dashboard
      ports:
      - containerPort: 8443
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      resources:
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 2001
        runAsUser: 1001
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /certs
        name: kubernetes-dashboard-certs
      - mountPath: /tmp
        name: tmp-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dpztp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kubernetes-dashboard
    serviceAccountName: kubernetes-dashboard
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: kubernetes-dashboard-certs
      secret:
        defaultMode: 420
        secretName: kubernetes-dashboard-certs
    - emptyDir: {}
      name: tmp-volume
    - name: kube-api-access-dpztp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:21:42Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:21:42Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://66a28ac6281e2efb76a0919c6938a3fee4844ba41aabce2b0654b7a33a857d11
      image: de.icr.io/armada-master/kubernetesui-dashboard:v2.7.0
      imageID: de.icr.io/armada-master/kubernetesui-dashboard@sha256:a342803a2e5ecd1bc63c12f31dc98c3d9ea62aaff2e88bc66d5d7639a0f674ef
      lastState: {}
      name: kubernetes-dashboard
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-26T18:21:30Z"
    hostIP: 10.85.149.8
    phase: Running
    podIP: 172.30.188.188
    podIPs:
    - ip: 172.30.188.188
    qosClass: Burstable
    startTime: "2023-03-26T18:20:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 657d0fc3cdb93ee42a6d54ca82be5dff6766083a013a66e7a5e7d0d41f9951e2
      cni.projectcalico.org/podIP: 172.30.188.138/32
      cni.projectcalico.org/podIPs: 172.30.188.138/32
    creationTimestamp: "2023-03-26T18:20:51Z"
    generateName: metrics-server-577c74c6d5-
    labels:
      cert-checksum: a500499f6893d6fdb488b3664775ddcc09a4d728
      k8s-app: metrics-server
      pod-template-hash: 577c74c6d5
      version: v0.6.0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:cert-checksum: {}
            f:k8s-app: {}
            f:pod-template-hash: {}
            f:version: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d082e870-4184-4c07-a8c7-97a264e663f5"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"config-watcher"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"metrics-server"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":4443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics-server-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"metrics-server-nanny"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"MY_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"MY_POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:seccompProfile:
              .: {}
              f:type: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:shareProcessNamespace: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-server-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"metrics-server-config-volume"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"tmp-dir"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-26T18:20:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-26T18:20:56Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.138"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:52Z"
    name: metrics-server-577c74c6d5-bd7cl
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-577c74c6d5
      uid: d082e870-4184-4c07-a8c7-97a264e663f5
    resourceVersion: "1449561"
    uid: 32ce89d9-59a8-4ae5-a08e-af1df2f1f2a3
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - metrics-server
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - metrics-server
            topologyKey: topology.kubernetes.io/zone
          weight: 100
    containers:
    - command:
      - /metrics-server
      - --metric-resolution=45s
      - --secure-port=4443
      - --tls-cert-file=/etc/metrics-server-certs/tls.crt
      - --tls-private-key-file=/etc/metrics-server-certs/tls.key
      image: de.icr.io/armada-master/metrics-server:v0.6.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 10
        httpGet:
          path: /livez
          port: https
          scheme: HTTPS
        initialDelaySeconds: 60
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 15
      name: metrics-server
      ports:
      - containerPort: 4443
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /readyz
          port: https
          scheme: HTTPS
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 15
      resources:
        limits:
          cpu: 116m
          memory: 136Mi
        requests:
          cpu: 116m
          memory: 136Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/metrics-server-certs
        name: metrics-server-certs
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wz78z
        readOnly: true
    - command:
      - /pod_nanny
      - --config-dir=/etc/config
      - --cpu=100m
      - --extra-cpu=1m
      - --memory=40Mi
      - --extra-memory=6Mi
      - --threshold=5
      - --deployment=metrics-server
      - --container=metrics-server
      - --poll-period=30000
      - --estimator=exponential
      - --use-metrics=true
      env:
      - name: MY_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: MY_POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: de.icr.io/armada-master/addon-resizer:1.8.15
      imagePullPolicy: IfNotPresent
      name: metrics-server-nanny
      resources:
        limits:
          cpu: 100m
          memory: 300Mi
        requests:
          cpu: 5m
          memory: 50Mi
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: metrics-server-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wz78z
        readOnly: true
    - command:
      - bash
      - -c
      - |
        old_sum=$(md5sum /etc/config/NannyConfiguration)
        while true; do
          sleep 60
          new_sum=$(md5sum /etc/config/NannyConfiguration)
          if [[ "$new_sum" != "$old_sum" ]]; then
            kill $(grep -l ^/pod_nanny /proc/*/cmdline | awk -F/ '{print $3}')
            exit
          fi
        done
      image: de.icr.io/armada-master/ubi-dns-tools:v1.0.2
      imagePullPolicy: IfNotPresent
      name: config-watcher
      resources:
        limits:
          cpu: 50m
          memory: 100Mi
        requests:
          cpu: 5m
          memory: 5Mi
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: metrics-server-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wz78z
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    shareProcessNamespace: true
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - configMap:
        defaultMode: 420
        name: metrics-server-config
      name: metrics-server-config-volume
    - name: metrics-server-certs
      secret:
        defaultMode: 420
        secretName: metrics-server-certs
    - emptyDir: {}
      name: tmp-dir
    - name: kube-api-access-wz78z
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:21:52Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:21:52Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d896ae6e21dbec2e0cf5ed33f573bf8ff636828638d05179a49048153efc0f6f
      image: de.icr.io/armada-master/ubi-dns-tools:v1.0.2
      imageID: de.icr.io/armada-master/ubi-dns-tools@sha256:30023b496b697973db3e1a22d0bcf1d0a3c91af5135d1ac2389e2ec8da98a137
      lastState: {}
      name: config-watcher
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-26T18:21:37Z"
    - containerID: containerd://1165028e977e4689df2bdb30e431df8f556efbcd0331a2ccb8c50d06fc58d34e
      image: de.icr.io/armada-master/metrics-server:v0.6.0
      imageID: de.icr.io/armada-master/metrics-server@sha256:bd496ceea02cc69b711a3547ab8d8e245f17f3c5a1d41433e165d4aff6f44ffb
      lastState: {}
      name: metrics-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-26T18:21:12Z"
    - containerID: containerd://2fb5d0cdd3c89493fcff11fbd5275be5819a4c174213e79d7cbbd8a7b57dcf16
      image: de.icr.io/armada-master/addon-resizer:1.8.15
      imageID: de.icr.io/armada-master/addon-resizer@sha256:cee47ee4f7898307b3e2aa0be06780f029fbbe32d088f9add19bda22c4e3f4d0
      lastState: {}
      name: metrics-server-nanny
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-26T18:21:18Z"
    hostIP: 10.85.149.8
    phase: Running
    podIP: 172.30.188.138
    podIPs:
    - ip: 172.30.188.138
    qosClass: Burstable
    startTime: "2023-03-26T18:20:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 1e5a9e199690e3c5ebaad776ff05f6446e2c062bf79662cb17bcfdbe2b5b6f8b
      cni.projectcalico.org/podIP: 172.30.140.80/32
      cni.projectcalico.org/podIPs: 172.30.140.80/32
    creationTimestamp: "2023-03-26T18:20:50Z"
    generateName: metrics-server-577c74c6d5-
    labels:
      cert-checksum: a500499f6893d6fdb488b3664775ddcc09a4d728
      k8s-app: metrics-server
      pod-template-hash: 577c74c6d5
      version: v0.6.0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:cert-checksum: {}
            f:k8s-app: {}
            f:pod-template-hash: {}
            f:version: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d082e870-4184-4c07-a8c7-97a264e663f5"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"config-watcher"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"metrics-server"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":4443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics-server-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"metrics-server-nanny"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"MY_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"MY_POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:seccompProfile:
              .: {}
              f:type: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:shareProcessNamespace: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-server-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"metrics-server-config-volume"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"tmp-dir"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-26T18:20:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-26T18:20:54Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.80"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:51Z"
    name: metrics-server-577c74c6d5-kwqwh
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-577c74c6d5
      uid: d082e870-4184-4c07-a8c7-97a264e663f5
    resourceVersion: "1449556"
    uid: c9532e21-5b04-47ae-90c8-ab73cfd51dcf
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - metrics-server
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - metrics-server
            topologyKey: topology.kubernetes.io/zone
          weight: 100
    containers:
    - command:
      - /metrics-server
      - --metric-resolution=45s
      - --secure-port=4443
      - --tls-cert-file=/etc/metrics-server-certs/tls.crt
      - --tls-private-key-file=/etc/metrics-server-certs/tls.key
      image: de.icr.io/armada-master/metrics-server:v0.6.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 10
        httpGet:
          path: /livez
          port: https
          scheme: HTTPS
        initialDelaySeconds: 60
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 15
      name: metrics-server
      ports:
      - containerPort: 4443
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /readyz
          port: https
          scheme: HTTPS
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 15
      resources:
        limits:
          cpu: 116m
          memory: 136Mi
        requests:
          cpu: 116m
          memory: 136Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/metrics-server-certs
        name: metrics-server-certs
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lfgpg
        readOnly: true
    - command:
      - /pod_nanny
      - --config-dir=/etc/config
      - --cpu=100m
      - --extra-cpu=1m
      - --memory=40Mi
      - --extra-memory=6Mi
      - --threshold=5
      - --deployment=metrics-server
      - --container=metrics-server
      - --poll-period=30000
      - --estimator=exponential
      - --use-metrics=true
      env:
      - name: MY_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: MY_POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: de.icr.io/armada-master/addon-resizer:1.8.15
      imagePullPolicy: IfNotPresent
      name: metrics-server-nanny
      resources:
        limits:
          cpu: 100m
          memory: 300Mi
        requests:
          cpu: 5m
          memory: 50Mi
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: metrics-server-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lfgpg
        readOnly: true
    - command:
      - bash
      - -c
      - |
        old_sum=$(md5sum /etc/config/NannyConfiguration)
        while true; do
          sleep 60
          new_sum=$(md5sum /etc/config/NannyConfiguration)
          if [[ "$new_sum" != "$old_sum" ]]; then
            kill $(grep -l ^/pod_nanny /proc/*/cmdline | awk -F/ '{print $3}')
            exit
          fi
        done
      image: de.icr.io/armada-master/ubi-dns-tools:v1.0.2
      imagePullPolicy: IfNotPresent
      name: config-watcher
      resources:
        limits:
          cpu: 50m
          memory: 100Mi
        requests:
          cpu: 5m
          memory: 5Mi
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: metrics-server-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lfgpg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    shareProcessNamespace: true
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - configMap:
        defaultMode: 420
        name: metrics-server-config
      name: metrics-server-config-volume
    - name: metrics-server-certs
      secret:
        defaultMode: 420
        secretName: metrics-server-certs
    - emptyDir: {}
      name: tmp-dir
    - name: kube-api-access-lfgpg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:21:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:21:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://eed9daab78d9f499b23aabbd9298e15c0042c2b133742b357950ddced6243616
      image: de.icr.io/armada-master/ubi-dns-tools:v1.0.2
      imageID: de.icr.io/armada-master/ubi-dns-tools@sha256:30023b496b697973db3e1a22d0bcf1d0a3c91af5135d1ac2389e2ec8da98a137
      lastState: {}
      name: config-watcher
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-26T18:21:21Z"
    - containerID: containerd://aeee6d8c35aa260a8d7c586195b4746ab00fc59f524dbf7ceeb9811ecd3bf444
      image: de.icr.io/armada-master/metrics-server:v0.6.0
      imageID: de.icr.io/armada-master/metrics-server@sha256:bd496ceea02cc69b711a3547ab8d8e245f17f3c5a1d41433e165d4aff6f44ffb
      lastState: {}
      name: metrics-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-26T18:21:08Z"
    - containerID: containerd://f90c4b160bbd567ff3a544167ad629ff2826511e55adcfc9df5e1d669fb84a4c
      image: de.icr.io/armada-master/addon-resizer:1.8.15
      imageID: de.icr.io/armada-master/addon-resizer@sha256:cee47ee4f7898307b3e2aa0be06780f029fbbe32d088f9add19bda22c4e3f4d0
      lastState: {}
      name: metrics-server-nanny
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-26T18:21:12Z"
    hostIP: 10.85.149.20
    phase: Running
    podIP: 172.30.140.80
    podIPs:
    - ip: 172.30.140.80
    qosClass: Burstable
    startTime: "2023-03-26T18:20:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 4b04140862d6140c422a609716e1425869e2bfdff04ed91bfe9cff1b58be43aa
      cni.projectcalico.org/podIP: 172.30.140.82/32
      cni.projectcalico.org/podIPs: 172.30.140.82/32
      prometheus.io/path: /metrics
      prometheus.io/port: "10254"
      prometheus.io/scrape: "true"
      razee.io/build-url: https://travis.ibm.com/alchemy-containers/armada-ingress-microservice/builds/87269293
      razee.io/source-url: https://github.ibm.com/alchemy-containers/armada-ingress-microservice/commit/6c850dc1996a468700d2bf02ec4a933a52d54130
    creationTimestamp: "2023-03-24T15:11:01Z"
    generateName: public-crcg8om62f01beu8rudp30-alb1-845d96d8b8-
    labels:
      alb-image-type: community
      app: public-crcg8om62f01beu8rudp30-alb1
      appVersion: 1.6.4_3898_iks
      pod-template-hash: 845d96d8b8
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:prometheus.io/path: {}
            f:prometheus.io/port: {}
            f:prometheus.io/scrape: {}
            f:razee.io/build-url: {}
            f:razee.io/source-url: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:alb-image-type: {}
            f:app: {}
            f:appVersion: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"90c09d83-26b4-41dc-81e7-50d53bed42ed"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"nginx-ingress"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ALB_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ALB_ID_LB"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARMADA_CLUSTER_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"INGRESS_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"SECURED_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":80,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
                k:{"containerPort":443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"sysctl"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-24T15:11:01Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-24T15:11:02Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.82"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-24T15:11:10Z"
    name: public-crcg8om62f01beu8rudp30-alb1-845d96d8b8-mwwp4
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: public-crcg8om62f01beu8rudp30-alb1-845d96d8b8
      uid: 90c09d83-26b4-41dc-81e7-50d53bed42ed
    resourceVersion: "1084923"
    uid: dce4a145-cf3c-4f22-92bf-0425f58742c7
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: dedicated
              operator: NotIn
              values:
              - internal
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - public-crcg8om62f01beu8rudp30-alb1
            - key: appVersion
              operator: In
              values:
              - 1.6.4_3898_iks
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - /nginx-ingress-controller
      - --configmap=kube-system/ibm-k8s-controller-config
      - --annotations-prefix=nginx.ingress.kubernetes.io
      - --default-ssl-certificate=default/mycluster-fra02-b3-521938-df8e297a5c60fae963c289eec4135c3b-0000
      - --ingress-class=public-iks-k8s-nginx
      - --ingress-class-by-name
      - --controller-class=cloud.ibm.com/public-iks-k8s-nginx
      - --election-id=ingress-controller-leader-public-iks-k8s-nginx
      - --http-port=80
      - --https-port=443
      - --healthz-port=10254
      - --default-backend-service=kube-system/ibm-k8s-controller-default-backend
      - --publish-service=kube-system/public-crcg8om62f01beu8rudp30-alb1
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: ARMADA_CLUSTER_ID
        value: cg8om62f01beu8rudp30
      - name: ALB_ID
        value: public-crcg8om62f01beu8rudp30-alb1
      - name: ALB_ID_LB
        value: public-crcg8om62f01beu8rudp30-alb1
      - name: SECURED_NAMESPACE
        value: ibm-cert-store
      - name: INGRESS_IMAGE
        value: de.icr.io/armada-master/ingress-community:1.6.4_3898_iks
      image: de.icr.io/armada-master/ingress-community:1.6.4_3898_iks
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 10254
          scheme: HTTP
        initialDelaySeconds: 300
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: nginx-ingress
      ports:
      - containerPort: 80
        protocol: TCP
      - containerPort: 443
        protocol: TCP
      resources:
        requests:
          cpu: 20m
          memory: 115Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zpkj9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - sysctl -e -w net.core.rmem_max=16777216; sysctl -e -w net.core.wmem_max=16777216;
        sysctl -e -w net.core.rmem_default=12582912; sysctl -e -w net.core.wmem_default=12582912;
        sysctl -e -w net.core.optmem_max=25165824; sysctl -e -w net.core.netdev_max_backlog=262144;
        sysctl -e -w net.core.somaxconn=32768; sysctl -e -w net.core.rps_sock_flow_entries=32768;
        sysctl -e -w net.ipv4.ip_local_port_range="1025 65535"; sysctl -e -w net.ipv4.ip_local_reserved_ports="2040-2041,4194,4500,5473,8080,9085-9110,9253,9353,10000-10300,11000-11200,12000-12100,30000-32767";
        sysctl -e -w net.ipv4.tcp_rmem="8192 262144 16777216"; sysctl -e -w net.ipv4.tcp_wmem="8192
        262144 16777216"; sysctl -e -w net.ipv4.udp_rmem_min=16384; sysctl -e -w net.ipv4.udp_wmem_min=16384;
        sysctl -e -w net.ipv4.ip_no_pmtu_disc=0; sysctl -e -w net.ipv4.route.flush=1;
        sysctl -e -w net.ipv4.tcp_dsack=1; sysctl -e -w net.ipv4.tcp_sack=1; sysctl
        -e -w net.ipv4.tcp_fack=1; sysctl -e -w net.ipv4.tcp_max_tw_buckets=1440000;
        sysctl -e -w net.ipv4.tcp_tw_recycle=0; sysctl -e -w net.ipv4.tcp_tw_reuse=1;
        sysctl -e -w net.ipv4.tcp_frto=0; sysctl -e -w net.ipv4.tcp_syncookies=1;
        sysctl -e -w net.ipv4.tcp_max_syn_backlog=32768; sysctl -e -w net.ipv4.tcp_synack_retries=2;
        sysctl -e -w net.ipv4.tcp_syn_retries=3; sysctl -e -w net.ipv4.tcp_fin_timeout=5;
        sysctl -e -w net.ipv4.tcp_retries2=5; sysctl -e -w net.ipv4.tcp_no_metrics_save=1;
        sysctl -e -w net.ipv4.tcp_moderate_rcvbuf=1; sysctl -e -w net.ipv4.tcp_timestamps=1;
        sysctl -e -w net.ipv4.tcp_keepalive_time=40; sysctl -e -w net.ipv4.tcp_keepalive_intvl=15;
        sysctl -e -w net.ipv4.tcp_keepalive_probes=6; sysctl -e -w net.ipv4.tcp_slow_start_after_idle=0;
        sysctl -e -w net.ipv4.tcp_window_scaling=1; sysctl -e -w net.ipv4.tcp_low_latency=1;
        sysctl -e -w net.ipv4.tcp_max_orphans=262144; sysctl -e -w net.nf_conntrack_max=9145728;
        sysctl -e -w net.netfilter.nf_conntrack_max=9145728; sysctl -e -w net.netfilter.nf_conntrack_tcp_timeout_time_wait=10;
        sysctl -e -w net.netfilter.nf_conntrack_tcp_timeout_fin_wait=10; sysctl -e
        -w net.netfilter.nf_conntrack_tcp_timeout_close_wait=30; sysctl -e -w net.netfilter.nf_conntrack_tcp_loose=1;
        sysctl -e -w net.ipv4.tcp_rfc1337=1; exit 0
      image: de.icr.io/armada-master/ingress-alpine:3.16_14810
      imagePullPolicy: Always
      name: sysctl
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zpkj9
        readOnly: true
    nodeName: 10.85.149.20
    nodeSelector:
      publicVLAN: "3319718"
    preemptionPolicy: PreemptLowerPriority
    priority: 900000000
    priorityClassName: ibm-app-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ibm-k8s-ingress
    serviceAccountName: ibm-k8s-ingress
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: kube-api-access-zpkj9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-24T15:11:04Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-24T15:11:10Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-24T15:11:10Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-24T15:11:01Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://11066d020d7cf65ea3a5d7771c1ffa714e4749dec94b9f4c9ccd2c7e897b069c
      image: de.icr.io/armada-master/ingress-community:1.6.4_3898_iks
      imageID: de.icr.io/armada-master/ingress-community@sha256:392cad0767c14ae5677709192cc1956014fbb397181cc9c8a887041c87cf3281
      lastState: {}
      name: nginx-ingress
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-24T15:11:10Z"
    hostIP: 10.85.149.20
    initContainerStatuses:
    - containerID: containerd://dca8659ae764565fd23a375e5f876bc8d7ebc46170f262597b8d72f4543f0253
      image: de.icr.io/armada-master/ingress-alpine:3.16_14810
      imageID: de.icr.io/armada-master/ingress-alpine@sha256:75f8dfffd06c480008be10b6d3d3e46e7ae818e6fb28d4139f3073044df7274c
      lastState: {}
      name: sysctl
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://dca8659ae764565fd23a375e5f876bc8d7ebc46170f262597b8d72f4543f0253
          exitCode: 0
          finishedAt: "2023-03-24T15:11:03Z"
          reason: Completed
          startedAt: "2023-03-24T15:11:03Z"
    phase: Running
    podIP: 172.30.140.82
    podIPs:
    - ip: 172.30.140.82
    qosClass: Burstable
    startTime: "2023-03-24T15:11:01Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 89bddd94d937079860851d52445e6b3b6858ebe860aefd4d8cbea88fc774a7a3
      cni.projectcalico.org/podIP: 172.30.188.180/32
      cni.projectcalico.org/podIPs: 172.30.188.180/32
      prometheus.io/path: /metrics
      prometheus.io/port: "10254"
      prometheus.io/scrape: "true"
      razee.io/build-url: https://travis.ibm.com/alchemy-containers/armada-ingress-microservice/builds/87269293
      razee.io/source-url: https://github.ibm.com/alchemy-containers/armada-ingress-microservice/commit/6c850dc1996a468700d2bf02ec4a933a52d54130
    creationTimestamp: "2023-03-24T15:11:01Z"
    generateName: public-crcg8om62f01beu8rudp30-alb1-845d96d8b8-
    labels:
      alb-image-type: community
      app: public-crcg8om62f01beu8rudp30-alb1
      appVersion: 1.6.4_3898_iks
      pod-template-hash: 845d96d8b8
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:prometheus.io/path: {}
            f:prometheus.io/port: {}
            f:prometheus.io/scrape: {}
            f:razee.io/build-url: {}
            f:razee.io/source-url: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:alb-image-type: {}
            f:app: {}
            f:appVersion: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"90c09d83-26b4-41dc-81e7-50d53bed42ed"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"nginx-ingress"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ALB_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ALB_ID_LB"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARMADA_CLUSTER_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"INGRESS_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"SECURED_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":80,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
                k:{"containerPort":443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"sysctl"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-24T15:11:01Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-24T15:11:03Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.180"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-24T15:11:11Z"
    name: public-crcg8om62f01beu8rudp30-alb1-845d96d8b8-sxsx9
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: public-crcg8om62f01beu8rudp30-alb1-845d96d8b8
      uid: 90c09d83-26b4-41dc-81e7-50d53bed42ed
    resourceVersion: "1084940"
    uid: 43f1552c-a21d-4b2a-bb8f-3979726ac9f8
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: dedicated
              operator: NotIn
              values:
              - internal
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - public-crcg8om62f01beu8rudp30-alb1
            - key: appVersion
              operator: In
              values:
              - 1.6.4_3898_iks
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - /nginx-ingress-controller
      - --configmap=kube-system/ibm-k8s-controller-config
      - --annotations-prefix=nginx.ingress.kubernetes.io
      - --default-ssl-certificate=default/mycluster-fra02-b3-521938-df8e297a5c60fae963c289eec4135c3b-0000
      - --ingress-class=public-iks-k8s-nginx
      - --ingress-class-by-name
      - --controller-class=cloud.ibm.com/public-iks-k8s-nginx
      - --election-id=ingress-controller-leader-public-iks-k8s-nginx
      - --http-port=80
      - --https-port=443
      - --healthz-port=10254
      - --default-backend-service=kube-system/ibm-k8s-controller-default-backend
      - --publish-service=kube-system/public-crcg8om62f01beu8rudp30-alb1
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: ARMADA_CLUSTER_ID
        value: cg8om62f01beu8rudp30
      - name: ALB_ID
        value: public-crcg8om62f01beu8rudp30-alb1
      - name: ALB_ID_LB
        value: public-crcg8om62f01beu8rudp30-alb1
      - name: SECURED_NAMESPACE
        value: ibm-cert-store
      - name: INGRESS_IMAGE
        value: de.icr.io/armada-master/ingress-community:1.6.4_3898_iks
      image: de.icr.io/armada-master/ingress-community:1.6.4_3898_iks
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 10254
          scheme: HTTP
        initialDelaySeconds: 300
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: nginx-ingress
      ports:
      - containerPort: 80
        protocol: TCP
      - containerPort: 443
        protocol: TCP
      resources:
        requests:
          cpu: 20m
          memory: 115Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wbq78
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - sysctl -e -w net.core.rmem_max=16777216; sysctl -e -w net.core.wmem_max=16777216;
        sysctl -e -w net.core.rmem_default=12582912; sysctl -e -w net.core.wmem_default=12582912;
        sysctl -e -w net.core.optmem_max=25165824; sysctl -e -w net.core.netdev_max_backlog=262144;
        sysctl -e -w net.core.somaxconn=32768; sysctl -e -w net.core.rps_sock_flow_entries=32768;
        sysctl -e -w net.ipv4.ip_local_port_range="1025 65535"; sysctl -e -w net.ipv4.ip_local_reserved_ports="2040-2041,4194,4500,5473,8080,9085-9110,9253,9353,10000-10300,11000-11200,12000-12100,30000-32767";
        sysctl -e -w net.ipv4.tcp_rmem="8192 262144 16777216"; sysctl -e -w net.ipv4.tcp_wmem="8192
        262144 16777216"; sysctl -e -w net.ipv4.udp_rmem_min=16384; sysctl -e -w net.ipv4.udp_wmem_min=16384;
        sysctl -e -w net.ipv4.ip_no_pmtu_disc=0; sysctl -e -w net.ipv4.route.flush=1;
        sysctl -e -w net.ipv4.tcp_dsack=1; sysctl -e -w net.ipv4.tcp_sack=1; sysctl
        -e -w net.ipv4.tcp_fack=1; sysctl -e -w net.ipv4.tcp_max_tw_buckets=1440000;
        sysctl -e -w net.ipv4.tcp_tw_recycle=0; sysctl -e -w net.ipv4.tcp_tw_reuse=1;
        sysctl -e -w net.ipv4.tcp_frto=0; sysctl -e -w net.ipv4.tcp_syncookies=1;
        sysctl -e -w net.ipv4.tcp_max_syn_backlog=32768; sysctl -e -w net.ipv4.tcp_synack_retries=2;
        sysctl -e -w net.ipv4.tcp_syn_retries=3; sysctl -e -w net.ipv4.tcp_fin_timeout=5;
        sysctl -e -w net.ipv4.tcp_retries2=5; sysctl -e -w net.ipv4.tcp_no_metrics_save=1;
        sysctl -e -w net.ipv4.tcp_moderate_rcvbuf=1; sysctl -e -w net.ipv4.tcp_timestamps=1;
        sysctl -e -w net.ipv4.tcp_keepalive_time=40; sysctl -e -w net.ipv4.tcp_keepalive_intvl=15;
        sysctl -e -w net.ipv4.tcp_keepalive_probes=6; sysctl -e -w net.ipv4.tcp_slow_start_after_idle=0;
        sysctl -e -w net.ipv4.tcp_window_scaling=1; sysctl -e -w net.ipv4.tcp_low_latency=1;
        sysctl -e -w net.ipv4.tcp_max_orphans=262144; sysctl -e -w net.nf_conntrack_max=9145728;
        sysctl -e -w net.netfilter.nf_conntrack_max=9145728; sysctl -e -w net.netfilter.nf_conntrack_tcp_timeout_time_wait=10;
        sysctl -e -w net.netfilter.nf_conntrack_tcp_timeout_fin_wait=10; sysctl -e
        -w net.netfilter.nf_conntrack_tcp_timeout_close_wait=30; sysctl -e -w net.netfilter.nf_conntrack_tcp_loose=1;
        sysctl -e -w net.ipv4.tcp_rfc1337=1; exit 0
      image: de.icr.io/armada-master/ingress-alpine:3.16_14810
      imagePullPolicy: Always
      name: sysctl
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wbq78
        readOnly: true
    nodeName: 10.85.149.8
    nodeSelector:
      publicVLAN: "3319718"
    preemptionPolicy: PreemptLowerPriority
    priority: 900000000
    priorityClassName: ibm-app-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ibm-k8s-ingress
    serviceAccountName: ibm-k8s-ingress
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: kube-api-access-wbq78
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-24T15:11:05Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-24T15:11:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-24T15:11:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-24T15:11:01Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c946cb685f58a9a8764bb63218f4cbfe70769c217ba0aab30bcf3b4ab0e4a915
      image: de.icr.io/armada-master/ingress-community:1.6.4_3898_iks
      imageID: de.icr.io/armada-master/ingress-community@sha256:392cad0767c14ae5677709192cc1956014fbb397181cc9c8a887041c87cf3281
      lastState: {}
      name: nginx-ingress
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-24T15:11:10Z"
    hostIP: 10.85.149.8
    initContainerStatuses:
    - containerID: containerd://7a0db19abb636063bd402b1e95b512ae30685a2418474a8b4a63c786cda99086
      image: de.icr.io/armada-master/ingress-alpine:3.16_14810
      imageID: de.icr.io/armada-master/ingress-alpine@sha256:75f8dfffd06c480008be10b6d3d3e46e7ae818e6fb28d4139f3073044df7274c
      lastState: {}
      name: sysctl
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://7a0db19abb636063bd402b1e95b512ae30685a2418474a8b4a63c786cda99086
          exitCode: 0
          finishedAt: "2023-03-24T15:11:04Z"
          reason: Completed
          startedAt: "2023-03-24T15:11:04Z"
    phase: Running
    podIP: 172.30.188.180
    podIPs:
    - ip: 172.30.188.180
    qosClass: Burstable
    startTime: "2023-03-24T15:11:01Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: e9346a46719433aed93c05b132c00550b794db16fa81982000230a64c6826341
      cni.projectcalico.org/podIP: 172.30.140.76/32
      cni.projectcalico.org/podIPs: 172.30.140.76/32
    creationTimestamp: "2023-03-26T18:20:50Z"
    generateName: snapshot-controller-75975d56b6-
    labels:
      app: snapshot-controller
      pod-template-hash: 75975d56b6
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"de448a2f-c2f4-4a28-ba0d-371628dd2af6"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"snapshot-controller"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:privileged: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-26T18:20:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-26T18:20:53Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.76"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:07Z"
    name: snapshot-controller-75975d56b6-kfw9f
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: snapshot-controller-75975d56b6
      uid: de448a2f-c2f4-4a28-ba0d-371628dd2af6
    resourceVersion: "1449336"
    uid: bf717ad4-2775-40ae-9f21-361afe3561d3
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - snapshot-controller
            topologyKey: topology.kubernetes.io/zone
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - snapshot-controller
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - --v=3
      - --leader-election=true
      - --http-endpoint=:9878
      - --leader-election-lease-duration=137s
      - --leader-election-renew-deadline=107s
      - --leader-election-retry-period=26s
      image: de.icr.io/armada-master/snapshot-controller:v6.0.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz/leader-election
          port: 9878
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 5
      name: snapshot-controller
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        privileged: false
        runAsNonRoot: true
        runAsUser: 2121
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j6lss
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: snapshot-controller
    serviceAccountName: snapshot-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: kube-api-access-j6lss
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:21:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:21:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a062c88572e40f341caa5af852e42e680afb99dd41137328d135f2f93414b801
      image: de.icr.io/armada-master/snapshot-controller:v6.0.1
      imageID: de.icr.io/armada-master/snapshot-controller@sha256:611892f35b97a46735a7054d96001da98e8580e968d9070d9e266bfe0359de70
      lastState: {}
      name: snapshot-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-26T18:21:06Z"
    hostIP: 10.85.149.20
    phase: Running
    podIP: 172.30.140.76
    podIPs:
    - ip: 172.30.140.76
    qosClass: Burstable
    startTime: "2023-03-26T18:20:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 9d65ddba7e231c1e31e341694b8f2681bd7fbe691d84a49c6bc8133afef501e5
      cni.projectcalico.org/podIP: 172.30.188.134/32
      cni.projectcalico.org/podIPs: 172.30.188.134/32
    creationTimestamp: "2023-03-26T18:20:50Z"
    generateName: snapshot-controller-75975d56b6-
    labels:
      app: snapshot-controller
      pod-template-hash: 75975d56b6
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"de448a2f-c2f4-4a28-ba0d-371628dd2af6"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"snapshot-controller"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:privileged: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-26T18:20:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-26T18:20:56Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.134"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:15Z"
    name: snapshot-controller-75975d56b6-pkhkd
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: snapshot-controller-75975d56b6
      uid: de448a2f-c2f4-4a28-ba0d-371628dd2af6
    resourceVersion: "1449424"
    uid: d40f3966-5bc1-47a9-8392-2319bd7f93c1
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - snapshot-controller
            topologyKey: topology.kubernetes.io/zone
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - snapshot-controller
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - --v=3
      - --leader-election=true
      - --http-endpoint=:9878
      - --leader-election-lease-duration=137s
      - --leader-election-renew-deadline=107s
      - --leader-election-retry-period=26s
      image: de.icr.io/armada-master/snapshot-controller:v6.0.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz/leader-election
          port: 9878
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 5
      name: snapshot-controller
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        privileged: false
        runAsNonRoot: true
        runAsUser: 2121
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x4ffx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: snapshot-controller
    serviceAccountName: snapshot-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: kube-api-access-x4ffx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:21:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:21:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://542c3569b03e7e458ab5834bef9dd4706f4de0a7114b7c58a88849223d5b6f1d
      image: de.icr.io/armada-master/snapshot-controller:v6.0.1
      imageID: de.icr.io/armada-master/snapshot-controller@sha256:611892f35b97a46735a7054d96001da98e8580e968d9070d9e266bfe0359de70
      lastState: {}
      name: snapshot-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-26T18:21:13Z"
    hostIP: 10.85.149.8
    phase: Running
    podIP: 172.30.188.134
    podIPs:
    - ip: 172.30.188.134
    qosClass: Burstable
    startTime: "2023-03-26T18:20:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: c150ebdbfdf71427dfdb2880e0aa3525c759352aa599fc6298a7cdf43aed5f11
      cni.projectcalico.org/podIP: 172.30.188.187/32
      cni.projectcalico.org/podIPs: 172.30.188.187/32
    creationTimestamp: "2023-03-26T18:20:51Z"
    generateName: snapshot-controller-75975d56b6-
    labels:
      app: snapshot-controller
      pod-template-hash: 75975d56b6
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"de448a2f-c2f4-4a28-ba0d-371628dd2af6"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"snapshot-controller"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:privileged: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-26T18:20:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-26T18:20:54Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.187"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:13Z"
    name: snapshot-controller-75975d56b6-t25m7
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: snapshot-controller-75975d56b6
      uid: de448a2f-c2f4-4a28-ba0d-371628dd2af6
    resourceVersion: "1449409"
    uid: 3eaf8b58-535f-4aa8-9dda-a502bb326dc5
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - snapshot-controller
            topologyKey: topology.kubernetes.io/zone
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - snapshot-controller
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - --v=3
      - --leader-election=true
      - --http-endpoint=:9878
      - --leader-election-lease-duration=137s
      - --leader-election-renew-deadline=107s
      - --leader-election-retry-period=26s
      image: de.icr.io/armada-master/snapshot-controller:v6.0.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz/leader-election
          port: 9878
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 5
      name: snapshot-controller
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        privileged: false
        runAsNonRoot: true
        runAsUser: 2121
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4g4vk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: snapshot-controller
    serviceAccountName: snapshot-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: kube-api-access-4g4vk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:21:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:21:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-26T18:20:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://bc597695857b52c6b6561893033c2a843981457cbd424dfb8c4c29e78af030e3
      image: de.icr.io/armada-master/snapshot-controller:v6.0.1
      imageID: de.icr.io/armada-master/snapshot-controller@sha256:611892f35b97a46735a7054d96001da98e8580e968d9070d9e266bfe0359de70
      lastState: {}
      name: snapshot-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-26T18:21:13Z"
    hostIP: 10.85.149.8
    phase: Running
    podIP: 172.30.188.187
    podIPs:
    - ip: 172.30.188.187
    qosClass: Burstable
    startTime: "2023-03-26T18:20:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 0ea304fcc39debd1bdb9022762f120755748a2a48ff7d3a3fc0ea9dcfbf3d62c
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: bank-of-anthos-network-loss-148648290
      workflows.argoproj.io/node-name: bank-of-anthos-network-loss[1].install-chaos-experiments
    creationTimestamp: "2023-03-27T13:35:30Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: bank-of-anthos-network-loss
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T13:36:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.159"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T13:36:17Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"cf86833d-f13c-411e-8f60-8f6ababa0dab"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T13:36:23Z"
    name: bank-of-anthos-network-loss-148648290
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: bank-of-anthos-network-loss
      uid: cf86833d-f13c-411e-8f60-8f6ababa0dab
    resourceVersion: "1578758"
    uid: 7b90ebcd-7427-4d86-bd58-83ad4b17c6a6
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: bank-of-anthos-network-loss
      - name: ARGO_WORKFLOW_UID
        value: cf86833d-f13c-411e-8f60-8f6ababa0dab
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-network-loss-148648290
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gn25q
        readOnly: true
    - args:
      - kubectl apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
        -n litmus ; sleep 30
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-network-loss-148648290
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gn25q
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-gn25q
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:35:31Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:36:13Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:36:13Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:35:30Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c876640c97bc591eb46f4ea093497e313ca32c7acb6c067e53b2ac92ecf42ee3
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://c876640c97bc591eb46f4ea093497e313ca32c7acb6c067e53b2ac92ecf42ee3
          exitCode: 0
          finishedAt: "2023-03-27T13:36:12Z"
          reason: Completed
          startedAt: "2023-03-27T13:35:37Z"
    - containerID: containerd://47b1fa5a0b3279cca086bdd688e21ed12b01492256d4183ddcb356f8ad2e7d66
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://47b1fa5a0b3279cca086bdd688e21ed12b01492256d4183ddcb356f8ad2e7d66
          exitCode: 0
          finishedAt: "2023-03-27T13:36:13Z"
          reason: Completed
          startedAt: "2023-03-27T13:35:35Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.159
    podIPs:
    - ip: 172.30.188.159
    qosClass: BestEffort
    startTime: "2023-03-27T13:35:31Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: b3eb2f3d73ee4e2450674556b48dd4b7d8e7f4849540996e77f3ef3bc90a931c
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: bank-of-anthos-network-loss-3115581310
      workflows.argoproj.io/node-name: bank-of-anthos-network-loss[2].pod-network-loss
    creationTimestamp: "2023-03-27T13:36:23Z"
    labels:
      weight: "10"
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: bank-of-anthos-network-loss
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T13:37:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.164"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T13:37:36Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:weight: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"cf86833d-f13c-411e-8f60-8f6ababa0dab"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/tmp/chaosengine.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/mainctrfs/tmp/chaosengine.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/inputs/artifacts"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"input-artifacts"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T13:37:42Z"
    name: bank-of-anthos-network-loss-3115581310
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: bank-of-anthos-network-loss
      uid: cf86833d-f13c-411e-8f60-8f6ababa0dab
    resourceVersion: "1579010"
    uid: ba4fe1ba-d3b5-42b5-8a86-81972a98e5e7
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: bank-of-anthos-network-loss
      - name: ARGO_WORKFLOW_UID
        value: cf86833d-f13c-411e-8f60-8f6ababa0dab
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"cf86833d-f13c-411e-8f60-8f6ababa0dab\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name in (balancereader,transactionhistory)\n    appkind:
          \"deployment\"\n  jobCleanUpPolicy: retain\n  engineState: \"active\"\n  chaosServiceAccount:
          litmus-admin\n  components:\n    runner:\n      imagePullPolicy: Always\n  experiments:\n    -
          name: pod-network-loss\n      spec:\n        probe:\n          - name: check-frontend-access-url\n            type:
          httpProbe\n            httpProbe/inputs:\n              url: http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          2\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-network-loss-3115581310
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /mainctrfs/tmp/chaosengine.yaml
        name: input-artifacts
        subPath: pod-network-loss
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r6j77
        readOnly: true
    - args:
      - -file=/tmp/chaosengine.yaml
      - -saveName=/tmp/engine-name
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"cf86833d-f13c-411e-8f60-8f6ababa0dab\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name in (balancereader,transactionhistory)\n    appkind:
          \"deployment\"\n  jobCleanUpPolicy: retain\n  engineState: \"active\"\n  chaosServiceAccount:
          litmus-admin\n  components:\n    runner:\n      imagePullPolicy: Always\n  experiments:\n    -
          name: pod-network-loss\n      spec:\n        probe:\n          - name: check-frontend-access-url\n            type:
          httpProbe\n            httpProbe/inputs:\n              url: http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          2\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-network-loss-3115581310
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-checker:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/chaosengine.yaml
        name: input-artifacts
        subPath: pod-network-loss
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r6j77
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: bank-of-anthos-network-loss
      - name: ARGO_WORKFLOW_UID
        value: cf86833d-f13c-411e-8f60-8f6ababa0dab
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"cf86833d-f13c-411e-8f60-8f6ababa0dab\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name in (balancereader,transactionhistory)\n    appkind:
          \"deployment\"\n  jobCleanUpPolicy: retain\n  engineState: \"active\"\n  chaosServiceAccount:
          litmus-admin\n  components:\n    runner:\n      imagePullPolicy: Always\n  experiments:\n    -
          name: pod-network-loss\n      spec:\n        probe:\n          - name: check-frontend-access-url\n            type:
          httpProbe\n            httpProbe/inputs:\n              url: http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          2\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-network-loss-3115581310
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/inputs/artifacts
        name: input-artifacts
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r6j77
        readOnly: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: input-artifacts
    - name: kube-api-access-r6j77
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:36:27Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:37:31Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:37:31Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:36:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://916c26ccb319b19e76c36d3a73ae2148ae899dd0eaebd5740b76051f4b13a716
      image: docker.io/litmuschaos/litmus-checker:latest
      imageID: docker.io/litmuschaos/litmus-checker@sha256:7f0790b7e3740039378b9a3c604b20214a573c62c3961ab9e66bf35efed3acb1
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://916c26ccb319b19e76c36d3a73ae2148ae899dd0eaebd5740b76051f4b13a716
          exitCode: 0
          finishedAt: "2023-03-27T13:37:30Z"
          reason: Completed
          startedAt: "2023-03-27T13:36:30Z"
    - containerID: containerd://2029808bfdf56b584db96c094cfd202f69055e8afeb0af9a9f89459ef29e0064
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://2029808bfdf56b584db96c094cfd202f69055e8afeb0af9a9f89459ef29e0064
          exitCode: 0
          finishedAt: "2023-03-27T13:37:31Z"
          reason: Completed
          startedAt: "2023-03-27T13:36:28Z"
    hostIP: 10.85.149.8
    initContainerStatuses:
    - containerID: containerd://f626f281113abd868853fa1e212f96aaad99943ee2e5543a140ee8d50a8e3619
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://f626f281113abd868853fa1e212f96aaad99943ee2e5543a140ee8d50a8e3619
          exitCode: 0
          finishedAt: "2023-03-27T13:36:26Z"
          reason: Completed
          startedAt: "2023-03-27T13:36:26Z"
    phase: Succeeded
    podIP: 172.30.188.164
    podIPs:
    - ip: 172.30.188.164
    qosClass: BestEffort
    startTime: "2023-03-27T13:36:23Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 9ca01655f55d2a58a571f39ca49bc9b37be6c35db913fcded183753930abe856
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: bank-of-anthos-network-loss-4035225182
      workflows.argoproj.io/node-name: bank-of-anthos-network-loss[3].revert-chaos
    creationTimestamp: "2023-03-27T13:37:41Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: bank-of-anthos-network-loss
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T13:37:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.158"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T13:37:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"cf86833d-f13c-411e-8f60-8f6ababa0dab"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T13:37:52Z"
    name: bank-of-anthos-network-loss-4035225182
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: bank-of-anthos-network-loss
      uid: cf86833d-f13c-411e-8f60-8f6ababa0dab
    resourceVersion: "1579058"
    uid: 8daecab0-f2da-40e3-8835-eecba97bebc1
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: bank-of-anthos-network-loss
      - name: ARGO_WORKFLOW_UID
        value: cf86833d-f13c-411e-8f60-8f6ababa0dab
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"revert-chaos","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          delete chaosengine pod-network-loss-chaos -n litmus"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-network-loss-4035225182
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9hpjf
        readOnly: true
    - args:
      - kubectl delete chaosengine pod-network-loss-chaos -n litmus
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"revert-chaos","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          delete chaosengine pod-network-loss-chaos -n litmus"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-network-loss-4035225182
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9hpjf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-9hpjf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:37:41Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:37:47Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:37:47Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:37:41Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e82daf7dd1cc50f505cd538cc1031e210591def9933238a061386fd622ae4719
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://e82daf7dd1cc50f505cd538cc1031e210591def9933238a061386fd622ae4719
          exitCode: 1
          finishedAt: "2023-03-27T13:37:46Z"
          reason: Error
          startedAt: "2023-03-27T13:37:45Z"
    - containerID: containerd://7124d30c69f15e9b8950e4a9c484e7160f0fc34012517d2fc4f4d60f0c68bd38
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://7124d30c69f15e9b8950e4a9c484e7160f0fc34012517d2fc4f4d60f0c68bd38
          exitCode: 0
          finishedAt: "2023-03-27T13:37:47Z"
          reason: Completed
          startedAt: "2023-03-27T13:37:44Z"
    hostIP: 10.85.149.8
    phase: Failed
    podIP: 172.30.188.158
    podIPs:
    - ip: 172.30.188.158
    qosClass: BestEffort
    startTime: "2023-03-27T13:37:41Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: b58b7d9bb48ad3df7ad9e32fd2471734febd643c317105f6bb6b87554481fde1
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: bank-of-anthos-network-loss-4048212952
      workflows.argoproj.io/node-name: bank-of-anthos-network-loss[0].install-application
    creationTimestamp: "2023-03-27T13:34:37Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: bank-of-anthos-network-loss
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T13:35:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.153"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T13:35:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"cf86833d-f13c-411e-8f60-8f6ababa0dab"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T13:35:31Z"
    name: bank-of-anthos-network-loss-4048212952
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: bank-of-anthos-network-loss
      uid: cf86833d-f13c-411e-8f60-8f6ababa0dab
    resourceVersion: "1578629"
    uid: 6668dcf5-e55c-41fc-867c-7cccae23dd42
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: bank-of-anthos-network-loss
      - name: ARGO_WORKFLOW_UID
        value: cf86833d-f13c-411e-8f60-8f6ababa0dab
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-network-loss-4048212952
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5qrgw
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=apply
      - -timeout=400
      - -app=bank-of-anthos
      - -scope=cluster
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-network-loss-4048212952
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5qrgw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-5qrgw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:34:37Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:35:20Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:35:20Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:34:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://febc3a0617d46d1df06f20b516dfb18c066f1bcd3ae8e4b9d21168f7c7a2f619
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://febc3a0617d46d1df06f20b516dfb18c066f1bcd3ae8e4b9d21168f7c7a2f619
          exitCode: 0
          finishedAt: "2023-03-27T13:35:20Z"
          reason: Completed
          startedAt: "2023-03-27T13:34:40Z"
    - containerID: containerd://3487854a6ca16cdce9fe0567c13708a99f7cae554da668d761b4d6d43bfd941b
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://3487854a6ca16cdce9fe0567c13708a99f7cae554da668d761b4d6d43bfd941b
          exitCode: 0
          finishedAt: "2023-03-27T13:35:20Z"
          reason: Completed
          startedAt: "2023-03-27T13:34:39Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.153
    podIPs:
    - ip: 172.30.188.153
    qosClass: BestEffort
    startTime: "2023-03-27T13:34:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 74d1a2f64b6b8c8619b70637c082e2e5406ef8f21712883ea9b9b8b25cb10480
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: bank-of-anthos-single-pod-1145947618
      workflows.argoproj.io/node-name: bank-of-anthos-single-pod[2].pod-network-loss
    creationTimestamp: "2023-03-27T15:32:32Z"
    labels:
      weight: "10"
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: bank-of-anthos-single-pod
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T15:33:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.73"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T15:33:44Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:weight: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"01b896da-3022-482a-9ac4-e83215ae5813"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/tmp/chaosengine.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/mainctrfs/tmp/chaosengine.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/inputs/artifacts"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"input-artifacts"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T15:33:50Z"
    name: bank-of-anthos-single-pod-1145947618
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: bank-of-anthos-single-pod
      uid: 01b896da-3022-482a-9ac4-e83215ae5813
    resourceVersion: "1592727"
    uid: 0288aeba-2d1a-4d65-a8cd-508249307cd3
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: bank-of-anthos-single-pod
      - name: ARGO_WORKFLOW_UID
        value: 01b896da-3022-482a-9ac4-e83215ae5813
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"01b896da-3022-482a-9ac4-e83215ae5813\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name=balancereader\n    appkind: \"deployment\"\n  jobCleanUpPolicy:
          retain\n  engineState: \"active\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n      imagePullPolicy:
          Always\n  experiments:\n    - name: pod-network-loss\n      spec:\n        probe:\n          -
          name: check-frontend-access-url\n            type: httpProbe\n            httpProbe/inputs:\n              url:
          http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          2\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-single-pod-1145947618
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /mainctrfs/tmp/chaosengine.yaml
        name: input-artifacts
        subPath: pod-network-loss
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dv6x7
        readOnly: true
    - args:
      - -file=/tmp/chaosengine.yaml
      - -saveName=/tmp/engine-name
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"01b896da-3022-482a-9ac4-e83215ae5813\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name=balancereader\n    appkind: \"deployment\"\n  jobCleanUpPolicy:
          retain\n  engineState: \"active\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n      imagePullPolicy:
          Always\n  experiments:\n    - name: pod-network-loss\n      spec:\n        probe:\n          -
          name: check-frontend-access-url\n            type: httpProbe\n            httpProbe/inputs:\n              url:
          http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          2\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-single-pod-1145947618
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-checker:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/chaosengine.yaml
        name: input-artifacts
        subPath: pod-network-loss
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dv6x7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: bank-of-anthos-single-pod
      - name: ARGO_WORKFLOW_UID
        value: 01b896da-3022-482a-9ac4-e83215ae5813
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"01b896da-3022-482a-9ac4-e83215ae5813\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name=balancereader\n    appkind: \"deployment\"\n  jobCleanUpPolicy:
          retain\n  engineState: \"active\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n      imagePullPolicy:
          Always\n  experiments:\n    - name: pod-network-loss\n      spec:\n        probe:\n          -
          name: check-frontend-access-url\n            type: httpProbe\n            httpProbe/inputs:\n              url:
          http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          2\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-single-pod-1145947618
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/inputs/artifacts
        name: input-artifacts
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dv6x7
        readOnly: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: input-artifacts
    - name: kube-api-access-dv6x7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:32:36Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:33:40Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:33:40Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:32:32Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0ad3c927351a3a28c95f799b427b52cb504003c8e1a8f30a66315cf4d21807b7
      image: docker.io/litmuschaos/litmus-checker:latest
      imageID: docker.io/litmuschaos/litmus-checker@sha256:7f0790b7e3740039378b9a3c604b20214a573c62c3961ab9e66bf35efed3acb1
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://0ad3c927351a3a28c95f799b427b52cb504003c8e1a8f30a66315cf4d21807b7
          exitCode: 0
          finishedAt: "2023-03-27T15:33:39Z"
          reason: Completed
          startedAt: "2023-03-27T15:32:38Z"
    - containerID: containerd://1453809d2736591e8ba90d4814b2aecf131d56628484620edcbcb508142f9ad6
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://1453809d2736591e8ba90d4814b2aecf131d56628484620edcbcb508142f9ad6
          exitCode: 0
          finishedAt: "2023-03-27T15:33:40Z"
          reason: Completed
          startedAt: "2023-03-27T15:32:37Z"
    hostIP: 10.85.149.20
    initContainerStatuses:
    - containerID: containerd://828566e711afa299f00cb9708b0587a208181491ece3579ccdd214cc115c7481
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://828566e711afa299f00cb9708b0587a208181491ece3579ccdd214cc115c7481
          exitCode: 0
          finishedAt: "2023-03-27T15:32:36Z"
          reason: Completed
          startedAt: "2023-03-27T15:32:35Z"
    phase: Succeeded
    podIP: 172.30.140.73
    podIPs:
    - ip: 172.30.140.73
    qosClass: BestEffort
    startTime: "2023-03-27T15:32:32Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 403a1ca2d6016873c726d1e188a6c66c6596eaecb764b641ee0f3831b4ce2931
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: bank-of-anthos-single-pod-3128936660
      workflows.argoproj.io/node-name: bank-of-anthos-single-pod[0].install-application
    creationTimestamp: "2023-03-27T15:30:47Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: bank-of-anthos-single-pod
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T15:31:32Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.124"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T15:31:33Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"01b896da-3022-482a-9ac4-e83215ae5813"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T15:31:39Z"
    name: bank-of-anthos-single-pod-3128936660
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: bank-of-anthos-single-pod
      uid: 01b896da-3022-482a-9ac4-e83215ae5813
    resourceVersion: "1592349"
    uid: dfeb362c-3a49-4872-bc67-f2b701169c6e
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: bank-of-anthos-single-pod
      - name: ARGO_WORKFLOW_UID
        value: 01b896da-3022-482a-9ac4-e83215ae5813
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-single-pod-3128936660
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-z2z6g
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=apply
      - -timeout=400
      - -app=bank-of-anthos
      - -scope=cluster
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-single-pod-3128936660
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-z2z6g
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-z2z6g
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:30:47Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:31:29Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:31:29Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:30:47Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3f069162d7439d6ca8d3a74137e156e3fabcdd9b2399eae6d422d4ce4ff694f7
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://3f069162d7439d6ca8d3a74137e156e3fabcdd9b2399eae6d422d4ce4ff694f7
          exitCode: 0
          finishedAt: "2023-03-27T15:31:29Z"
          reason: Completed
          startedAt: "2023-03-27T15:30:50Z"
    - containerID: containerd://bd7638ffac8dd4cc05d1214eac6a976f9e804ca74b4d99c1de586759986b959a
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://bd7638ffac8dd4cc05d1214eac6a976f9e804ca74b4d99c1de586759986b959a
          exitCode: 0
          finishedAt: "2023-03-27T15:31:29Z"
          reason: Completed
          startedAt: "2023-03-27T15:30:49Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.124
    podIPs:
    - ip: 172.30.140.124
    qosClass: BestEffort
    startTime: "2023-03-27T15:30:47Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 47cf6a7d8d1a62ebc05bc35c228293c90d195db01b2f071b74ff7de4f3237665
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: bank-of-anthos-single-pod-3132966408
      workflows.argoproj.io/node-name: bank-of-anthos-single-pod[4].delete-application
    creationTimestamp: "2023-03-27T15:34:11Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: bank-of-anthos-single-pod
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T15:34:28Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.97"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T15:34:29Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"01b896da-3022-482a-9ac4-e83215ae5813"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T15:34:36Z"
    name: bank-of-anthos-single-pod-3132966408
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: bank-of-anthos-single-pod
      uid: 01b896da-3022-482a-9ac4-e83215ae5813
    resourceVersion: "1593038"
    uid: 85b87fc2-f1d6-4c21-930b-0075373111a0
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: bank-of-anthos-single-pod
      - name: ARGO_WORKFLOW_UID
        value: 01b896da-3022-482a-9ac4-e83215ae5813
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-single-pod-3132966408
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zqclb
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=delete
      - -app=bank-of-anthos
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-single-pod-3132966408
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zqclb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-zqclb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:34:11Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:34:26Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:34:26Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:34:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d3ff963209cb8f4da4e63aa780a171702611676a8a052d615ceecb2a1ec54a49
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://d3ff963209cb8f4da4e63aa780a171702611676a8a052d615ceecb2a1ec54a49
          exitCode: 0
          finishedAt: "2023-03-27T15:34:25Z"
          reason: Completed
          startedAt: "2023-03-27T15:34:15Z"
    - containerID: containerd://96e314dba3c80380969dea2f6861ae9a3baa416a97bba94127f22e72e12a7015
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://96e314dba3c80380969dea2f6861ae9a3baa416a97bba94127f22e72e12a7015
          exitCode: 0
          finishedAt: "2023-03-27T15:34:26Z"
          reason: Completed
          startedAt: "2023-03-27T15:34:14Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.97
    podIPs:
    - ip: 172.30.140.97
    qosClass: BestEffort
    startTime: "2023-03-27T15:34:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: f6a09f33f2f2147b86c04b55f3d4e2b4f5b8c84a951d962448e544099c9ee1ac
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: bank-of-anthos-single-pod-436063450
      workflows.argoproj.io/node-name: bank-of-anthos-single-pod[3].revert-chaos
    creationTimestamp: "2023-03-27T15:33:50Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: bank-of-anthos-single-pod
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T15:34:00Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.70"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T15:34:01Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"01b896da-3022-482a-9ac4-e83215ae5813"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T15:34:11Z"
    name: bank-of-anthos-single-pod-436063450
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: bank-of-anthos-single-pod
      uid: 01b896da-3022-482a-9ac4-e83215ae5813
    resourceVersion: "1592805"
    uid: bd29919b-7aa4-43b8-9d47-0a761a4ee6c5
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: bank-of-anthos-single-pod
      - name: ARGO_WORKFLOW_UID
        value: 01b896da-3022-482a-9ac4-e83215ae5813
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"revert-chaos","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          delete chaosengine -l workflow_run_id=01b896da-3022-482a-9ac4-e83215ae5813
          -n litmus"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-single-pod-436063450
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5kws9
        readOnly: true
    - args:
      - kubectl delete chaosengine -l workflow_run_id=01b896da-3022-482a-9ac4-e83215ae5813
        -n litmus
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"revert-chaos","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          delete chaosengine -l workflow_run_id=01b896da-3022-482a-9ac4-e83215ae5813
          -n litmus"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-single-pod-436063450
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5kws9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-5kws9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:33:50Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:33:57Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:33:57Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:33:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://30c86204865405955f93cdc0d29ecc169cc008f78a909c6c9dadc7f1fd130aa2
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://30c86204865405955f93cdc0d29ecc169cc008f78a909c6c9dadc7f1fd130aa2
          exitCode: 0
          finishedAt: "2023-03-27T15:33:57Z"
          reason: Completed
          startedAt: "2023-03-27T15:33:54Z"
    - containerID: containerd://83eefe5ae2ee2222e702a7acb823457b774676257c2807df4d902e18b7a9d321
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://83eefe5ae2ee2222e702a7acb823457b774676257c2807df4d902e18b7a9d321
          exitCode: 0
          finishedAt: "2023-03-27T15:33:57Z"
          reason: Completed
          startedAt: "2023-03-27T15:33:53Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.70
    podIPs:
    - ip: 172.30.140.70
    qosClass: BestEffort
    startTime: "2023-03-27T15:33:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 53c903bedef5441d5f58b732046ae701f2617c3dfdba91221aea3b31296d4f18
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: bank-of-anthos-single-pod-827682798
      workflows.argoproj.io/node-name: bank-of-anthos-single-pod[1].install-chaos-experiments
    creationTimestamp: "2023-03-27T15:31:39Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: bank-of-anthos-single-pod
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T15:32:25Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.111"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T15:32:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"01b896da-3022-482a-9ac4-e83215ae5813"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T15:32:32Z"
    name: bank-of-anthos-single-pod-827682798
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: bank-of-anthos-single-pod
      uid: 01b896da-3022-482a-9ac4-e83215ae5813
    resourceVersion: "1592478"
    uid: d4b3a1e6-df7c-4a32-9b5b-6546dd060d92
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: bank-of-anthos-single-pod
      - name: ARGO_WORKFLOW_UID
        value: 01b896da-3022-482a-9ac4-e83215ae5813
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-single-pod-827682798
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gb2xl
        readOnly: true
    - args:
      - kubectl apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
        -n litmus ; sleep 30
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: bank-of-anthos-single-pod-827682798
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gb2xl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-gb2xl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:31:39Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:32:22Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:32:22Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:31:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0ba015e2b447ad4ea9846167bd094e869b8b2bd97ff32f4eae7343e30a2d7a41
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://0ba015e2b447ad4ea9846167bd094e869b8b2bd97ff32f4eae7343e30a2d7a41
          exitCode: 0
          finishedAt: "2023-03-27T15:32:21Z"
          reason: Completed
          startedAt: "2023-03-27T15:31:46Z"
    - containerID: containerd://be0bda19f2ee1eb619c0a9f115f220b1d20463fdbe6e44ff5df0edbd3dbd439b
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://be0bda19f2ee1eb619c0a9f115f220b1d20463fdbe6e44ff5df0edbd3dbd439b
          exitCode: 0
          finishedAt: "2023-03-27T15:32:22Z"
          reason: Completed
          startedAt: "2023-03-27T15:31:44Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.111
    podIPs:
    - ip: 172.30.140.111
    qosClass: BestEffort
    startTime: "2023-03-27T15:31:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: d1a42862c95c7e1761f8002f0abc4ca05742876e52a5381da33de766c1abc5b8
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: banke-of-anthos-single-pod-timeout-1070337527
      workflows.argoproj.io/node-name: banke-of-anthos-single-pod-timeout[3].revert-chaos
    creationTimestamp: "2023-03-27T15:48:02Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: banke-of-anthos-single-pod-timeout
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T15:48:12Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.135"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T15:48:13Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"0fa84d1b-bd91-41be-93a4-5d1f204ca9c4"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T15:48:22Z"
    name: banke-of-anthos-single-pod-timeout-1070337527
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: banke-of-anthos-single-pod-timeout
      uid: 0fa84d1b-bd91-41be-93a4-5d1f204ca9c4
    resourceVersion: "1595051"
    uid: d71065a3-d348-405c-b2c2-89c052905b21
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: banke-of-anthos-single-pod-timeout
      - name: ARGO_WORKFLOW_UID
        value: 0fa84d1b-bd91-41be-93a4-5d1f204ca9c4
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"revert-chaos","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          delete chaosengine -l workflow_run_id=0fa84d1b-bd91-41be-93a4-5d1f204ca9c4
          -n litmus"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-1070337527
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4qcn6
        readOnly: true
    - args:
      - kubectl delete chaosengine -l workflow_run_id=0fa84d1b-bd91-41be-93a4-5d1f204ca9c4
        -n litmus
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"revert-chaos","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          delete chaosengine -l workflow_run_id=0fa84d1b-bd91-41be-93a4-5d1f204ca9c4
          -n litmus"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-1070337527
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4qcn6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-4qcn6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:48:02Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:48:09Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:48:09Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:48:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7c80255b07acc3d3c13f366aabcca6fad33dcd71c9310792b97b158d87359a66
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://7c80255b07acc3d3c13f366aabcca6fad33dcd71c9310792b97b158d87359a66
          exitCode: 0
          finishedAt: "2023-03-27T15:48:08Z"
          reason: Completed
          startedAt: "2023-03-27T15:48:06Z"
    - containerID: containerd://d8d3161abe760a5c6eec1b956e503c7ac9fbb828c2f29bd459a130be1f9f0d24
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://d8d3161abe760a5c6eec1b956e503c7ac9fbb828c2f29bd459a130be1f9f0d24
          exitCode: 0
          finishedAt: "2023-03-27T15:48:09Z"
          reason: Completed
          startedAt: "2023-03-27T15:48:05Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.135
    podIPs:
    - ip: 172.30.188.135
    qosClass: BestEffort
    startTime: "2023-03-27T15:48:02Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 1a286f95035ec832f23006d515c6c4f48458ed33d8231545641ced237bbad286
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: banke-of-anthos-single-pod-timeout-1679932551-1470952460
      workflows.argoproj.io/node-name: banke-of-anthos-single-pod-timeout-1679932551[0].install-application
    creationTimestamp: "2023-03-27T15:55:51Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: banke-of-anthos-single-pod-timeout-1679932551
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T15:56:39Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.143"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T15:56:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4b5c8897-6652-4dd4-9c3b-c92d4d455333"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T15:56:46Z"
    name: banke-of-anthos-single-pod-timeout-1679932551-1470952460
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: banke-of-anthos-single-pod-timeout-1679932551
      uid: 4b5c8897-6652-4dd4-9c3b-c92d4d455333
    resourceVersion: "1596490"
    uid: 159961e7-de00-41f8-9d53-f33a620cb525
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: banke-of-anthos-single-pod-timeout-1679932551
      - name: ARGO_WORKFLOW_UID
        value: 4b5c8897-6652-4dd4-9c3b-c92d4d455333
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-1679932551-1470952460
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ztcqc
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=apply
      - -timeout=400
      - -app=bank-of-anthos
      - -scope=cluster
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-1679932551-1470952460
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ztcqc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-ztcqc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:55:51Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:56:36Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:56:36Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:55:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8508950544d1f06dcfcdd4a5385e8d20925db58412df2e33c9dc0d18b296ad61
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://8508950544d1f06dcfcdd4a5385e8d20925db58412df2e33c9dc0d18b296ad61
          exitCode: 0
          finishedAt: "2023-03-27T15:56:35Z"
          reason: Completed
          startedAt: "2023-03-27T15:55:55Z"
    - containerID: containerd://8cb5f05ad2e7d8dd028af02440a9c274a018184c676f050e79ce45a835376ea3
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://8cb5f05ad2e7d8dd028af02440a9c274a018184c676f050e79ce45a835376ea3
          exitCode: 0
          finishedAt: "2023-03-27T15:56:36Z"
          reason: Completed
          startedAt: "2023-03-27T15:55:54Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.143
    podIPs:
    - ip: 172.30.188.143
    qosClass: BestEffort
    startTime: "2023-03-27T15:55:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: deb49b635bc77d605fc90cb6910de4b65ff7944b3f40affb4f0b3171620c715f
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: banke-of-anthos-single-pod-timeout-1679932551-2065181042
      workflows.argoproj.io/node-name: banke-of-anthos-single-pod-timeout-1679932551[3].revert-chaos
    creationTimestamp: "2023-03-27T15:58:58Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: banke-of-anthos-single-pod-timeout-1679932551
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T15:59:07Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.175"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T15:59:09Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4b5c8897-6652-4dd4-9c3b-c92d4d455333"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T15:59:19Z"
    name: banke-of-anthos-single-pod-timeout-1679932551-2065181042
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: banke-of-anthos-single-pod-timeout-1679932551
      uid: 4b5c8897-6652-4dd4-9c3b-c92d4d455333
    resourceVersion: "1596940"
    uid: c28a35fe-e7be-4de5-81cd-4e68c760a8c0
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: banke-of-anthos-single-pod-timeout-1679932551
      - name: ARGO_WORKFLOW_UID
        value: 4b5c8897-6652-4dd4-9c3b-c92d4d455333
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"revert-chaos","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          delete chaosengine -l workflow_run_id=4b5c8897-6652-4dd4-9c3b-c92d4d455333
          -n litmus"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-1679932551-2065181042
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2bbwv
        readOnly: true
    - args:
      - kubectl delete chaosengine -l workflow_run_id=4b5c8897-6652-4dd4-9c3b-c92d4d455333
        -n litmus
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"revert-chaos","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          delete chaosengine -l workflow_run_id=4b5c8897-6652-4dd4-9c3b-c92d4d455333
          -n litmus"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-1679932551-2065181042
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2bbwv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-2bbwv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:58:58Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:59:05Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:59:05Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:58:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7338f17943c2b43916911ef16b032f246c79557d0e365aa333e627cb3357a2cf
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://7338f17943c2b43916911ef16b032f246c79557d0e365aa333e627cb3357a2cf
          exitCode: 0
          finishedAt: "2023-03-27T15:59:04Z"
          reason: Completed
          startedAt: "2023-03-27T15:59:01Z"
    - containerID: containerd://0cd8e39f3d9511d5af785cb281f8d889df48e1ec028a1e1ce2b073fd9703eade
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://0cd8e39f3d9511d5af785cb281f8d889df48e1ec028a1e1ce2b073fd9703eade
          exitCode: 0
          finishedAt: "2023-03-27T15:59:05Z"
          reason: Completed
          startedAt: "2023-03-27T15:59:00Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.175
    podIPs:
    - ip: 172.30.188.175
    qosClass: BestEffort
    startTime: "2023-03-27T15:58:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 66d0adbdea124621e074d1e9a1d63a5c3ad50135997db7aab3d0b061dbed156a
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: banke-of-anthos-single-pod-timeout-1679932551-2356304864
      workflows.argoproj.io/node-name: banke-of-anthos-single-pod-timeout-1679932551[4].delete-application
    creationTimestamp: "2023-03-27T15:59:19Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: banke-of-anthos-single-pod-timeout-1679932551
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T15:59:36Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.140"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T15:59:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4b5c8897-6652-4dd4-9c3b-c92d4d455333"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T15:59:43Z"
    name: banke-of-anthos-single-pod-timeout-1679932551-2356304864
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: banke-of-anthos-single-pod-timeout-1679932551
      uid: 4b5c8897-6652-4dd4-9c3b-c92d4d455333
    resourceVersion: "1597171"
    uid: e897db29-7a2a-4bdf-a85e-530d11ec1bfd
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: banke-of-anthos-single-pod-timeout-1679932551
      - name: ARGO_WORKFLOW_UID
        value: 4b5c8897-6652-4dd4-9c3b-c92d4d455333
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-1679932551-2356304864
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2n69g
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=delete
      - -app=bank-of-anthos
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-1679932551-2356304864
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2n69g
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-2n69g
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:59:19Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:59:33Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:59:33Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:59:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ddb6b7458ba832b54c1923cfc63ac1242ddf65a4cacbcef8431e8bcfc7089e3d
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://ddb6b7458ba832b54c1923cfc63ac1242ddf65a4cacbcef8431e8bcfc7089e3d
          exitCode: 0
          finishedAt: "2023-03-27T15:59:32Z"
          reason: Completed
          startedAt: "2023-03-27T15:59:21Z"
    - containerID: containerd://c61acc810c1f8abd83f0f26e1e7bc9372ade99706f45fbe1aaf4a09d82b401c8
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://c61acc810c1f8abd83f0f26e1e7bc9372ade99706f45fbe1aaf4a09d82b401c8
          exitCode: 0
          finishedAt: "2023-03-27T15:59:33Z"
          reason: Completed
          startedAt: "2023-03-27T15:59:20Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.140
    podIPs:
    - ip: 172.30.188.140
    qosClass: BestEffort
    startTime: "2023-03-27T15:59:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: e7d989016b90ebefdea2222bfb0afa690653c4c616a717b2b6952d3d57474e5c
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: banke-of-anthos-single-pod-timeout-1679932551-2481662918
      workflows.argoproj.io/node-name: banke-of-anthos-single-pod-timeout-1679932551[1].install-chaos-experiments
    creationTimestamp: "2023-03-27T15:56:46Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: banke-of-anthos-single-pod-timeout-1679932551
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T15:57:31Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.176"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T15:57:32Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4b5c8897-6652-4dd4-9c3b-c92d4d455333"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T15:57:38Z"
    name: banke-of-anthos-single-pod-timeout-1679932551-2481662918
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: banke-of-anthos-single-pod-timeout-1679932551
      uid: 4b5c8897-6652-4dd4-9c3b-c92d4d455333
    resourceVersion: "1596621"
    uid: 89729682-4c6f-418c-8025-2e97675b2b5c
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: banke-of-anthos-single-pod-timeout-1679932551
      - name: ARGO_WORKFLOW_UID
        value: 4b5c8897-6652-4dd4-9c3b-c92d4d455333
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-1679932551-2481662918
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5jt76
        readOnly: true
    - args:
      - kubectl apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
        -n litmus ; sleep 30
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-1679932551-2481662918
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5jt76
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-5jt76
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:56:46Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:57:28Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:57:28Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:56:46Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d5a72358150fe3e0658bdaed4ae9cb066651bfd9d925ce345dbe4ff5ed4b6e03
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://d5a72358150fe3e0658bdaed4ae9cb066651bfd9d925ce345dbe4ff5ed4b6e03
          exitCode: 0
          finishedAt: "2023-03-27T15:57:27Z"
          reason: Completed
          startedAt: "2023-03-27T15:56:51Z"
    - containerID: containerd://4644e0d7a7bdeadf43ca55dac2196f640e7234bda52bdd732b3c52d5d07ae74d
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://4644e0d7a7bdeadf43ca55dac2196f640e7234bda52bdd732b3c52d5d07ae74d
          exitCode: 0
          finishedAt: "2023-03-27T15:57:28Z"
          reason: Completed
          startedAt: "2023-03-27T15:56:49Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.176
    podIPs:
    - ip: 172.30.188.176
    qosClass: BestEffort
    startTime: "2023-03-27T15:56:46Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: b85cfcfee1c50123cdae5c4e81bdff1ba2b86122b059de57532e05aca6f65a24
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: banke-of-anthos-single-pod-timeout-1679932551-599228106
      workflows.argoproj.io/node-name: banke-of-anthos-single-pod-timeout-1679932551[2].pod-network-loss
    creationTimestamp: "2023-03-27T15:57:38Z"
    labels:
      weight: "10"
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: banke-of-anthos-single-pod-timeout-1679932551
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T15:58:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.130"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T15:58:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:weight: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4b5c8897-6652-4dd4-9c3b-c92d4d455333"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/tmp/chaosengine.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/mainctrfs/tmp/chaosengine.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/inputs/artifacts"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"input-artifacts"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T15:58:59Z"
    name: banke-of-anthos-single-pod-timeout-1679932551-599228106
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: banke-of-anthos-single-pod-timeout-1679932551
      uid: 4b5c8897-6652-4dd4-9c3b-c92d4d455333
    resourceVersion: "1596865"
    uid: d5893b1f-8d8d-4005-9304-e3ebe1e00fb9
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: banke-of-anthos-single-pod-timeout-1679932551
      - name: ARGO_WORKFLOW_UID
        value: 4b5c8897-6652-4dd4-9c3b-c92d4d455333
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"4b5c8897-6652-4dd4-9c3b-c92d4d455333\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name=balancereader\n    appkind: \"deployment\"\n  jobCleanUpPolicy:
          retain\n  engineState: \"active\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n      imagePullPolicy:
          Always\n  experiments:\n    - name: pod-network-loss\n      spec:\n        probe:\n          -
          name: check-frontend-access-url\n            type: httpProbe\n            httpProbe/inputs:\n              url:
          http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          50\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-1679932551-599228106
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /mainctrfs/tmp/chaosengine.yaml
        name: input-artifacts
        subPath: pod-network-loss
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bhj66
        readOnly: true
    - args:
      - -file=/tmp/chaosengine.yaml
      - -saveName=/tmp/engine-name
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"4b5c8897-6652-4dd4-9c3b-c92d4d455333\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name=balancereader\n    appkind: \"deployment\"\n  jobCleanUpPolicy:
          retain\n  engineState: \"active\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n      imagePullPolicy:
          Always\n  experiments:\n    - name: pod-network-loss\n      spec:\n        probe:\n          -
          name: check-frontend-access-url\n            type: httpProbe\n            httpProbe/inputs:\n              url:
          http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          50\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-1679932551-599228106
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-checker:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/chaosengine.yaml
        name: input-artifacts
        subPath: pod-network-loss
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bhj66
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: banke-of-anthos-single-pod-timeout-1679932551
      - name: ARGO_WORKFLOW_UID
        value: 4b5c8897-6652-4dd4-9c3b-c92d4d455333
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"4b5c8897-6652-4dd4-9c3b-c92d4d455333\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name=balancereader\n    appkind: \"deployment\"\n  jobCleanUpPolicy:
          retain\n  engineState: \"active\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n      imagePullPolicy:
          Always\n  experiments:\n    - name: pod-network-loss\n      spec:\n        probe:\n          -
          name: check-frontend-access-url\n            type: httpProbe\n            httpProbe/inputs:\n              url:
          http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          50\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-1679932551-599228106
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/inputs/artifacts
        name: input-artifacts
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bhj66
        readOnly: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: input-artifacts
    - name: kube-api-access-bhj66
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:57:44Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:58:48Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:58:48Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://093d931660c8098cfb0af7b0dcbc6df4db4b2602993bc5f3d2115c97768d5a2a
      image: docker.io/litmuschaos/litmus-checker:latest
      imageID: docker.io/litmuschaos/litmus-checker@sha256:7f0790b7e3740039378b9a3c604b20214a573c62c3961ab9e66bf35efed3acb1
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://093d931660c8098cfb0af7b0dcbc6df4db4b2602993bc5f3d2115c97768d5a2a
          exitCode: 0
          finishedAt: "2023-03-27T15:58:47Z"
          reason: Completed
          startedAt: "2023-03-27T15:57:47Z"
    - containerID: containerd://20f1c397e0b854f0930f184cb4890625fef4bab2b2e9adbecc2f7f4687dd5dd9
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://20f1c397e0b854f0930f184cb4890625fef4bab2b2e9adbecc2f7f4687dd5dd9
          exitCode: 0
          finishedAt: "2023-03-27T15:58:48Z"
          reason: Completed
          startedAt: "2023-03-27T15:57:45Z"
    hostIP: 10.85.149.8
    initContainerStatuses:
    - containerID: containerd://397ce96b45c21d7a4bd6c7bc446e75d6a1d48f8fec375fc498509532ae294621
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://397ce96b45c21d7a4bd6c7bc446e75d6a1d48f8fec375fc498509532ae294621
          exitCode: 0
          finishedAt: "2023-03-27T15:57:43Z"
          reason: Completed
          startedAt: "2023-03-27T15:57:43Z"
    phase: Succeeded
    podIP: 172.30.188.130
    podIPs:
    - ip: 172.30.188.130
    qosClass: BestEffort
    startTime: "2023-03-27T15:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: bf94d2d75fa922619dccb184ba7ee1f85b8df5ae92432d29740bfe31221c3c2b
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: banke-of-anthos-single-pod-timeout-249243407
      workflows.argoproj.io/node-name: banke-of-anthos-single-pod-timeout[2].pod-network-loss
    creationTimestamp: "2023-03-27T15:46:43Z"
    labels:
      weight: "10"
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: banke-of-anthos-single-pod-timeout
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T15:47:55Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.155"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T15:47:56Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:weight: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"0fa84d1b-bd91-41be-93a4-5d1f204ca9c4"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/tmp/chaosengine.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/mainctrfs/tmp/chaosengine.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/inputs/artifacts"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"input-artifacts"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T15:48:02Z"
    name: banke-of-anthos-single-pod-timeout-249243407
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: banke-of-anthos-single-pod-timeout
      uid: 0fa84d1b-bd91-41be-93a4-5d1f204ca9c4
    resourceVersion: "1594973"
    uid: 14b468dd-025c-4a24-8156-d8514a6ed973
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: banke-of-anthos-single-pod-timeout
      - name: ARGO_WORKFLOW_UID
        value: 0fa84d1b-bd91-41be-93a4-5d1f204ca9c4
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"0fa84d1b-bd91-41be-93a4-5d1f204ca9c4\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name=balancereader\n    appkind: \"deployment\"\n  jobCleanUpPolicy:
          retain\n  engineState: \"active\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n      imagePullPolicy:
          Always\n  experiments:\n    - name: pod-network-loss\n      spec:\n        probe:\n          -
          name: check-frontend-access-url\n            type: httpProbe\n            httpProbe/inputs:\n              url:
          http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          50\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-249243407
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /mainctrfs/tmp/chaosengine.yaml
        name: input-artifacts
        subPath: pod-network-loss
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rtgrd
        readOnly: true
    - args:
      - -file=/tmp/chaosengine.yaml
      - -saveName=/tmp/engine-name
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"0fa84d1b-bd91-41be-93a4-5d1f204ca9c4\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name=balancereader\n    appkind: \"deployment\"\n  jobCleanUpPolicy:
          retain\n  engineState: \"active\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n      imagePullPolicy:
          Always\n  experiments:\n    - name: pod-network-loss\n      spec:\n        probe:\n          -
          name: check-frontend-access-url\n            type: httpProbe\n            httpProbe/inputs:\n              url:
          http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          50\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-249243407
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-checker:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/chaosengine.yaml
        name: input-artifacts
        subPath: pod-network-loss
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rtgrd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: banke-of-anthos-single-pod-timeout
      - name: ARGO_WORKFLOW_UID
        value: 0fa84d1b-bd91-41be-93a4-5d1f204ca9c4
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"0fa84d1b-bd91-41be-93a4-5d1f204ca9c4\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name=balancereader\n    appkind: \"deployment\"\n  jobCleanUpPolicy:
          retain\n  engineState: \"active\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n      imagePullPolicy:
          Always\n  experiments:\n    - name: pod-network-loss\n      spec:\n        probe:\n          -
          name: check-frontend-access-url\n            type: httpProbe\n            httpProbe/inputs:\n              url:
          http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          50\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-249243407
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/inputs/artifacts
        name: input-artifacts
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rtgrd
        readOnly: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: input-artifacts
    - name: kube-api-access-rtgrd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:46:48Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:47:52Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:47:52Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:46:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8ad51e3811a14109b899e08c4544661d8d7dae8407f028a46b77f9651f186375
      image: docker.io/litmuschaos/litmus-checker:latest
      imageID: docker.io/litmuschaos/litmus-checker@sha256:7f0790b7e3740039378b9a3c604b20214a573c62c3961ab9e66bf35efed3acb1
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://8ad51e3811a14109b899e08c4544661d8d7dae8407f028a46b77f9651f186375
          exitCode: 0
          finishedAt: "2023-03-27T15:47:51Z"
          reason: Completed
          startedAt: "2023-03-27T15:46:50Z"
    - containerID: containerd://a5d79ca7c869acf0d85bb8a00062bddd67f03ca375c8de749fbfd1b4be306fda
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://a5d79ca7c869acf0d85bb8a00062bddd67f03ca375c8de749fbfd1b4be306fda
          exitCode: 0
          finishedAt: "2023-03-27T15:47:52Z"
          reason: Completed
          startedAt: "2023-03-27T15:46:49Z"
    hostIP: 10.85.149.8
    initContainerStatuses:
    - containerID: containerd://3195a8c81375f8c9bf70a479f8c21044a979f2d7b25eaa9d9a6bfbd75e2bac19
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://3195a8c81375f8c9bf70a479f8c21044a979f2d7b25eaa9d9a6bfbd75e2bac19
          exitCode: 0
          finishedAt: "2023-03-27T15:46:47Z"
          reason: Completed
          startedAt: "2023-03-27T15:46:46Z"
    phase: Succeeded
    podIP: 172.30.188.155
    podIPs:
    - ip: 172.30.188.155
    qosClass: BestEffort
    startTime: "2023-03-27T15:46:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 378aac78752ef1eb34d65a438b9be5208b1a6a8a96074313b98b478c3e5afef5
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: banke-of-anthos-single-pod-timeout-2999621295
      workflows.argoproj.io/node-name: banke-of-anthos-single-pod-timeout[0].install-application
    creationTimestamp: "2023-03-27T15:44:57Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: banke-of-anthos-single-pod-timeout
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T15:45:43Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.182"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T15:45:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"0fa84d1b-bd91-41be-93a4-5d1f204ca9c4"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T15:45:50Z"
    name: banke-of-anthos-single-pod-timeout-2999621295
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: banke-of-anthos-single-pod-timeout
      uid: 0fa84d1b-bd91-41be-93a4-5d1f204ca9c4
    resourceVersion: "1594591"
    uid: da4c960b-b270-412b-bf3b-53d495367537
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: banke-of-anthos-single-pod-timeout
      - name: ARGO_WORKFLOW_UID
        value: 0fa84d1b-bd91-41be-93a4-5d1f204ca9c4
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-2999621295
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j2hwv
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=apply
      - -timeout=400
      - -app=bank-of-anthos
      - -scope=cluster
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-2999621295
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j2hwv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-j2hwv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:44:57Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:45:40Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:45:40Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:44:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6530f162bafddae2158858cd3d220656a3fb44d52597a9bbe62a4f700f3fc5ca
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://6530f162bafddae2158858cd3d220656a3fb44d52597a9bbe62a4f700f3fc5ca
          exitCode: 0
          finishedAt: "2023-03-27T15:45:39Z"
          reason: Completed
          startedAt: "2023-03-27T15:45:00Z"
    - containerID: containerd://515b49c88d74c8265b63a16d1715fffc9ae6826473454e699f07a026f79b4851
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://515b49c88d74c8265b63a16d1715fffc9ae6826473454e699f07a026f79b4851
          exitCode: 0
          finishedAt: "2023-03-27T15:45:40Z"
          reason: Completed
          startedAt: "2023-03-27T15:44:59Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.182
    podIPs:
    - ip: 172.30.188.182
    qosClass: BestEffort
    startTime: "2023-03-27T15:44:57Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 287492278e2357d76354f725baa3a6c83b11d397699f93369c17aebcb88cf9f6
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: banke-of-anthos-single-pod-timeout-3305841109
      workflows.argoproj.io/node-name: banke-of-anthos-single-pod-timeout[1].install-chaos-experiments
    creationTimestamp: "2023-03-27T15:45:50Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: banke-of-anthos-single-pod-timeout
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T15:46:36Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.157"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T15:46:38Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"0fa84d1b-bd91-41be-93a4-5d1f204ca9c4"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T15:46:43Z"
    name: banke-of-anthos-single-pod-timeout-3305841109
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: banke-of-anthos-single-pod-timeout
      uid: 0fa84d1b-bd91-41be-93a4-5d1f204ca9c4
    resourceVersion: "1594724"
    uid: 94725606-2568-4883-b9c0-375daa69e958
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: banke-of-anthos-single-pod-timeout
      - name: ARGO_WORKFLOW_UID
        value: 0fa84d1b-bd91-41be-93a4-5d1f204ca9c4
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-3305841109
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lzdfj
        readOnly: true
    - args:
      - kubectl apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
        -n litmus ; sleep 30
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-3305841109
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lzdfj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-lzdfj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:45:50Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:46:32Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:46:32Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:45:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2bd36f258485f4d63ab647054b514d3396d76e91d38fb8b7610ade984092ed64
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://2bd36f258485f4d63ab647054b514d3396d76e91d38fb8b7610ade984092ed64
          exitCode: 0
          finishedAt: "2023-03-27T15:46:31Z"
          reason: Completed
          startedAt: "2023-03-27T15:45:56Z"
    - containerID: containerd://6e49693887929d3f546deb3fe1d540890b9e3d6b4b3c911a96674ae14aefd938
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://6e49693887929d3f546deb3fe1d540890b9e3d6b4b3c911a96674ae14aefd938
          exitCode: 0
          finishedAt: "2023-03-27T15:46:33Z"
          reason: Completed
          startedAt: "2023-03-27T15:45:54Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.157
    podIPs:
    - ip: 172.30.188.157
    qosClass: BestEffort
    startTime: "2023-03-27T15:45:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 4ba039fb95384976ebd2b89ee974eedf607282d01ecb7bde565f7ee02cc7da00
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: banke-of-anthos-single-pod-timeout-56247129
      workflows.argoproj.io/node-name: banke-of-anthos-single-pod-timeout[4].delete-application
    creationTimestamp: "2023-03-27T15:48:22Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: banke-of-anthos-single-pod-timeout
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T15:48:39Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.141"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T15:48:41Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"0fa84d1b-bd91-41be-93a4-5d1f204ca9c4"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T15:48:47Z"
    name: banke-of-anthos-single-pod-timeout-56247129
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: banke-of-anthos-single-pod-timeout
      uid: 0fa84d1b-bd91-41be-93a4-5d1f204ca9c4
    resourceVersion: "1595287"
    uid: 8cf9ae4a-abbf-4707-9b3a-7c1dfc994887
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: banke-of-anthos-single-pod-timeout
      - name: ARGO_WORKFLOW_UID
        value: 0fa84d1b-bd91-41be-93a4-5d1f204ca9c4
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-56247129
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x4mzl
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=delete
      - -app=bank-of-anthos
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: banke-of-anthos-single-pod-timeout-56247129
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x4mzl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-x4mzl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:48:22Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:48:37Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:48:37Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T15:48:22Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c35093192b3c560d27e1376ff59449acc5d5a917cc541acc11f63cc95efb42b4
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://c35093192b3c560d27e1376ff59449acc5d5a917cc541acc11f63cc95efb42b4
          exitCode: 0
          finishedAt: "2023-03-27T15:48:36Z"
          reason: Completed
          startedAt: "2023-03-27T15:48:26Z"
    - containerID: containerd://2018def5d96cd6222879eb5200e122eee996d461b4d7f21e268a143437f835a7
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://2018def5d96cd6222879eb5200e122eee996d461b4d7f21e268a143437f835a7
          exitCode: 0
          finishedAt: "2023-03-27T15:48:37Z"
          reason: Completed
          startedAt: "2023-03-27T15:48:25Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.141
    podIPs:
    - ip: 172.30.188.141
    qosClass: BestEffort
    startTime: "2023-03-27T15:48:22Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 722ffb2527baf081f8a2dd2ac7f4f4f876957ce2d1a6be570ce82c89c28f154a
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: boa-1122732311
      workflows.argoproj.io/node-name: boa[2].pod-network-loss
    creationTimestamp: "2023-03-27T16:28:50Z"
    labels:
      weight: "10"
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: boa
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T16:30:02Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.123"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T16:30:04Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:weight: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ecb1d143-c845-4757-9a15-56e5f3067ac8"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/tmp/chaosengine.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/mainctrfs/tmp/chaosengine.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/inputs/artifacts"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"input-artifacts"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T16:30:10Z"
    name: boa-1122732311
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: boa
      uid: ecb1d143-c845-4757-9a15-56e5f3067ac8
    resourceVersion: "1601653"
    uid: 570c7e8c-4ccd-44e8-9a6f-3f259558f22f
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: boa
      - name: ARGO_WORKFLOW_UID
        value: ecb1d143-c845-4757-9a15-56e5f3067ac8
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"ecb1d143-c845-4757-9a15-56e5f3067ac8\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name=balancereader\n    appkind: \"deployment\"\n  jobCleanUpPolicy:
          retain\n  engineState: \"active\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n      imagePullPolicy:
          Always\n  experiments:\n    - name: pod-network-loss\n      spec:\n        probe:\n          -
          name: check-frontend-access-url\n            type: httpProbe\n            httpProbe/inputs:\n              url:
          http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          1000\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-1122732311
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /mainctrfs/tmp/chaosengine.yaml
        name: input-artifacts
        subPath: pod-network-loss
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q2dn6
        readOnly: true
    - args:
      - -file=/tmp/chaosengine.yaml
      - -saveName=/tmp/engine-name
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"ecb1d143-c845-4757-9a15-56e5f3067ac8\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name=balancereader\n    appkind: \"deployment\"\n  jobCleanUpPolicy:
          retain\n  engineState: \"active\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n      imagePullPolicy:
          Always\n  experiments:\n    - name: pod-network-loss\n      spec:\n        probe:\n          -
          name: check-frontend-access-url\n            type: httpProbe\n            httpProbe/inputs:\n              url:
          http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          1000\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-1122732311
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-checker:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/chaosengine.yaml
        name: input-artifacts
        subPath: pod-network-loss
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q2dn6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: boa
      - name: ARGO_WORKFLOW_UID
        value: ecb1d143-c845-4757-9a15-56e5f3067ac8
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"ecb1d143-c845-4757-9a15-56e5f3067ac8\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name=balancereader\n    appkind: \"deployment\"\n  jobCleanUpPolicy:
          retain\n  engineState: \"active\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n      imagePullPolicy:
          Always\n  experiments:\n    - name: pod-network-loss\n      spec:\n        probe:\n          -
          name: check-frontend-access-url\n            type: httpProbe\n            httpProbe/inputs:\n              url:
          http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          1000\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-1122732311
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/inputs/artifacts
        name: input-artifacts
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q2dn6
        readOnly: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: input-artifacts
    - name: kube-api-access-q2dn6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:28:55Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:29:59Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:29:59Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:28:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2135dee9c1079ea55aaff02a47d88e07e209879a742e6f9cff08af40bae6f201
      image: docker.io/litmuschaos/litmus-checker:latest
      imageID: docker.io/litmuschaos/litmus-checker@sha256:7f0790b7e3740039378b9a3c604b20214a573c62c3961ab9e66bf35efed3acb1
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://2135dee9c1079ea55aaff02a47d88e07e209879a742e6f9cff08af40bae6f201
          exitCode: 0
          finishedAt: "2023-03-27T16:29:58Z"
          reason: Completed
          startedAt: "2023-03-27T16:28:58Z"
    - containerID: containerd://ad6671cd32be1b7c7c44e8f59e8e1ac3147bc54f5cb90fa82ed86cded96f43a1
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://ad6671cd32be1b7c7c44e8f59e8e1ac3147bc54f5cb90fa82ed86cded96f43a1
          exitCode: 0
          finishedAt: "2023-03-27T16:29:59Z"
          reason: Completed
          startedAt: "2023-03-27T16:28:56Z"
    hostIP: 10.85.149.20
    initContainerStatuses:
    - containerID: containerd://519969fea3a82864632b9bda2b95e3608a7ab6389c4f03a6022c415f28b8a1ee
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://519969fea3a82864632b9bda2b95e3608a7ab6389c4f03a6022c415f28b8a1ee
          exitCode: 0
          finishedAt: "2023-03-27T16:28:54Z"
          reason: Completed
          startedAt: "2023-03-27T16:28:54Z"
    phase: Succeeded
    podIP: 172.30.140.123
    podIPs:
    - ip: 172.30.140.123
    qosClass: BestEffort
    startTime: "2023-03-27T16:28:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 2ff814704b459881df20e550dac3aa2e7622a6600b77ffbd7642d850fc8d4a9c
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: boa-2393994951
      workflows.argoproj.io/node-name: boa[0].install-application
    creationTimestamp: "2023-03-27T16:27:06Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: boa
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T16:27:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.116"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T16:27:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ecb1d143-c845-4757-9a15-56e5f3067ac8"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T16:27:58Z"
    name: boa-2393994951
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: boa
      uid: ecb1d143-c845-4757-9a15-56e5f3067ac8
    resourceVersion: "1601286"
    uid: b6c5e2aa-09e0-4cfb-a1cc-afb3728d0eb1
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: boa
      - name: ARGO_WORKFLOW_UID
        value: ecb1d143-c845-4757-9a15-56e5f3067ac8
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-2393994951
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b6zdm
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=apply
      - -timeout=400
      - -app=bank-of-anthos
      - -scope=cluster
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-2393994951
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b6zdm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-b6zdm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:27:06Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:27:48Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:27:48Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:27:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c72f51738cee9674e238f072a32ace4b36a6c96e3c282c042fab1f01fccd5a4f
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://c72f51738cee9674e238f072a32ace4b36a6c96e3c282c042fab1f01fccd5a4f
          exitCode: 0
          finishedAt: "2023-03-27T16:27:47Z"
          reason: Completed
          startedAt: "2023-03-27T16:27:09Z"
    - containerID: containerd://3a32a7a7a5dfcf5a7ddb823968ff831bfce90953060656782dbbfd033635217f
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://3a32a7a7a5dfcf5a7ddb823968ff831bfce90953060656782dbbfd033635217f
          exitCode: 0
          finishedAt: "2023-03-27T16:27:48Z"
          reason: Completed
          startedAt: "2023-03-27T16:27:08Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.116
    podIPs:
    - ip: 172.30.140.116
    qosClass: BestEffort
    startTime: "2023-03-27T16:27:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: fc5fd9f63530240546101c1ce7a1197bfd47d45ecac24e9da6901080da0f5337
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: boa-357267821
      workflows.argoproj.io/node-name: boa[1].install-chaos-experiments
    creationTimestamp: "2023-03-27T16:27:58Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: boa
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T16:28:43Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.115"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T16:28:44Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ecb1d143-c845-4757-9a15-56e5f3067ac8"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T16:28:50Z"
    name: boa-357267821
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: boa
      uid: ecb1d143-c845-4757-9a15-56e5f3067ac8
    resourceVersion: "1601408"
    uid: 462ff67e-3910-4b2d-a70e-12faa981205b
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: boa
      - name: ARGO_WORKFLOW_UID
        value: ecb1d143-c845-4757-9a15-56e5f3067ac8
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-357267821
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b6685
        readOnly: true
    - args:
      - kubectl apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
        -n litmus ; sleep 30
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-357267821
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b6685
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-b6685
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:27:58Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:28:40Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:28:40Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:27:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a87262ec4d070f0ad7322ee1d2bc3b1cb9b61fdaa545b5cd1f8f98c70f4e5c77
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://a87262ec4d070f0ad7322ee1d2bc3b1cb9b61fdaa545b5cd1f8f98c70f4e5c77
          exitCode: 0
          finishedAt: "2023-03-27T16:28:39Z"
          reason: Completed
          startedAt: "2023-03-27T16:28:04Z"
    - containerID: containerd://c2137e941a9051bca14a6e175e1add85ec07a3bf76af72e68301812d8f75b76d
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://c2137e941a9051bca14a6e175e1add85ec07a3bf76af72e68301812d8f75b76d
          exitCode: 0
          finishedAt: "2023-03-27T16:28:40Z"
          reason: Completed
          startedAt: "2023-03-27T16:28:02Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.115
    podIPs:
    - ip: 172.30.140.115
    qosClass: BestEffort
    startTime: "2023-03-27T16:27:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: d0f1b35039fafb7dfcc1d45b81a7704653aa1c9d1fea149280dd507e85b96310
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: boa-more-timeout-1679933906-143336405
      workflows.argoproj.io/node-name: boa-more-timeout-1679933906[0].install-application
    creationTimestamp: "2023-03-27T16:18:49Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: boa-more-timeout-1679933906
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T16:19:34Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.94"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T16:19:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"56a89df0-c36e-4564-8295-b944a6728452"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T16:19:41Z"
    name: boa-more-timeout-1679933906-143336405
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: boa-more-timeout-1679933906
      uid: 56a89df0-c36e-4564-8295-b944a6728452
    resourceVersion: "1599686"
    uid: c8f7d912-14a0-4ab0-b25e-a64c56b17ab9
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: boa-more-timeout-1679933906
      - name: ARGO_WORKFLOW_UID
        value: 56a89df0-c36e-4564-8295-b944a6728452
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-more-timeout-1679933906-143336405
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nn9hr
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=apply
      - -timeout=400
      - -app=bank-of-anthos
      - -scope=cluster
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-more-timeout-1679933906-143336405
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nn9hr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-nn9hr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:18:49Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:19:31Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:19:31Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:18:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://99d5405fa8e60cfe77769c1f81f4832fafa7f6881782c11bf12dfb99f3354a5c
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://99d5405fa8e60cfe77769c1f81f4832fafa7f6881782c11bf12dfb99f3354a5c
          exitCode: 0
          finishedAt: "2023-03-27T16:19:30Z"
          reason: Completed
          startedAt: "2023-03-27T16:18:52Z"
    - containerID: containerd://a182d08185df84061a41bb5af8e91a0e9054990123d1ea7066ca877ec1ff1ef4
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://a182d08185df84061a41bb5af8e91a0e9054990123d1ea7066ca877ec1ff1ef4
          exitCode: 0
          finishedAt: "2023-03-27T16:19:31Z"
          reason: Completed
          startedAt: "2023-03-27T16:18:51Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.94
    podIPs:
    - ip: 172.30.140.94
    qosClass: BestEffort
    startTime: "2023-03-27T16:18:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: c8190737cc9cdff3b96c5d61965e614f567b946c88543875ce85802908e35b2c
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: boa-more-timeout-1679933906-2132271929
      workflows.argoproj.io/node-name: boa-more-timeout-1679933906[3].revert-chaos
    creationTimestamp: "2023-03-27T16:21:50Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: boa-more-timeout-1679933906
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T16:22:01Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.101"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T16:22:02Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"56a89df0-c36e-4564-8295-b944a6728452"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T16:22:11Z"
    name: boa-more-timeout-1679933906-2132271929
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: boa-more-timeout-1679933906
      uid: 56a89df0-c36e-4564-8295-b944a6728452
    resourceVersion: "1600134"
    uid: 396e601c-4ddc-40e7-bfe5-47fe4f5cc451
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: boa-more-timeout-1679933906
      - name: ARGO_WORKFLOW_UID
        value: 56a89df0-c36e-4564-8295-b944a6728452
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"revert-chaos","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          delete chaosengine -l workflow_run_id=56a89df0-c36e-4564-8295-b944a6728452
          -n litmus"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-more-timeout-1679933906-2132271929
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4n48l
        readOnly: true
    - args:
      - kubectl delete chaosengine -l workflow_run_id=56a89df0-c36e-4564-8295-b944a6728452
        -n litmus
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"revert-chaos","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          delete chaosengine -l workflow_run_id=56a89df0-c36e-4564-8295-b944a6728452
          -n litmus"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-more-timeout-1679933906-2132271929
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4n48l
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-4n48l
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:21:50Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:21:58Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:21:58Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:21:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://23d87258088d052078d25f750eb33ba336864369612e5d8ea713dcfc382ed99c
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://23d87258088d052078d25f750eb33ba336864369612e5d8ea713dcfc382ed99c
          exitCode: 0
          finishedAt: "2023-03-27T16:21:58Z"
          reason: Completed
          startedAt: "2023-03-27T16:21:54Z"
    - containerID: containerd://2e1920e8bf0e6d9e65fcf0b1fac9ec2a229d6fadcf1e4c42b2cafa4f125c2a4f
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://2e1920e8bf0e6d9e65fcf0b1fac9ec2a229d6fadcf1e4c42b2cafa4f125c2a4f
          exitCode: 0
          finishedAt: "2023-03-27T16:21:58Z"
          reason: Completed
          startedAt: "2023-03-27T16:21:53Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.101
    podIPs:
    - ip: 172.30.140.101
    qosClass: BestEffort
    startTime: "2023-03-27T16:21:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 0c65e5409a32c8813fb932a02d9da3444661c80b54054e8f8e2040a012f50b3e
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: boa-more-timeout-1679933906-3445612413
      workflows.argoproj.io/node-name: boa-more-timeout-1679933906[2].pod-network-loss
    creationTimestamp: "2023-03-27T16:20:32Z"
    labels:
      weight: "10"
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: boa-more-timeout-1679933906
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T16:21:43Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.96"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T16:21:44Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:weight: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"56a89df0-c36e-4564-8295-b944a6728452"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/tmp/chaosengine.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/mainctrfs/tmp/chaosengine.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/inputs/artifacts"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"input-artifacts"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T16:21:50Z"
    name: boa-more-timeout-1679933906-3445612413
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: boa-more-timeout-1679933906
      uid: 56a89df0-c36e-4564-8295-b944a6728452
    resourceVersion: "1600057"
    uid: 7c8ee72a-904b-4469-ba53-472fe33188d4
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: boa-more-timeout-1679933906
      - name: ARGO_WORKFLOW_UID
        value: 56a89df0-c36e-4564-8295-b944a6728452
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"56a89df0-c36e-4564-8295-b944a6728452\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name=balancereader\n    appkind: \"deployment\"\n  jobCleanUpPolicy:
          retain\n  engineState: \"active\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n      imagePullPolicy:
          Always\n  experiments:\n    - name: pod-network-loss\n      spec:\n        probe:\n          -
          name: check-frontend-access-url\n            type: httpProbe\n            httpProbe/inputs:\n              url:
          http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          1000\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-more-timeout-1679933906-3445612413
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /mainctrfs/tmp/chaosengine.yaml
        name: input-artifacts
        subPath: pod-network-loss
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wlx8w
        readOnly: true
    - args:
      - -file=/tmp/chaosengine.yaml
      - -saveName=/tmp/engine-name
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"56a89df0-c36e-4564-8295-b944a6728452\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name=balancereader\n    appkind: \"deployment\"\n  jobCleanUpPolicy:
          retain\n  engineState: \"active\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n      imagePullPolicy:
          Always\n  experiments:\n    - name: pod-network-loss\n      spec:\n        probe:\n          -
          name: check-frontend-access-url\n            type: httpProbe\n            httpProbe/inputs:\n              url:
          http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          1000\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-more-timeout-1679933906-3445612413
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-checker:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/chaosengine.yaml
        name: input-artifacts
        subPath: pod-network-loss
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wlx8w
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: boa-more-timeout-1679933906
      - name: ARGO_WORKFLOW_UID
        value: 56a89df0-c36e-4564-8295-b944a6728452
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"56a89df0-c36e-4564-8295-b944a6728452\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name=balancereader\n    appkind: \"deployment\"\n  jobCleanUpPolicy:
          retain\n  engineState: \"active\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n      imagePullPolicy:
          Always\n  experiments:\n    - name: pod-network-loss\n      spec:\n        probe:\n          -
          name: check-frontend-access-url\n            type: httpProbe\n            httpProbe/inputs:\n              url:
          http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          1000\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-more-timeout-1679933906-3445612413
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/inputs/artifacts
        name: input-artifacts
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wlx8w
        readOnly: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: input-artifacts
    - name: kube-api-access-wlx8w
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:20:36Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:21:40Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:21:40Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:20:32Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://55ae1251d16585131490b89d9da40bf7c18069197d2bf75801f11260175e2057
      image: docker.io/litmuschaos/litmus-checker:latest
      imageID: docker.io/litmuschaos/litmus-checker@sha256:7f0790b7e3740039378b9a3c604b20214a573c62c3961ab9e66bf35efed3acb1
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://55ae1251d16585131490b89d9da40bf7c18069197d2bf75801f11260175e2057
          exitCode: 0
          finishedAt: "2023-03-27T16:21:39Z"
          reason: Completed
          startedAt: "2023-03-27T16:20:39Z"
    - containerID: containerd://433439cd9b24935637f12226034e5fbd9767def48b48d2c563f5295c8003c4e3
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://433439cd9b24935637f12226034e5fbd9767def48b48d2c563f5295c8003c4e3
          exitCode: 0
          finishedAt: "2023-03-27T16:21:40Z"
          reason: Completed
          startedAt: "2023-03-27T16:20:37Z"
    hostIP: 10.85.149.20
    initContainerStatuses:
    - containerID: containerd://7cf9b14f1379b1b319e5912068bb11001c1c448f82eaefadf5d94799b42fa710
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://7cf9b14f1379b1b319e5912068bb11001c1c448f82eaefadf5d94799b42fa710
          exitCode: 0
          finishedAt: "2023-03-27T16:20:36Z"
          reason: Completed
          startedAt: "2023-03-27T16:20:36Z"
    phase: Succeeded
    podIP: 172.30.140.96
    podIPs:
    - ip: 172.30.140.96
    qosClass: BestEffort
    startTime: "2023-03-27T16:20:32Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 35de54c1b786e36ca1ef268fd3d946a3eb56c2451340b9288ee2d294c1eaffd4
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: boa-more-timeout-1679933906-3688017723
      workflows.argoproj.io/node-name: boa-more-timeout-1679933906[4].delete-application
    creationTimestamp: "2023-03-27T16:22:11Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: boa-more-timeout-1679933906
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T16:22:28Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.113"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T16:22:29Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"56a89df0-c36e-4564-8295-b944a6728452"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T16:22:31Z"
    name: boa-more-timeout-1679933906-3688017723
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: boa-more-timeout-1679933906
      uid: 56a89df0-c36e-4564-8295-b944a6728452
    resourceVersion: "1600362"
    uid: 89e09eb6-357c-46a8-9f4b-5123ba329a5f
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: boa-more-timeout-1679933906
      - name: ARGO_WORKFLOW_UID
        value: 56a89df0-c36e-4564-8295-b944a6728452
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-more-timeout-1679933906-3688017723
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nv5jt
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=delete
      - -app=bank-of-anthos
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-more-timeout-1679933906-3688017723
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nv5jt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-nv5jt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:22:11Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:22:26Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:22:26Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:22:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a8c49bf81da3abce75038826941effba1323a087ea8288984d8cc3d8e5d37670
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://a8c49bf81da3abce75038826941effba1323a087ea8288984d8cc3d8e5d37670
          exitCode: 0
          finishedAt: "2023-03-27T16:22:25Z"
          reason: Completed
          startedAt: "2023-03-27T16:22:15Z"
    - containerID: containerd://e78d076df5e1d9572902132e39635c24701d2066001a5b94783260fa5cd7de4e
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://e78d076df5e1d9572902132e39635c24701d2066001a5b94783260fa5cd7de4e
          exitCode: 0
          finishedAt: "2023-03-27T16:22:26Z"
          reason: Completed
          startedAt: "2023-03-27T16:22:13Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.113
    podIPs:
    - ip: 172.30.140.113
    qosClass: BestEffort
    startTime: "2023-03-27T16:22:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 196429da2d9f27cb40124fc54d04d268db2c6bd883de105ebd1f5e0ed78f37aa
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: boa-more-timeout-1679933906-616366727
      workflows.argoproj.io/node-name: boa-more-timeout-1679933906[1].install-chaos-experiments
    creationTimestamp: "2023-03-27T16:19:41Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: boa-more-timeout-1679933906
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T16:20:25Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.106"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T16:20:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"56a89df0-c36e-4564-8295-b944a6728452"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T16:20:32Z"
    name: boa-more-timeout-1679933906-616366727
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: boa-more-timeout-1679933906
      uid: 56a89df0-c36e-4564-8295-b944a6728452
    resourceVersion: "1599813"
    uid: 596fa06f-a6e9-4a22-bc28-636b6dc4163e
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: boa-more-timeout-1679933906
      - name: ARGO_WORKFLOW_UID
        value: 56a89df0-c36e-4564-8295-b944a6728452
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-more-timeout-1679933906-616366727
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rmbb2
        readOnly: true
    - args:
      - kubectl apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
        -n litmus ; sleep 30
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: boa-more-timeout-1679933906-616366727
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rmbb2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-rmbb2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:19:41Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:20:22Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:20:22Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:19:41Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1dfa936290102046f4121588f3fc593cf9021b45233a6bff4af17cb50591b98f
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://1dfa936290102046f4121588f3fc593cf9021b45233a6bff4af17cb50591b98f
          exitCode: 0
          finishedAt: "2023-03-27T16:20:21Z"
          reason: Completed
          startedAt: "2023-03-27T16:19:46Z"
    - containerID: containerd://50d0247c9caac82bc52f863e148c776bddd5374f55afbcac1ccaa41557f8f859
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://50d0247c9caac82bc52f863e148c776bddd5374f55afbcac1ccaa41557f8f859
          exitCode: 0
          finishedAt: "2023-03-27T16:20:22Z"
          reason: Completed
          startedAt: "2023-03-27T16:19:45Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.106
    podIPs:
    - ip: 172.30.140.106
    qosClass: BestEffort
    startTime: "2023-03-27T16:19:41Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 9c01567289dfb99a37ccaa269275c9ce2c1efe0184be85de36ad712c96d7d547
      cni.projectcalico.org/podIP: 172.30.140.108/32
      cni.projectcalico.org/podIPs: 172.30.140.108/32
    creationTimestamp: "2023-03-23T08:16:49Z"
    generateName: chaos-exporter-6c9b5988c4-
    labels:
      app: chaos-exporter
      pod-template-hash: 6c9b5988c4
      release: prometheus-stack
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
            f:release: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"7f1b8e92-2d8a-465c-8b96-a28912c7b173"}: {}
        f:spec:
          f:containers:
            k:{"name":"chaos-exporter"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"TSDB_SCRAPE_INTERVAL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.108"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:54Z"
    name: chaos-exporter-6c9b5988c4-lndf8
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: chaos-exporter-6c9b5988c4
      uid: 7f1b8e92-2d8a-465c-8b96-a28912c7b173
    resourceVersion: "863021"
    uid: 9f98b4ef-d43b-4504-a708-cf368eb07ea8
  spec:
    containers:
    - env:
      - name: TSDB_SCRAPE_INTERVAL
        value: "10"
      image: litmuschaos/chaos-exporter:2.14.0
      imagePullPolicy: Always
      name: chaos-exporter
      ports:
      - containerPort: 8080
        name: tcp
        protocol: TCP
      resources:
        limits:
          cpu: 225m
          ephemeral-storage: 1Gi
          memory: 500Mi
        requests:
          cpu: 125m
          ephemeral-storage: 500Mi
          memory: 300Mi
      securityContext:
        allowPrivilegeEscalation: false
        runAsUser: 2000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6kmts
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: litmus-cluster-scope
    serviceAccountName: litmus-cluster-scope
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: kube-api-access-6kmts
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:49Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://679080c99d2f49efdd5f407cb0f695960adbe96f7ba1a7ecea51d8af00d94cfc
      image: docker.io/litmuschaos/chaos-exporter:2.14.0
      imageID: docker.io/litmuschaos/chaos-exporter@sha256:ce4bb3ad1415ad8753460d6c02d40af3b5ee5d7f54e19d2b8d5c89863d29fd96
      lastState: {}
      name: chaos-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-23T08:16:53Z"
    hostIP: 10.85.149.20
    phase: Running
    podIP: 172.30.140.108
    podIPs:
    - ip: 172.30.140.108
    qosClass: Burstable
    startTime: "2023-03-23T08:16:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 47f690464b89d1f292494640037eea9c4dbd527ac343aecb5017db1b0cba6b31
      cni.projectcalico.org/podIP: 172.30.188.190/32
      cni.projectcalico.org/podIPs: 172.30.188.190/32
    creationTimestamp: "2023-03-23T08:16:49Z"
    generateName: chaos-litmus-auth-server-b8dcdf66b-
    labels:
      app.kubernetes.io/component: litmus-auth-server
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: litmus
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: 2.15.10
      helm.sh/chart: litmus-2.15.10
      litmuschaos.io/version: 2.14.0
      pod-template-hash: b8dcdf66b
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:litmuschaos.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"dd754b6f-d49e-46e8-9026-2882d2c135b8"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"auth-server"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"DB_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LITMUS_GQL_GRPC_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LITMUS_GQL_GRPC_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:envFrom: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":3000,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":3030,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"wait-for-mongodb"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.190"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T08:17:26Z"
    name: chaos-litmus-auth-server-b8dcdf66b-gkt5j
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: chaos-litmus-auth-server-b8dcdf66b
      uid: dd754b6f-d49e-46e8-9026-2882d2c135b8
    resourceVersion: "863123"
    uid: cabe5995-237a-4049-845e-ffffcf3c7c82
  spec:
    automountServiceAccountToken: false
    containers:
    - env:
      - name: DB_PASSWORD
        value: superhardpassword
      - name: DB_USER
        value: root
      - name: LITMUS_GQL_GRPC_ENDPOINT
        value: chaos-litmus-server-service
      - name: LITMUS_GQL_GRPC_PORT
        value: :8000
      envFrom:
      - secretRef:
          name: chaos-litmus-admin-secret
      - configMapRef:
          name: chaos-litmus-admin-config
      image: litmuschaos/litmusportal-auth-server:2.14.0
      imagePullPolicy: Always
      name: auth-server
      ports:
      - containerPort: 3030
        name: auth-server
        protocol: TCP
      - containerPort: 3000
        name: auth-rpc-server
        protocol: TCP
      resources:
        limits:
          cpu: 550m
          ephemeral-storage: 1Gi
          memory: 712Mi
        requests:
          cpu: 225m
          ephemeral-storage: 500Mi
          memory: 250Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 2000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - args:
      - while [[ $(curl -sw '%{http_code}' http://chaos-mongodb:27017 -o /dev/null)
        -ne 200 ]]; do sleep 5; echo 'Waiting for the MongoDB to be ready...'; done;
        echo 'Connection with MongoDB established'
      command:
      - /bin/sh
      - -c
      image: litmuschaos/curl:2.14.0
      imagePullPolicy: Always
      name: wait-for-mongodb
      resources:
        limits:
          cpu: 250m
          ephemeral-storage: 1Gi
          memory: 512Mi
        requests:
          cpu: 25m
          ephemeral-storage: 500Mi
          memory: 150Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: litmus-server-account
    serviceAccountName: litmus-server-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:17:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:17:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:17:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://bd96b1d3573da29e05e67810016461092a4184360c5ba76de9a61cd60c1d9065
      image: docker.io/litmuschaos/litmusportal-auth-server:2.14.0
      imageID: docker.io/litmuschaos/litmusportal-auth-server@sha256:77b88bfb6fa4e6a315b6096265646cd10ee210cc31c78dd2bdfb8ea5cbaeb0bb
      lastState: {}
      name: auth-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-23T08:17:26Z"
    hostIP: 10.85.149.8
    initContainerStatuses:
    - containerID: containerd://048775c1d62ddfc80f76add024301a878f41ce96607e6cb8a823b6ecff45ed42
      image: docker.io/litmuschaos/curl:2.14.0
      imageID: docker.io/litmuschaos/curl@sha256:b8c8a8fa772126b681f4b06672130a60d518502497415345e5a1c2af32a32265
      lastState: {}
      name: wait-for-mongodb
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://048775c1d62ddfc80f76add024301a878f41ce96607e6cb8a823b6ecff45ed42
          exitCode: 0
          finishedAt: "2023-03-23T08:17:25Z"
          reason: Completed
          startedAt: "2023-03-23T08:16:53Z"
    phase: Running
    podIP: 172.30.188.190
    podIPs:
    - ip: 172.30.188.190
    qosClass: Burstable
    startTime: "2023-03-23T08:16:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 3d5c01ca5b0a321026383b1fd1b4e6dec8c46b9ed94f986e81f78770a4cb1473
      cni.projectcalico.org/podIP: 172.30.140.105/32
      cni.projectcalico.org/podIPs: 172.30.140.105/32
    creationTimestamp: "2023-03-23T08:16:49Z"
    generateName: chaos-litmus-frontend-6ffc95c884-
    labels:
      app.kubernetes.io/component: litmus-frontend
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: litmus
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: 2.15.10
      helm.sh/chart: litmus-2.15.10
      litmuschaos.io/version: 2.14.0
      pod-template-hash: 6ffc95c884
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:litmuschaos.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"00282446-8ea6-4fcb-9b58-082f00087a97"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"litmusportal-frontend"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/nginx/conf.d/default.conf"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"nginx-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.105"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T08:17:00Z"
    name: chaos-litmus-frontend-6ffc95c884-z8r6p
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: chaos-litmus-frontend-6ffc95c884
      uid: 00282446-8ea6-4fcb-9b58-082f00087a97
    resourceVersion: "863049"
    uid: 57dfb88a-9be2-463f-9ddc-309038197ee1
  spec:
    automountServiceAccountToken: false
    containers:
    - image: litmuschaos/litmusportal-frontend:2.14.0
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /
          port: http
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: litmusportal-frontend
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: http
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 550m
          ephemeral-storage: 1Gi
          memory: 512Mi
        requests:
          cpu: 125m
          ephemeral-storage: 500Mi
          memory: 150Mi
      securityContext:
        allowPrivilegeEscalation: false
        runAsNonRoot: true
        runAsUser: 2000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/nginx/conf.d/default.conf
        name: nginx-config
        subPath: default.conf
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - configMap:
        defaultMode: 420
        name: chaos-litmus-frontend-nginx-configuration
      name: nginx-config
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:49Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:17:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:17:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9756fe8502a0c0b6bfa2c4bac336a43df05f58271494423c4336bec6b9a2eb92
      image: docker.io/litmuschaos/litmusportal-frontend:2.14.0
      imageID: docker.io/litmuschaos/litmusportal-frontend@sha256:3af2c0bbdb6cc54c14f11beef19857f1572354dd976e3ee1319aaec24698a445
      lastState: {}
      name: litmusportal-frontend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-23T08:16:53Z"
    hostIP: 10.85.149.20
    phase: Running
    podIP: 172.30.140.105
    podIPs:
    - ip: 172.30.140.105
    qosClass: Burstable
    startTime: "2023-03-23T08:16:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 06f086e0b20a3ab014cca6ab7ed683c0a4a04182977d3b80b5110046d471138a
      cni.projectcalico.org/podIP: 172.30.140.104/32
      cni.projectcalico.org/podIPs: 172.30.140.104/32
    creationTimestamp: "2023-03-23T08:16:49Z"
    generateName: chaos-litmus-server-585786dd9c-
    labels:
      app.kubernetes.io/component: litmus-server
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: litmus
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: 2.15.10
      helm.sh/chart: litmus-2.15.10
      litmuschaos.io/version: 2.14.0
      pod-template-hash: 585786dd9c
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:litmuschaos.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"7c03e29b-696c-4603-820b-2256304b1baa"}: {}
        f:spec:
          f:containers:
            k:{"name":"graphql-server"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"AGENT_DEPLOYMENTS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_CONTROLLER_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_EXECUTOR_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOS_CENTER_SCOPE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOS_CENTER_UI_ENDPOINT"}:
                  .: {}
                  f:name: {}
                k:{"name":"CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_TRACKER_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HUB_BRANCH_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"INGRESS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"INGRESS_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LITMUS_AUTH_GRPC_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LITMUS_AUTH_GRPC_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LITMUS_CHAOS_EXPORTER_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LITMUS_CHAOS_OPERATOR_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LITMUS_CHAOS_RUNNER_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LITMUS_PORTAL_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"REMOTE_HUB_MAX_SIZE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SELF_AGENT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SELF_AGENT_NODE_SELECTOR"}:
                  .: {}
                  f:name: {}
                k:{"name":"SELF_AGENT_TOLERATIONS"}:
                  .: {}
                  f:name: {}
                k:{"name":"SERVER_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SUBSCRIBER_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TLS_CERT_64"}:
                  .: {}
                  f:name: {}
                k:{"name":"TLS_SECRET_NAME"}:
                  .: {}
                  f:name: {}
                k:{"name":"WORKFLOW_HELPER_IMAGE_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:envFrom: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8000,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/tmp/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/tmp/version"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"wait-for-mongodb"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"gitops-storage"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"hub-storage"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.104"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T08:17:40Z"
    name: chaos-litmus-server-585786dd9c-sxhqk
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: chaos-litmus-server-585786dd9c
      uid: 7c03e29b-696c-4603-820b-2256304b1baa
    resourceVersion: "863168"
    uid: d67b1f63-6c50-44a5-91a1-f544770539b1
  spec:
    containers:
    - env:
      - name: DB_PASSWORD
        value: superhardpassword
      - name: DB_USER
        value: root
      - name: LITMUS_PORTAL_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CHAOS_CENTER_SCOPE
        value: cluster
      - name: SERVER_SERVICE_NAME
        value: chaos-litmus-server-service
      - name: INGRESS
        value: "false"
      - name: INGRESS_NAME
        value: litmus-ingress
      - name: LITMUS_AUTH_GRPC_ENDPOINT
        value: chaos-litmus-auth-server-service
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: ARGO_WORKFLOW_CONTROLLER_IMAGE
        value: litmuschaos/workflow-controller:v3.3.1
      - name: ARGO_WORKFLOW_EXECUTOR_IMAGE
        value: litmuschaos/argoexec:v3.3.1
      - name: EVENT_TRACKER_IMAGE
        value: litmuschaos/litmusportal-event-tracker:2.14.0
      - name: LITMUS_CHAOS_EXPORTER_IMAGE
        value: litmuschaos/chaos-exporter:2.14.0
      - name: LITMUS_CHAOS_OPERATOR_IMAGE
        value: litmuschaos/chaos-operator:2.14.0
      - name: LITMUS_CHAOS_RUNNER_IMAGE
        value: litmuschaos/chaos-runner:2.14.0
      - name: SUBSCRIBER_IMAGE
        value: litmuschaos/litmusportal-subscriber:2.14.0
      - name: AGENT_DEPLOYMENTS
        value: '["app=chaos-exporter", "name=chaos-operator", "app=event-tracker",
          "app=workflow-controller"]'
      - name: CHAOS_CENTER_UI_ENDPOINT
      - name: CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: HUB_BRANCH_NAME
        value: v2.14.x
      - name: LITMUS_AUTH_GRPC_PORT
        value: :3030
      - name: REMOTE_HUB_MAX_SIZE
        value: "5000000"
      - name: SELF_AGENT
        value: "true"
      - name: SELF_AGENT_NODE_SELECTOR
      - name: SELF_AGENT_TOLERATIONS
      - name: TLS_CERT_64
      - name: TLS_SECRET_NAME
      - name: WORKFLOW_HELPER_IMAGE_VERSION
        value: 2.14.0
      envFrom:
      - secretRef:
          name: chaos-litmus-admin-secret
      - configMapRef:
          name: chaos-litmus-admin-config
      image: litmuschaos/litmusportal-server:2.14.0
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /
          port: gql-server
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: graphql-server
      ports:
      - containerPort: 8080
        name: gql-server
        protocol: TCP
      - containerPort: 8000
        name: gql-rpc-server
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: gql-server
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 550m
          ephemeral-storage: 1Gi
          memory: 712Mi
        requests:
          cpu: 225m
          ephemeral-storage: 500Mi
          memory: 250Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 2000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/
        name: gitops-storage
      - mountPath: /tmp/version
        name: hub-storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v4lh7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - args:
      - while [[ $(curl -sw '%{http_code}' http://chaos-mongodb:27017 -o /dev/null)
        -ne 200 ]]; do sleep 5; echo 'Waiting for the MongoDB to be ready...'; done;
        echo 'Connection with MongoDB established'
      command:
      - /bin/sh
      - -c
      image: litmuschaos/curl:2.14.0
      imagePullPolicy: Always
      name: wait-for-mongodb
      resources:
        limits:
          cpu: 250m
          ephemeral-storage: 1Gi
          memory: 512Mi
        requests:
          cpu: 25m
          ephemeral-storage: 500Mi
          memory: 150Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v4lh7
        readOnly: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: litmus-server-account
    serviceAccountName: litmus-server-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: gitops-storage
    - emptyDir: {}
      name: hub-storage
    - name: kube-api-access-v4lh7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:17:22Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:17:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:17:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7df8273d245b0fdddc00eded705d58c79ac0efd33cee686801ccecd9b70dcb5d
      image: docker.io/litmuschaos/litmusportal-server:2.14.0
      imageID: docker.io/litmuschaos/litmusportal-server@sha256:23f6f9f15dbd5816cb27307bd05f4da4bc91287158324f1f08e2d56592ae0118
      lastState: {}
      name: graphql-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-23T08:17:23Z"
    hostIP: 10.85.149.20
    initContainerStatuses:
    - containerID: containerd://e76aca88508483c5a635be545d56a1ce45e796efeeb4caa2bb0ee3c55a480f5c
      image: docker.io/litmuschaos/curl:2.14.0
      imageID: docker.io/litmuschaos/curl@sha256:b8c8a8fa772126b681f4b06672130a60d518502497415345e5a1c2af32a32265
      lastState: {}
      name: wait-for-mongodb
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://e76aca88508483c5a635be545d56a1ce45e796efeeb4caa2bb0ee3c55a480f5c
          exitCode: 0
          finishedAt: "2023-03-23T08:17:20Z"
          reason: Completed
          startedAt: "2023-03-23T08:16:53Z"
    phase: Running
    podIP: 172.30.140.104
    podIPs:
    - ip: 172.30.140.104
    qosClass: Burstable
    startTime: "2023-03-23T08:16:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 168320cd41d5b65069117f8b2b2c7d065df99e479caaeb518cfca27f75e07e29
      cni.projectcalico.org/podIP: 172.30.188.137/32
      cni.projectcalico.org/podIPs: 172.30.188.137/32
      kubectl.kubernetes.io/restartedAt: "2023-03-20T10:36:03+01:00"
    creationTimestamp: "2023-03-23T08:16:49Z"
    generateName: chaos-mongodb-7fcb7c857f-
    labels:
      app.kubernetes.io/component: mongodb
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: mongodb
      helm.sh/chart: mongodb-12.1.11
      pod-template-hash: 7fcb7c857f
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/restartedAt: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8ee3b385-1d72-46c7-bb2d-006db5d155ab"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"mongodb"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"ALLOW_EMPTY_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"BITNAMI_DEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_DISABLE_JAVASCRIPT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_DISABLE_SYSTEM_LOG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_ENABLE_DIRECTORY_PER_DB"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_ENABLE_IPV6"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_ENABLE_JOURNAL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_PORT_NUMBER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_ROOT_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"MONGODB_ROOT_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_SYSTEM_LOG_VERBOSITY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":27017,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/bitnami/mongodb"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/bitnami/scripts"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"common-scripts"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"datadir"}:
              .: {}
              f:name: {}
              f:persistentVolumeClaim:
                .: {}
                f:claimName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.137"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-28T21:49:46Z"
    name: chaos-mongodb-7fcb7c857f-5czwb
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: chaos-mongodb-7fcb7c857f
      uid: 8ee3b385-1d72-46c7-bb2d-006db5d155ab
    resourceVersion: "1800489"
    uid: fde33d57-3d76-4c28-8efc-97505e2fe0e6
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: mongodb
                app.kubernetes.io/instance: chaos
                app.kubernetes.io/name: mongodb
            namespaces:
            - litmus
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - env:
      - name: BITNAMI_DEBUG
        value: "false"
      - name: MONGODB_ROOT_USER
        value: root
      - name: MONGODB_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            key: mongodb-root-password
            name: chaos-mongodb
      - name: ALLOW_EMPTY_PASSWORD
        value: "no"
      - name: MONGODB_SYSTEM_LOG_VERBOSITY
        value: "0"
      - name: MONGODB_DISABLE_SYSTEM_LOG
        value: "no"
      - name: MONGODB_DISABLE_JAVASCRIPT
        value: "no"
      - name: MONGODB_ENABLE_JOURNAL
        value: "yes"
      - name: MONGODB_PORT_NUMBER
        value: "27017"
      - name: MONGODB_ENABLE_IPV6
        value: "no"
      - name: MONGODB_ENABLE_DIRECTORY_PER_DB
        value: "no"
      image: docker.io/bitnami/mongodb:5.0.8-debian-10-r24
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bitnami/scripts/ping-mongodb.sh
        failureThreshold: 6
        initialDelaySeconds: 30
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 10
      name: mongodb
      ports:
      - containerPort: 27017
        name: mongodb
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bitnami/scripts/readiness-probe.sh
        failureThreshold: 6
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /bitnami/mongodb
        name: datadir
      - mountPath: /bitnami/scripts
        name: common-scripts
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vpmrj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
    serviceAccount: chaos-mongodb
    serviceAccountName: chaos-mongodb
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - configMap:
        defaultMode: 360
        name: chaos-mongodb-common-scripts
      name: common-scripts
    - name: datadir
      persistentVolumeClaim:
        claimName: chaos-mongodb
    - name: kube-api-access-vpmrj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:49Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-28T21:49:46Z"
      message: 'containers with unready status: [mongodb]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-28T21:49:46Z"
      message: 'containers with unready status: [mongodb]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a799ac75f7de5cdd275c40c948ac4a8be8d9070f94631694a01ab1362f61f08d
      image: docker.io/bitnami/mongodb:5.0.8-debian-10-r24
      imageID: docker.io/bitnami/mongodb@sha256:8683a10d1e24dcb1053913f6e6acaa8b64001788b76ee8ccb2cd46149e4b50a3
      lastState:
        terminated:
          containerID: containerd://6a94407bedcef1309b938396dfc33cc55fa94775dbc56a0028536baff9173754
          exitCode: 0
          finishedAt: "2023-03-27T15:47:02Z"
          reason: Completed
          startedAt: "2023-03-27T13:36:45Z"
      name: mongodb
      ready: false
      restartCount: 4
      started: true
      state:
        running:
          startedAt: "2023-03-27T15:47:02Z"
    hostIP: 10.85.149.8
    phase: Running
    podIP: 172.30.188.137
    podIPs:
    - ip: 172.30.188.137
    qosClass: BestEffort
    startTime: "2023-03-23T08:16:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: fc243206270ba2af3565693643f6ea4df2661f3b9f09e25b9c5b592cef66f813
      cni.projectcalico.org/podIP: 172.30.188.189/32
      cni.projectcalico.org/podIPs: 172.30.188.189/32
    creationTimestamp: "2023-03-23T08:16:49Z"
    generateName: chaos-operator-ce-84bc885775-
    labels:
      app.kubernetes.io/component: operator
      app.kubernetes.io/managed-by: kubectl
      app.kubernetes.io/name: litmus
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: latest
      name: chaos-operator
      pod-template-hash: 84bc885775
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:name: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"04871a0e-cf60-4e81-8c13-4b1a833d1457"}: {}
        f:spec:
          f:containers:
            k:{"name":"chaos-operator"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CHAOS_RUNNER_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OPERATOR_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"WATCH_NAMESPACE"}:
                  .: {}
                  f:name: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.189"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:55Z"
    name: chaos-operator-ce-84bc885775-r697p
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: chaos-operator-ce-84bc885775
      uid: 04871a0e-cf60-4e81-8c13-4b1a833d1457
    resourceVersion: "863030"
    uid: 0edb3171-82c8-46f6-bb65-578116ab5b13
  spec:
    containers:
    - args:
      - -leader-elect=true
      command:
      - chaos-operator
      env:
      - name: CHAOS_RUNNER_IMAGE
        value: litmuschaos/chaos-runner:2.14.0
      - name: WATCH_NAMESPACE
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: OPERATOR_NAME
        value: chaos-operator
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: litmuschaos/chaos-operator:2.14.0
      imagePullPolicy: Always
      name: chaos-operator
      resources:
        limits:
          cpu: 225m
          ephemeral-storage: 1Gi
          memory: 500Mi
        requests:
          cpu: 125m
          ephemeral-storage: 500Mi
          memory: 300Mi
      securityContext:
        allowPrivilegeEscalation: false
        runAsUser: 2000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rlzmd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: litmus-cluster-scope
    serviceAccountName: litmus-cluster-scope
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: kube-api-access-rlzmd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:50Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9b0eecb63df8be210e40fe1e15c6a7d1bc7584d922ece557b0a6c3380f69f98b
      image: docker.io/litmuschaos/chaos-operator:2.14.0
      imageID: docker.io/litmuschaos/chaos-operator@sha256:69b1a6ff1409fc80cf169503e29d10e049b46108e57436e452e3800f5f911d70
      lastState: {}
      name: chaos-operator
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-23T08:16:55Z"
    hostIP: 10.85.149.8
    phase: Running
    podIP: 172.30.188.189
    podIPs:
    - ip: 172.30.188.189
    qosClass: Burstable
    startTime: "2023-03-23T08:16:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 3f580e4a4ff8b7af8c3bd012357ca6b967d1f8aca8ba79cd2aa673953cc8a57b
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679581040-2041273703
      workflows.argoproj.io/node-name: custom-scenario-1679581040[0].install-application
    creationTimestamp: "2023-03-23T14:17:33Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679581040
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T14:18:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.122"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T14:18:18Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"aebf7f24-7aae-45f0-9ae0-8d2731b3d7ce"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-23T14:18:24Z"
    name: custom-scenario-1679581040-2041273703
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679581040
      uid: aebf7f24-7aae-45f0-9ae0-8d2731b3d7ce
    resourceVersion: "908431"
    uid: 33622565-047c-4206-9063-eabea2be2330
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679581040
      - name: ARGO_WORKFLOW_UID
        value: aebf7f24-7aae-45f0-9ae0-8d2731b3d7ce
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679581040-2041273703
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w4vnl
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=apply
      - -timeout=400
      - -app=bank-of-anthos
      - -scope=cluster
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679581040-2041273703
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w4vnl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-w4vnl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:17:33Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:18:14Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:18:14Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:17:33Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://246060f516391718efef4d35bc2c1585738ae3c136bdbc30ec56df7e7dc0d35d
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://246060f516391718efef4d35bc2c1585738ae3c136bdbc30ec56df7e7dc0d35d
          exitCode: 0
          finishedAt: "2023-03-23T14:18:13Z"
          reason: Completed
          startedAt: "2023-03-23T14:17:36Z"
    - containerID: containerd://e0245e424e245e63a5a78fddccaf6632cc042b3d90f68bb941cfd53eb81477b1
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://e0245e424e245e63a5a78fddccaf6632cc042b3d90f68bb941cfd53eb81477b1
          exitCode: 0
          finishedAt: "2023-03-23T14:18:14Z"
          reason: Completed
          startedAt: "2023-03-23T14:17:34Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.122
    podIPs:
    - ip: 172.30.140.122
    qosClass: BestEffort
    startTime: "2023-03-23T14:17:33Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 1f31ecdff871f0719fabbc93817fab8ebf960e40bda67244e9b286065515cb21
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679581040-2114502714
      workflows.argoproj.io/node-name: custom-scenario-1679581040[1].delete-application
    creationTimestamp: "2023-03-23T14:18:24Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679581040
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T14:18:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.168"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T14:18:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"aebf7f24-7aae-45f0-9ae0-8d2731b3d7ce"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-23T14:18:48Z"
    name: custom-scenario-1679581040-2114502714
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679581040
      uid: aebf7f24-7aae-45f0-9ae0-8d2731b3d7ce
    resourceVersion: "908664"
    uid: d7af6334-7c30-45a3-81c7-9874596a4170
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679581040
      - name: ARGO_WORKFLOW_UID
        value: aebf7f24-7aae-45f0-9ae0-8d2731b3d7ce
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679581040-2114502714
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sqs9v
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=delete
      - -app=bank-of-anthos
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679581040-2114502714
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sqs9v
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-sqs9v
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:18:24Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:18:38Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:18:38Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:18:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://dc58b0e491d67131ec561780d7d5c8568b0a6f547bf4039cf23728a505133abc
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://dc58b0e491d67131ec561780d7d5c8568b0a6f547bf4039cf23728a505133abc
          exitCode: 0
          finishedAt: "2023-03-23T14:18:36Z"
          reason: Completed
          startedAt: "2023-03-23T14:18:27Z"
    - containerID: containerd://de537116c6f5a6ef40523b9754d43a1d400ce7fb5364b58f4004f10d3f60de75
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://de537116c6f5a6ef40523b9754d43a1d400ce7fb5364b58f4004f10d3f60de75
          exitCode: 0
          finishedAt: "2023-03-23T14:18:38Z"
          reason: Completed
          startedAt: "2023-03-23T14:18:25Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.168
    podIPs:
    - ip: 172.30.188.168
    qosClass: BestEffort
    startTime: "2023-03-23T14:18:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: c6d5e24e04e38235e6760b0284eaab675141ad36be4c98936b3b4bbe8f60cb9e
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679582849-2395661755
      workflows.argoproj.io/node-name: custom-scenario-1679582849[0].install-application
    creationTimestamp: "2023-03-23T14:47:37Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679582849
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T14:48:21Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.120"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T14:48:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"bc4f06c9-aba3-486a-b57a-1fabc7418a41"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-23T14:48:29Z"
    name: custom-scenario-1679582849-2395661755
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679582849
      uid: bc4f06c9-aba3-486a-b57a-1fabc7418a41
    resourceVersion: "912439"
    uid: 57bbbe55-720d-48ef-9563-f8f3dcb94a56
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679582849
      - name: ARGO_WORKFLOW_UID
        value: bc4f06c9-aba3-486a-b57a-1fabc7418a41
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679582849-2395661755
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-56dg7
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=apply
      - -timeout=400
      - -app=bank-of-anthos
      - -scope=cluster
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679582849-2395661755
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-56dg7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-56dg7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:47:38Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:48:19Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:48:19Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:47:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8a369573d4ab0b2f6eb6e1f6c9c2b887f15b6bc529035773c1733bce47178762
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://8a369573d4ab0b2f6eb6e1f6c9c2b887f15b6bc529035773c1733bce47178762
          exitCode: 0
          finishedAt: "2023-03-23T14:48:18Z"
          reason: Completed
          startedAt: "2023-03-23T14:47:40Z"
    - containerID: containerd://10eda62080eb495378ac31a1b6a046df8ae1f14cc656dd23abdd6fadb72b39ed
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://10eda62080eb495378ac31a1b6a046df8ae1f14cc656dd23abdd6fadb72b39ed
          exitCode: 0
          finishedAt: "2023-03-23T14:48:19Z"
          reason: Completed
          startedAt: "2023-03-23T14:47:39Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.120
    podIPs:
    - ip: 172.30.140.120
    qosClass: BestEffort
    startTime: "2023-03-23T14:47:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 839597f7f011d06c4e0f161fcccf36b33530acf383a59ed1b2a8cddf0cbb4a3b
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679582849-3242925462
      workflows.argoproj.io/node-name: custom-scenario-1679582849[1].delete-application
    creationTimestamp: "2023-03-23T14:48:29Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679582849
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T14:48:46Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.68"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T14:48:46Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"bc4f06c9-aba3-486a-b57a-1fabc7418a41"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-23T14:48:49Z"
    name: custom-scenario-1679582849-3242925462
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679582849
      uid: bc4f06c9-aba3-486a-b57a-1fabc7418a41
    resourceVersion: "912669"
    uid: c94c1bc0-f1f9-4879-b079-750d11de4982
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679582849
      - name: ARGO_WORKFLOW_UID
        value: bc4f06c9-aba3-486a-b57a-1fabc7418a41
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679582849-3242925462
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qq722
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=delete
      - -app=bank-of-anthos
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679582849-3242925462
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qq722
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-qq722
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:48:29Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:48:43Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:48:43Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T14:48:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f267c0e7789445eac5ed091b7227f9a94a91abd9e6625fcc4c79bb2ee8586280
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://f267c0e7789445eac5ed091b7227f9a94a91abd9e6625fcc4c79bb2ee8586280
          exitCode: 0
          finishedAt: "2023-03-23T14:48:42Z"
          reason: Completed
          startedAt: "2023-03-23T14:48:32Z"
    - containerID: containerd://3d57ddaf8687393bf5002ab9b4f9acdc6aae30beba95e00dacb10636a6631f0d
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://3d57ddaf8687393bf5002ab9b4f9acdc6aae30beba95e00dacb10636a6631f0d
          exitCode: 0
          finishedAt: "2023-03-23T14:48:43Z"
          reason: Completed
          startedAt: "2023-03-23T14:48:31Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.68
    podIPs:
    - ip: 172.30.140.68
    qosClass: BestEffort
    startTime: "2023-03-23T14:48:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: c5aa1c601c16d441367934de59833e875b61c21240da1a3a7fe655b0e166bdcc
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679590371-1341837201
      workflows.argoproj.io/node-name: custom-scenario-1679590371[1].delete-application
    creationTimestamp: "2023-03-23T16:53:46Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679590371
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T16:54:03Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.73"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T16:54:04Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6a108aa3-eca2-436a-9743-002bd17bfc60"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-23T16:54:11Z"
    name: custom-scenario-1679590371-1341837201
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679590371
      uid: 6a108aa3-eca2-436a-9743-002bd17bfc60
    resourceVersion: "927703"
    uid: 6b7eabf9-bb87-4cf0-abab-e55264b7432d
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679590371
      - name: ARGO_WORKFLOW_UID
        value: 6a108aa3-eca2-436a-9743-002bd17bfc60
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679590371-1341837201
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6vrvp
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=delete
      - -app=bank-of-anthos
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679590371-1341837201
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6vrvp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-6vrvp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T16:53:46Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T16:54:01Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T16:54:01Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T16:53:46Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6e156f228c01a4725bb953f28b93bf1fb3440fc24fe20fe405ba8cd88d3d1b38
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://6e156f228c01a4725bb953f28b93bf1fb3440fc24fe20fe405ba8cd88d3d1b38
          exitCode: 0
          finishedAt: "2023-03-23T16:54:00Z"
          reason: Completed
          startedAt: "2023-03-23T16:53:50Z"
    - containerID: containerd://a69309c4baf99bce646f82e32f7246f29a252b69684ee20c81fb7f849f8f9e46
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://a69309c4baf99bce646f82e32f7246f29a252b69684ee20c81fb7f849f8f9e46
          exitCode: 0
          finishedAt: "2023-03-23T16:54:01Z"
          reason: Completed
          startedAt: "2023-03-23T16:53:49Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.73
    podIPs:
    - ip: 172.30.140.73
    qosClass: BestEffort
    startTime: "2023-03-23T16:53:46Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 7046acc815b84e377802d6d1ff555a62f7b3ae35910580180809adce8d01464f
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679590371-2444885274
      workflows.argoproj.io/node-name: custom-scenario-1679590371[0].install-application
    creationTimestamp: "2023-03-23T16:52:55Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679590371
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T16:53:39Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.69"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T16:53:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6a108aa3-eca2-436a-9743-002bd17bfc60"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-23T16:53:46Z"
    name: custom-scenario-1679590371-2444885274
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679590371
      uid: 6a108aa3-eca2-436a-9743-002bd17bfc60
    resourceVersion: "927458"
    uid: b4d6695b-4ade-47c2-af61-d25d0e46cb36
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679590371
      - name: ARGO_WORKFLOW_UID
        value: 6a108aa3-eca2-436a-9743-002bd17bfc60
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679590371-2444885274
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l759f
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=apply
      - -timeout=400
      - -app=bank-of-anthos
      - -scope=cluster
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679590371-2444885274
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l759f
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-l759f
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T16:52:55Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T16:53:36Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T16:53:36Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T16:52:55Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0802f870a4c63834c8944ff6ba88204d80745c51f76e7fd3d32eeecb5d2b7b22
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://0802f870a4c63834c8944ff6ba88204d80745c51f76e7fd3d32eeecb5d2b7b22
          exitCode: 0
          finishedAt: "2023-03-23T16:53:35Z"
          reason: Completed
          startedAt: "2023-03-23T16:52:58Z"
    - containerID: containerd://8065d7510effb0e85e30cf1f00be9c2c2f29d1e771bd7ab845aaf07baf298e87
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://8065d7510effb0e85e30cf1f00be9c2c2f29d1e771bd7ab845aaf07baf298e87
          exitCode: 0
          finishedAt: "2023-03-23T16:53:36Z"
          reason: Completed
          startedAt: "2023-03-23T16:52:57Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.69
    podIPs:
    - ip: 172.30.140.69
    qosClass: BestEffort
    startTime: "2023-03-23T16:52:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: d55a6f7b7a0dc25131be3d82db5da9c2c1de4dabc91585a86d11bbded8133657
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679591857-1737435770
      workflows.argoproj.io/node-name: custom-scenario-1679591857[0].install-application
    creationTimestamp: "2023-03-23T17:17:40Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679591857
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T17:18:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.70"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T17:18:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"1807d5e0-577d-4cfe-919a-983c4f2704a1"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-23T17:18:31Z"
    name: custom-scenario-1679591857-1737435770
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679591857
      uid: 1807d5e0-577d-4cfe-919a-983c4f2704a1
    resourceVersion: "930838"
    uid: 4be1b1ee-78a1-44bf-8087-626666b7677d
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679591857
      - name: ARGO_WORKFLOW_UID
        value: 1807d5e0-577d-4cfe-919a-983c4f2704a1
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679591857-1737435770
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kbt6l
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=apply
      - -timeout=400
      - -app=bank-of-anthos
      - -scope=cluster
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679591857-1737435770
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kbt6l
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-kbt6l
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T17:17:40Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T17:18:20Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T17:18:20Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T17:17:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ad338035e2a8b0825adec9a6ee6fefd814460dcbad8d158b78ea498163ffa0b6
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://ad338035e2a8b0825adec9a6ee6fefd814460dcbad8d158b78ea498163ffa0b6
          exitCode: 0
          finishedAt: "2023-03-23T17:18:20Z"
          reason: Completed
          startedAt: "2023-03-23T17:17:42Z"
    - containerID: containerd://8299d076d5fbcebdb0d1d2730d0ba0e34580c8b24461e6efb76680107992a1bd
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://8299d076d5fbcebdb0d1d2730d0ba0e34580c8b24461e6efb76680107992a1bd
          exitCode: 0
          finishedAt: "2023-03-23T17:18:21Z"
          reason: Completed
          startedAt: "2023-03-23T17:17:41Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.70
    podIPs:
    - ip: 172.30.140.70
    qosClass: BestEffort
    startTime: "2023-03-23T17:17:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 5143aaac5c60a477b981235b51be68d6cf8f6452aaee0b2bc744d7685e5c04ce
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679591857-3363655304
      workflows.argoproj.io/node-name: custom-scenario-1679591857[2].delete-application
    creationTimestamp: "2023-03-23T17:19:19Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679591857
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T17:19:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.78"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T17:19:36Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"1807d5e0-577d-4cfe-919a-983c4f2704a1"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-23T17:19:43Z"
    name: custom-scenario-1679591857-3363655304
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679591857
      uid: 1807d5e0-577d-4cfe-919a-983c4f2704a1
    resourceVersion: "931225"
    uid: bb638247-d2e8-4b4a-a53e-68049a78df1f
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679591857
      - name: ARGO_WORKFLOW_UID
        value: 1807d5e0-577d-4cfe-919a-983c4f2704a1
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679591857-3363655304
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qks8l
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=delete
      - -app=bank-of-anthos
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679591857-3363655304
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qks8l
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-qks8l
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T17:19:19Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T17:19:33Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T17:19:33Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T17:19:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://da9f0209bff3b8abb1e371e1d184925f1efaf876c0c668920445910df18ce7f5
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://da9f0209bff3b8abb1e371e1d184925f1efaf876c0c668920445910df18ce7f5
          exitCode: 0
          finishedAt: "2023-03-23T17:19:33Z"
          reason: Completed
          startedAt: "2023-03-23T17:19:22Z"
    - containerID: containerd://fd8c1151884d9221c274b973af5420de185b782624b529874c85428d021103fd
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://fd8c1151884d9221c274b973af5420de185b782624b529874c85428d021103fd
          exitCode: 0
          finishedAt: "2023-03-23T17:19:33Z"
          reason: Completed
          startedAt: "2023-03-23T17:19:21Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.78
    podIPs:
    - ip: 172.30.140.78
    qosClass: BestEffort
    startTime: "2023-03-23T17:19:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: fcec330ec6c8c61fd8b985868ec61f750da30d9f727b790617c8720efb1ade03
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679591857-4202465832
      workflows.argoproj.io/node-name: custom-scenario-1679591857[1].install-chaos-experiments
    creationTimestamp: "2023-03-23T17:18:31Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679591857
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T17:19:11Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.97"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T17:19:13Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"1807d5e0-577d-4cfe-919a-983c4f2704a1"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-23T17:19:19Z"
    name: custom-scenario-1679591857-4202465832
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679591857
      uid: 1807d5e0-577d-4cfe-919a-983c4f2704a1
    resourceVersion: "930988"
    uid: 9b987b59-c82a-49da-92a4-454800a4fd89
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679591857
      - name: ARGO_WORKFLOW_UID
        value: 1807d5e0-577d-4cfe-919a-983c4f2704a1
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679591857-4202465832
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gvv2r
        readOnly: true
    - args:
      - kubectl apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
        -n litmus ; sleep 30
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679591857-4202465832
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gvv2r
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-gvv2r
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T17:18:31Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T17:19:09Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T17:19:09Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T17:18:31Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://84f6d3e85ad5a2fb36a15bb0b8bf80fcfc6f18d879b3cab92997250da702fd9f
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://84f6d3e85ad5a2fb36a15bb0b8bf80fcfc6f18d879b3cab92997250da702fd9f
          exitCode: 0
          finishedAt: "2023-03-23T17:19:08Z"
          reason: Completed
          startedAt: "2023-03-23T17:18:34Z"
    - containerID: containerd://89dd483971862a68f47e7a97f62bb22525cf470e796e06bdf935aaeb02ae31cf
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://89dd483971862a68f47e7a97f62bb22525cf470e796e06bdf935aaeb02ae31cf
          exitCode: 0
          finishedAt: "2023-03-23T17:19:09Z"
          reason: Completed
          startedAt: "2023-03-23T17:18:33Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.97
    podIPs:
    - ip: 172.30.140.97
    qosClass: BestEffort
    startTime: "2023-03-23T17:18:31Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 51f7e75908fd4fa03f807bc29ba40a9f0ace34d0564e2d01801b71389fa9a180
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679912796-1046800753
      workflows.argoproj.io/node-name: custom-scenario-1679912796[0].install-application
    creationTimestamp: "2023-03-27T10:26:40Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679912796
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T10:27:27Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.84"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T10:27:28Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"a4e4448e-8f0d-4c5c-a9c5-32c078954850"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T10:27:34Z"
    name: custom-scenario-1679912796-1046800753
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679912796
      uid: a4e4448e-8f0d-4c5c-a9c5-32c078954850
    resourceVersion: "1556312"
    uid: b22533d5-022f-429b-90df-9c5ebd57c317
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679912796
      - name: ARGO_WORKFLOW_UID
        value: a4e4448e-8f0d-4c5c-a9c5-32c078954850
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679912796-1046800753
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zvcts
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=apply
      - -timeout=400
      - -app=bank-of-anthos
      - -scope=cluster
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679912796-1046800753
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zvcts
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-zvcts
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:26:40Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:27:24Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:27:24Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:26:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0a55a2b11df861c99d158cb06740e97987a32a8bdd51ea52e17a40620b1722fa
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://0a55a2b11df861c99d158cb06740e97987a32a8bdd51ea52e17a40620b1722fa
          exitCode: 0
          finishedAt: "2023-03-27T10:27:23Z"
          reason: Completed
          startedAt: "2023-03-27T10:26:44Z"
    - containerID: containerd://78bf5976cb6f6b527ae7688571770b3a1308b897075f877085173e86f8cea6de
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://78bf5976cb6f6b527ae7688571770b3a1308b897075f877085173e86f8cea6de
          exitCode: 0
          finishedAt: "2023-03-27T10:27:24Z"
          reason: Completed
          startedAt: "2023-03-27T10:26:42Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.84
    podIPs:
    - ip: 172.30.140.84
    qosClass: BestEffort
    startTime: "2023-03-27T10:26:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 4993a74850ef74926c86ebe83853be423123894eb87bd84942f127c0671c73d5
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679912796-2033607731
      workflows.argoproj.io/node-name: custom-scenario-1679912796[1].install-chaos-experiments
    creationTimestamp: "2023-03-27T10:27:34Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679912796
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T10:28:18Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.102"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T10:28:19Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"a4e4448e-8f0d-4c5c-a9c5-32c078954850"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T10:28:26Z"
    name: custom-scenario-1679912796-2033607731
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679912796
      uid: a4e4448e-8f0d-4c5c-a9c5-32c078954850
    resourceVersion: "1556439"
    uid: 9b36f272-42be-4479-b3c2-fbacae89b1b8
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679912796
      - name: ARGO_WORKFLOW_UID
        value: a4e4448e-8f0d-4c5c-a9c5-32c078954850
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679912796-2033607731
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dnw9j
        readOnly: true
    - args:
      - kubectl apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
        -n litmus ; sleep 30
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679912796-2033607731
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dnw9j
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-dnw9j
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:27:34Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:28:16Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:28:16Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:27:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://88275ef3f3f7995d09c37cfc296df64d93c7e028181ad0a8fac059b6639b3e07
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://88275ef3f3f7995d09c37cfc296df64d93c7e028181ad0a8fac059b6639b3e07
          exitCode: 0
          finishedAt: "2023-03-27T10:28:15Z"
          reason: Completed
          startedAt: "2023-03-27T10:27:40Z"
    - containerID: containerd://682995bc8b88f4ae60aebab3c9a7cd7475d41a270637b6cf670ddee5873b778f
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://682995bc8b88f4ae60aebab3c9a7cd7475d41a270637b6cf670ddee5873b778f
          exitCode: 0
          finishedAt: "2023-03-27T10:28:16Z"
          reason: Completed
          startedAt: "2023-03-27T10:27:38Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.102
    podIPs:
    - ip: 172.30.140.102
    qosClass: BestEffort
    startTime: "2023-03-27T10:27:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 34c687bc9ca6bf26dccb7088ace5d314e54ab10ce175e127df8d167b50fef97d
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679912796-3744388849
      workflows.argoproj.io/node-name: custom-scenario-1679912796[2].delete-application
    creationTimestamp: "2023-03-27T10:28:26Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679912796
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T10:28:44Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.99"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T10:28:44Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"a4e4448e-8f0d-4c5c-a9c5-32c078954850"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T10:28:46Z"
    name: custom-scenario-1679912796-3744388849
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679912796
      uid: a4e4448e-8f0d-4c5c-a9c5-32c078954850
    resourceVersion: "1556671"
    uid: e0759197-7f56-41ae-8a65-0e0f55d1ce24
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679912796
      - name: ARGO_WORKFLOW_UID
        value: a4e4448e-8f0d-4c5c-a9c5-32c078954850
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679912796-3744388849
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qgmv5
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=delete
      - -app=bank-of-anthos
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679912796-3744388849
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qgmv5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-qgmv5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:28:26Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:28:41Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:28:41Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:28:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e462670d04d641dbbcd645bb2eda3576dee553cca9ecbc1aaf09355b7622828e
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://e462670d04d641dbbcd645bb2eda3576dee553cca9ecbc1aaf09355b7622828e
          exitCode: 0
          finishedAt: "2023-03-27T10:28:41Z"
          reason: Completed
          startedAt: "2023-03-27T10:28:30Z"
    - containerID: containerd://8765bfb3eb225b53217e95a7a36e91c97865b50fd0a9af0dba4336bacfd2db3c
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://8765bfb3eb225b53217e95a7a36e91c97865b50fd0a9af0dba4336bacfd2db3c
          exitCode: 0
          finishedAt: "2023-03-27T10:28:41Z"
          reason: Completed
          startedAt: "2023-03-27T10:28:28Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.99
    podIPs:
    - ip: 172.30.140.99
    qosClass: BestEffort
    startTime: "2023-03-27T10:28:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 4ab8eb917cfc85cfaa81b883c55d065def8fb8e68bb3119713591793e6eab0ce
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679914143-1006647351
      workflows.argoproj.io/node-name: custom-scenario-1679914143[0].install-application
    creationTimestamp: "2023-03-27T10:49:07Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679914143
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T10:49:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.94"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T10:49:53Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"78c008bd-df78-4a88-9374-a28fd55b00ab"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T10:49:59Z"
    name: custom-scenario-1679914143-1006647351
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679914143
      uid: 78c008bd-df78-4a88-9374-a28fd55b00ab
    resourceVersion: "1559318"
    uid: 033dc43e-ad99-48cd-bb64-07f53a94982e
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679914143
      - name: ARGO_WORKFLOW_UID
        value: 78c008bd-df78-4a88-9374-a28fd55b00ab
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679914143-1006647351
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p6clg
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=apply
      - -timeout=400
      - -app=bank-of-anthos
      - -scope=cluster
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679914143-1006647351
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p6clg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-p6clg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:49:07Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:49:49Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:49:49Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:49:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8480791afba0637868683b54137988e3e9ccbf735fb7445cbc95aa6fedb1316a
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://8480791afba0637868683b54137988e3e9ccbf735fb7445cbc95aa6fedb1316a
          exitCode: 0
          finishedAt: "2023-03-27T10:49:48Z"
          reason: Completed
          startedAt: "2023-03-27T10:49:10Z"
    - containerID: containerd://80f23d4b85b44205ea01818107cb478c3f2f2dec278b7bb781ca52aeeb838dfb
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://80f23d4b85b44205ea01818107cb478c3f2f2dec278b7bb781ca52aeeb838dfb
          exitCode: 0
          finishedAt: "2023-03-27T10:49:49Z"
          reason: Completed
          startedAt: "2023-03-27T10:49:09Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.94
    podIPs:
    - ip: 172.30.140.94
    qosClass: BestEffort
    startTime: "2023-03-27T10:49:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 0b3971deffc60c3d04af3f4da1443d02199ea620bb2e7400c8f92e67c1e19ed2
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679914143-3934290493
      workflows.argoproj.io/node-name: custom-scenario-1679914143[1].install-chaos-experiments
    creationTimestamp: "2023-03-27T10:49:59Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679914143
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T10:50:44Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.67"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T10:50:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"78c008bd-df78-4a88-9374-a28fd55b00ab"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T10:50:51Z"
    name: custom-scenario-1679914143-3934290493
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679914143
      uid: 78c008bd-df78-4a88-9374-a28fd55b00ab
    resourceVersion: "1559447"
    uid: 9b193ac1-e81e-47b7-841f-122830498cf7
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679914143
      - name: ARGO_WORKFLOW_UID
        value: 78c008bd-df78-4a88-9374-a28fd55b00ab
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679914143-3934290493
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rzl72
        readOnly: true
    - args:
      - kubectl apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
        -n litmus ; sleep 30
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679914143-3934290493
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rzl72
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-rzl72
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:49:59Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:50:41Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:50:41Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:49:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://684531b368c35cca5c7dfa1f52677f09555e80ab28d0450234dcd164c4a978ee
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://684531b368c35cca5c7dfa1f52677f09555e80ab28d0450234dcd164c4a978ee
          exitCode: 0
          finishedAt: "2023-03-27T10:50:40Z"
          reason: Completed
          startedAt: "2023-03-27T10:50:05Z"
    - containerID: containerd://915c27c43a92e37aa163c0c75763325d8131dff83a50599d02edea4168df4377
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://915c27c43a92e37aa163c0c75763325d8131dff83a50599d02edea4168df4377
          exitCode: 0
          finishedAt: "2023-03-27T10:50:41Z"
          reason: Completed
          startedAt: "2023-03-27T10:50:03Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.67
    podIPs:
    - ip: 172.30.140.67
    qosClass: BestEffort
    startTime: "2023-03-27T10:49:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: ecfbcad188108cfa0007daba0ebe7e19e86c4e38964f3cfc200e4ab77b26cc30
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679914143-4286456327
      workflows.argoproj.io/node-name: custom-scenario-1679914143[2].delete-application
    creationTimestamp: "2023-03-27T10:50:51Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679914143
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T10:51:12Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.96"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T10:51:13Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"78c008bd-df78-4a88-9374-a28fd55b00ab"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T10:51:22Z"
    name: custom-scenario-1679914143-4286456327
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679914143
      uid: 78c008bd-df78-4a88-9374-a28fd55b00ab
    resourceVersion: "1559698"
    uid: 0c9d50e6-bbf8-4b34-afb6-501c4028a8eb
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679914143
      - name: ARGO_WORKFLOW_UID
        value: 78c008bd-df78-4a88-9374-a28fd55b00ab
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679914143-4286456327
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vcq8c
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=delete
      - -app=bank-of-anthos
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679914143-4286456327
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vcq8c
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-vcq8c
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:50:51Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:51:09Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:51:09Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T10:50:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://97de57db8c4c4eef3cf85c99b0d3ee41ecba1b3b72f657751a64effdc5c3b001
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://97de57db8c4c4eef3cf85c99b0d3ee41ecba1b3b72f657751a64effdc5c3b001
          exitCode: 0
          finishedAt: "2023-03-27T10:51:08Z"
          reason: Completed
          startedAt: "2023-03-27T10:50:57Z"
    - containerID: containerd://a1dabdebffa04a5b3dda118faf72cfde7fe4821ef80bd0576f473422c1673002
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://a1dabdebffa04a5b3dda118faf72cfde7fe4821ef80bd0576f473422c1673002
          exitCode: 0
          finishedAt: "2023-03-27T10:51:09Z"
          reason: Completed
          startedAt: "2023-03-27T10:50:55Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.96
    podIPs:
    - ip: 172.30.140.96
    qosClass: BestEffort
    startTime: "2023-03-27T10:50:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 780257d19610f55bc6a87a063a6d4b14b234d800aa0d2a34542c8d0c907463b6
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679928716-1718983408
      workflows.argoproj.io/node-name: custom-scenario-1679928716[4].delete-application
    creationTimestamp: "2023-03-27T14:54:45Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679928716
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T14:55:02Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.161"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T14:55:03Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"48b70cff-f2db-4870-83a3-1699570011ad"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T14:55:05Z"
    name: custom-scenario-1679928716-1718983408
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679928716
      uid: 48b70cff-f2db-4870-83a3-1699570011ad
    resourceVersion: "1588010"
    uid: 6ef23816-f6e5-4b35-bd71-446fe4d44972
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679928716
      - name: ARGO_WORKFLOW_UID
        value: 48b70cff-f2db-4870-83a3-1699570011ad
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679928716-1718983408
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bh8vd
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=delete
      - -app=bank-of-anthos
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"delete-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=delete","-app=bank-of-anthos"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679928716-1718983408
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bh8vd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-bh8vd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:54:45Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:54:59Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:54:59Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:54:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9c4e471832b51e7e9603be11083ba1d830454e07c27fa34a8aba109f2a664242
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://9c4e471832b51e7e9603be11083ba1d830454e07c27fa34a8aba109f2a664242
          exitCode: 0
          finishedAt: "2023-03-27T14:54:58Z"
          reason: Completed
          startedAt: "2023-03-27T14:54:48Z"
    - containerID: containerd://c67fa5e6b3e971e20f433b1651015eefd423b99f223e822bc9604175f23e2d65
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://c67fa5e6b3e971e20f433b1651015eefd423b99f223e822bc9604175f23e2d65
          exitCode: 0
          finishedAt: "2023-03-27T14:54:59Z"
          reason: Completed
          startedAt: "2023-03-27T14:54:47Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.161
    podIPs:
    - ip: 172.30.188.161
    qosClass: BestEffort
    startTime: "2023-03-27T14:54:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: ae8f65990974a45bc4d34a205d2fadd64c556045e7f38261c912a91e869d8cd6
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679928716-2200251290
      workflows.argoproj.io/node-name: custom-scenario-1679928716[2].pod-network-loss
    creationTimestamp: "2023-03-27T14:53:08Z"
    labels:
      weight: "10"
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679928716
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T14:54:17Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.131"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T14:54:18Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:weight: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"48b70cff-f2db-4870-83a3-1699570011ad"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/tmp/chaosengine.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/mainctrfs/tmp/chaosengine.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"init"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/argo/inputs/artifacts"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"input-artifacts"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T14:54:25Z"
    name: custom-scenario-1679928716-2200251290
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679928716
      uid: 48b70cff-f2db-4870-83a3-1699570011ad
    resourceVersion: "1587709"
    uid: 40278168-c36c-4040-8865-e03c1682b03e
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679928716
      - name: ARGO_WORKFLOW_UID
        value: 48b70cff-f2db-4870-83a3-1699570011ad
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"48b70cff-f2db-4870-83a3-1699570011ad\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name in (balancereader,transactionhistory)\n    appkind:
          \"deployment\"\n  jobCleanUpPolicy: retain\n  engineState: \"active\"\n  chaosServiceAccount:
          litmus-admin\n  components:\n    runner:\n      imagePullPolicy: Always\n  experiments:\n    -
          name: pod-network-loss\n      spec:\n        probe:\n          - name: check-frontend-access-url\n            type:
          httpProbe\n            httpProbe/inputs:\n              url: http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          2\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679928716-2200251290
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /mainctrfs/tmp/chaosengine.yaml
        name: input-artifacts
        subPath: pod-network-loss
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fjvww
        readOnly: true
    - args:
      - -file=/tmp/chaosengine.yaml
      - -saveName=/tmp/engine-name
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"48b70cff-f2db-4870-83a3-1699570011ad\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name in (balancereader,transactionhistory)\n    appkind:
          \"deployment\"\n  jobCleanUpPolicy: retain\n  engineState: \"active\"\n  chaosServiceAccount:
          litmus-admin\n  components:\n    runner:\n      imagePullPolicy: Always\n  experiments:\n    -
          name: pod-network-loss\n      spec:\n        probe:\n          - name: check-frontend-access-url\n            type:
          httpProbe\n            httpProbe/inputs:\n              url: http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          2\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679928716-2200251290
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-checker:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/chaosengine.yaml
        name: input-artifacts
        subPath: pod-network-loss
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fjvww
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679928716
      - name: ARGO_WORKFLOW_UID
        value: 48b70cff-f2db-4870-83a3-1699570011ad
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: '{"name":"pod-network-loss","inputs":{"artifacts":[{"name":"pod-network-loss","path":"/tmp/chaosengine.yaml","raw":{"data":"apiVersion:
          litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n  generateName: pod-network-loss-chaos\n  namespace:
          litmus\n  labels:\n    context: \"bank_bank-of-anthos\"\n    workflow_run_id:
          \"48b70cff-f2db-4870-83a3-1699570011ad\"\nspec:\n  appinfo:\n    appns:
          \"bank\"\n    applabel: name in (balancereader,transactionhistory)\n    appkind:
          \"deployment\"\n  jobCleanUpPolicy: retain\n  engineState: \"active\"\n  chaosServiceAccount:
          litmus-admin\n  components:\n    runner:\n      imagePullPolicy: Always\n  experiments:\n    -
          name: pod-network-loss\n      spec:\n        probe:\n          - name: check-frontend-access-url\n            type:
          httpProbe\n            httpProbe/inputs:\n              url: http://frontend.bank.svc.cluster.local:80\n              responseTimeout:
          100\n              method:\n                get:\n                  criteria:
          ==\n                  responseCode: \"200\"\n            mode: Continuous\n            runProperties:\n              probeTimeout:
          2\n              interval: 1\n              retry: 2\n        components:\n          env:\n            -
          name: TOTAL_CHAOS_DURATION\n              value: \"90\"\n            - name:
          NETWORK_INTERFACE\n              value: \"eth0\"\n            - name: NETWORK_PACKET_LOSS_PERCENTAGE\n              value:
          \"100\"\n            - name: CONTAINER_RUNTIME\n              value: \"docker\"\n            -
          name: SOCKET_PATH\n              value: \"/var/run/docker.sock\"\n"}}]},"outputs":{},"metadata":{"labels":{"weight":"10"}},"container":{"name":"","image":"litmuschaos/litmus-checker:latest","args":["-file=/tmp/chaosengine.yaml","-saveName=/tmp/engine-name"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679928716-2200251290
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/inputs/artifacts
        name: input-artifacts
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fjvww
        readOnly: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: input-artifacts
    - name: kube-api-access-fjvww
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:53:11Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:54:14Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:54:14Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:53:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://76b7658bf36d08f8a12144740f9057254938c8d50af33050531b911974c6cb56
      image: docker.io/litmuschaos/litmus-checker:latest
      imageID: docker.io/litmuschaos/litmus-checker@sha256:7f0790b7e3740039378b9a3c604b20214a573c62c3961ab9e66bf35efed3acb1
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://76b7658bf36d08f8a12144740f9057254938c8d50af33050531b911974c6cb56
          exitCode: 0
          finishedAt: "2023-03-27T14:54:13Z"
          reason: Completed
          startedAt: "2023-03-27T14:53:13Z"
    - containerID: containerd://5f4be9dab9bdab3502e276384b48d121de116a61b73ee008ae12f3e97c5e5ab2
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://5f4be9dab9bdab3502e276384b48d121de116a61b73ee008ae12f3e97c5e5ab2
          exitCode: 0
          finishedAt: "2023-03-27T14:54:15Z"
          reason: Completed
          startedAt: "2023-03-27T14:53:11Z"
    hostIP: 10.85.149.8
    initContainerStatuses:
    - containerID: containerd://4eebf2335b8aeea31c26aeca16d3a25ac0ada8b4f16300cdaad6b5db18691d1c
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://4eebf2335b8aeea31c26aeca16d3a25ac0ada8b4f16300cdaad6b5db18691d1c
          exitCode: 0
          finishedAt: "2023-03-27T14:53:10Z"
          reason: Completed
          startedAt: "2023-03-27T14:53:10Z"
    phase: Succeeded
    podIP: 172.30.188.131
    podIPs:
    - ip: 172.30.188.131
    qosClass: BestEffort
    startTime: "2023-03-27T14:53:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 3a3a97b2d6ecf31ad22c8bebb960b2f75d96de409b953eb30b35c7df7bdc5dc7
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679928716-2546298652
      workflows.argoproj.io/node-name: custom-scenario-1679928716[0].install-application
    creationTimestamp: "2023-03-27T14:52:00Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679928716
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T14:52:09Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.162"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T14:52:10Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"48b70cff-f2db-4870-83a3-1699570011ad"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T14:52:21Z"
    name: custom-scenario-1679928716-2546298652
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679928716
      uid: 48b70cff-f2db-4870-83a3-1699570011ad
    resourceVersion: "1587345"
    uid: 0ca2f831-6fdf-4041-9c88-32098ebeee1b
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679928716
      - name: ARGO_WORKFLOW_UID
        value: 48b70cff-f2db-4870-83a3-1699570011ad
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679928716-2546298652
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-42x7b
        readOnly: true
    - args:
      - -namespace=bank
      - -typeName=resilient
      - -operation=apply
      - -timeout=400
      - -app=bank-of-anthos
      - -scope=cluster
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-application","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/litmus-app-deployer:latest","args":["-namespace=bank","-typeName=resilient","-operation=apply","-timeout=400","-app=bank-of-anthos","-scope=cluster"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679928716-2546298652
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/litmus-app-deployer:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-42x7b
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-42x7b
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:52:00Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:52:07Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:52:07Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:52:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e046ab4ad8003429cf3d0a8ba39cfa7ce228a443ff3a78e64b2d2b531c2c30dc
      image: docker.io/litmuschaos/litmus-app-deployer:latest
      imageID: docker.io/litmuschaos/litmus-app-deployer@sha256:70f63df863b64efc7c66862b7b492ca79dd3749903507fdb48ed96c72d00e675
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://e046ab4ad8003429cf3d0a8ba39cfa7ce228a443ff3a78e64b2d2b531c2c30dc
          exitCode: 0
          finishedAt: "2023-03-27T14:52:07Z"
          reason: Completed
          startedAt: "2023-03-27T14:52:05Z"
    - containerID: containerd://a0fa89fc669d2cb95b162da0ebbe798eaffbdc8baf1d96c296a8d51647567954
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://a0fa89fc669d2cb95b162da0ebbe798eaffbdc8baf1d96c296a8d51647567954
          exitCode: 0
          finishedAt: "2023-03-27T14:52:07Z"
          reason: Completed
          startedAt: "2023-03-27T14:52:03Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.162
    podIPs:
    - ip: 172.30.188.162
    qosClass: BestEffort
    startTime: "2023-03-27T14:52:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: b4025fda71f7577049aa30f0a744ea6562d3961a78125f3b24464a6d55a7ffd2
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679928716-2819912566
      workflows.argoproj.io/node-name: custom-scenario-1679928716[1].install-chaos-experiments
    creationTimestamp: "2023-03-27T14:52:20Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679928716
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T14:53:00Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.165"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T14:53:01Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"48b70cff-f2db-4870-83a3-1699570011ad"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T14:53:08Z"
    name: custom-scenario-1679928716-2819912566
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679928716
      uid: 48b70cff-f2db-4870-83a3-1699570011ad
    resourceVersion: "1587469"
    uid: 27be5075-c4bf-4fa7-b16f-5b30b37623ff
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679928716
      - name: ARGO_WORKFLOW_UID
        value: 48b70cff-f2db-4870-83a3-1699570011ad
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679928716-2819912566
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hph7f
        readOnly: true
    - args:
      - kubectl apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
        -n litmus ; sleep 30
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"install-chaos-experiments","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          apply -f https://hub.litmuschaos.io/api/chaos/master?file=charts/generic/experiments.yaml
          -n litmus ; sleep 30"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679928716-2819912566
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hph7f
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-hph7f
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:52:21Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:52:58Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:52:58Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:52:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5c2e29a46b703ad33b973225c330ef15e38c5391d227297a2a0eab022345453e
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://5c2e29a46b703ad33b973225c330ef15e38c5391d227297a2a0eab022345453e
          exitCode: 0
          finishedAt: "2023-03-27T14:52:57Z"
          reason: Completed
          startedAt: "2023-03-27T14:52:24Z"
    - containerID: containerd://bd620b7e89cf202107d0639fa3bbe2f27ab7d33cc1fbedc5b316f4fb1fda5982
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://bd620b7e89cf202107d0639fa3bbe2f27ab7d33cc1fbedc5b316f4fb1fda5982
          exitCode: 0
          finishedAt: "2023-03-27T14:52:58Z"
          reason: Completed
          startedAt: "2023-03-27T14:52:23Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.165
    podIPs:
    - ip: 172.30.188.165
    qosClass: BestEffort
    startTime: "2023-03-27T14:52:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 504dd81f958910132a2476a5bdd29f1ced2f04c3f0fabc1a0e9af624ba7606ea
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: custom-scenario-1679928716-3158960610
      workflows.argoproj.io/node-name: custom-scenario-1679928716[3].revert-chaos
    creationTimestamp: "2023-03-27T14:54:25Z"
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/controller-instanceid: 934286c9-b729-4581-92a3-b75e5a29b62f
      workflows.argoproj.io/workflow: custom-scenario-1679928716
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T14:54:34Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.169"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T14:54:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:workflows.argoproj.io/node-id: {}
            f:workflows.argoproj.io/node-name: {}
          f:labels:
            .: {}
            f:workflows.argoproj.io/completed: {}
            f:workflows.argoproj.io/controller-instanceid: {}
            f:workflows.argoproj.io/workflow: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"48b70cff-f2db-4870-83a3-1699570011ad"}: {}
        f:spec:
          f:containers:
            k:{"name":"main"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ARGO_CONTAINER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_CONTAINER_RUNTIME_EXECUTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_DEADLINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INCLUDE_SCRIPT_OUTPUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_INSTANCE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"ARGO_PROGRESS_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_FILE_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_PROGRESS_PATCH_TICK_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_TEMPLATE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ARGO_WORKFLOW_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GODEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/argo"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-run-argo"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: workflow-controller
      operation: Update
      time: "2023-03-27T14:54:45Z"
    name: custom-scenario-1679928716-3158960610
    namespace: litmus
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: custom-scenario-1679928716
      uid: 48b70cff-f2db-4870-83a3-1699570011ad
    resourceVersion: "1587782"
    uid: 685270d9-46a2-4d46-bafa-dd37f289a2dc
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_CONTAINER_RUNTIME_EXECUTOR
        value: k8sapi
      - name: GODEBUG
        value: x509ignoreCN=0
      - name: ARGO_WORKFLOW_NAME
        value: custom-scenario-1679928716
      - name: ARGO_WORKFLOW_UID
        value: 48b70cff-f2db-4870-83a3-1699570011ad
      - name: ARGO_INSTANCE_ID
        value: 934286c9-b729-4581-92a3-b75e5a29b62f
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_TEMPLATE
        value: '{"name":"revert-chaos","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          delete chaosengine -l workflow_run_id=48b70cff-f2db-4870-83a3-1699570011ad
          -n litmus"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679928716-3158960610
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/argoexec:v3.3.1
      imagePullPolicy: IfNotPresent
      name: wait
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gwr2c
        readOnly: true
    - args:
      - kubectl delete chaosengine -l workflow_run_id=48b70cff-f2db-4870-83a3-1699570011ad
        -n litmus
      command:
      - sh
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_TEMPLATE
        value: '{"name":"revert-chaos","inputs":{},"outputs":{},"metadata":{},"container":{"name":"","image":"litmuschaos/k8s:latest","command":["sh","-c"],"args":["kubectl
          delete chaosengine -l workflow_run_id=48b70cff-f2db-4870-83a3-1699570011ad
          -n litmus"],"resources":{}}}'
      - name: ARGO_NODE_ID
        value: custom-scenario-1679928716-3158960610
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: litmuschaos/k8s:latest
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gwr2c
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argo-chaos
    serviceAccountName: argo-chaos
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - name: kube-api-access-gwr2c
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:54:25Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:54:32Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:54:32Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T14:54:25Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://47aaab9649b7918081af82010a0d9f7fea7b8efa0303633d328f9254df912df2
      image: docker.io/litmuschaos/k8s:latest
      imageID: docker.io/litmuschaos/k8s@sha256:cfd7cbf3bb7b29b3268cff12e37c8b96f792bb0a1dc297440700e8259e583c1c
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://47aaab9649b7918081af82010a0d9f7fea7b8efa0303633d328f9254df912df2
          exitCode: 0
          finishedAt: "2023-03-27T14:54:31Z"
          reason: Completed
          startedAt: "2023-03-27T14:54:28Z"
    - containerID: containerd://44ca1de920b68399cbfc7cf8ba50ba324b3814de10cb369e9e5e8dddb3a4c70c
      image: docker.io/litmuschaos/argoexec:v3.3.1
      imageID: docker.io/litmuschaos/argoexec@sha256:d7227ff29b9573f62f3388da4f528cf011f0b52bd8e35633ebd3d025afeae075
      lastState: {}
      name: wait
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://44ca1de920b68399cbfc7cf8ba50ba324b3814de10cb369e9e5e8dddb3a4c70c
          exitCode: 0
          finishedAt: "2023-03-27T14:54:32Z"
          reason: Completed
          startedAt: "2023-03-27T14:54:26Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.169
    podIPs:
    - ip: 172.30.188.169
    qosClass: BestEffort
    startTime: "2023-03-27T14:54:25Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 91bb753bf4c551f8d8045fbae7f3030dd6726fbd5b1c894f0da8501ed105046b
      cni.projectcalico.org/podIP: 172.30.140.95/32
      cni.projectcalico.org/podIPs: 172.30.140.95/32
    creationTimestamp: "2023-03-23T08:16:49Z"
    generateName: debug-pod-55c9b84fb9-
    labels:
      app: debug-pod
      pod-template-hash: 55c9b84fb9
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"bf421729-bae6-470d-ba09-711dcb35c615"}: {}
        f:spec:
          f:containers:
            k:{"name":"debug-pod"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/bitnami/mongodb"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:runAsGroup: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"datadir"}:
              .: {}
              f:name: {}
              f:persistentVolumeClaim:
                .: {}
                f:claimName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.95"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T08:17:06Z"
    name: debug-pod-55c9b84fb9-p7pfl
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: debug-pod-55c9b84fb9
      uid: bf421729-bae6-470d-ba09-711dcb35c615
    resourceVersion: "863068"
    uid: 523ca08b-eb39-4a01-9c05-c11f7cc41bf5
  spec:
    containers:
    - args:
      - -ec
      - while :; do echo .; sleep 5;done
      command:
      - /bin/sh
      image: centos:latest
      imagePullPolicy: Always
      name: debug-pod
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /bitnami/mongodb
        name: datadir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jl4qd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      runAsGroup: 1001
      runAsNonRoot: true
      runAsUser: 1001
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: datadir
      persistentVolumeClaim:
        claimName: chaos-mongodb
    - name: kube-api-access-jl4qd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:50Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:17:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:17:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://21fa0fc2e8fd7c4a61789d206ca93c6ac576280b7207b1ce07a1dd777b603117
      image: docker.io/library/centos:latest
      imageID: docker.io/library/centos@sha256:a27fd8080b517143cbbbab9dfb7c8571c40d67d534bbdee55bd6c473f432b177
      lastState: {}
      name: debug-pod
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-23T08:17:05Z"
    hostIP: 10.85.149.20
    phase: Running
    podIP: 172.30.140.95
    podIPs:
    - ip: 172.30.140.95
    qosClass: BestEffort
    startTime: "2023-03-23T08:16:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 086e4d0acb3ec0eb7110ddb32f45d5c4761bf4aaa1a844c55a50f214374bd01e
      cni.projectcalico.org/podIP: 172.30.188.133/32
      cni.projectcalico.org/podIPs: 172.30.188.133/32
    creationTimestamp: "2023-03-23T08:16:50Z"
    generateName: event-tracker-744b6fd8cf-
    labels:
      app: event-tracker
      pod-template-hash: 744b6fd8cf
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d2d2b583-afa8-40ba-8beb-fc7d429093e2"}: {}
        f:spec:
          f:containers:
            k:{"name":"litmus-event-tracker"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"AGENT_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:envFrom: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.133"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:58Z"
    name: event-tracker-744b6fd8cf-29j4p
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: event-tracker-744b6fd8cf
      uid: d2d2b583-afa8-40ba-8beb-fc7d429093e2
    resourceVersion: "863042"
    uid: 9b401172-dd6e-429a-9db5-f119427e8b3d
  spec:
    containers:
    - env:
      - name: AGENT_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      envFrom:
      - configMapRef:
          name: agent-config
      - secretRef:
          name: agent-secret
      image: litmuschaos/litmusportal-event-tracker:2.14.0
      imagePullPolicy: Always
      name: litmus-event-tracker
      resources:
        limits:
          cpu: 225m
          ephemeral-storage: 1Gi
          memory: 500Mi
        requests:
          cpu: 125m
          ephemeral-storage: 500Mi
          memory: 300Mi
      securityContext:
        allowPrivilegeEscalation: false
        runAsUser: 2000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bxjtl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: event-tracker-sa
    serviceAccountName: event-tracker-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: kube-api-access-bxjtl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:50Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://571b73da84310c0fa0937447cd51b2276d194a4bfbc7014b851b25b8ae698c45
      image: docker.io/litmuschaos/litmusportal-event-tracker:2.14.0
      imageID: docker.io/litmuschaos/litmusportal-event-tracker@sha256:2fb218aa2d8bfebddd78741445d9ef595eef4eed2ac227bc9cd7d26edb511cb8
      lastState: {}
      name: litmus-event-tracker
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-23T08:16:57Z"
    hostIP: 10.85.149.8
    phase: Running
    podIP: 172.30.188.133
    podIPs:
    - ip: 172.30.188.133
    qosClass: Burstable
    startTime: "2023-03-23T08:16:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: b58b5561c2e09d63bda7290848b1b0f98cb2e3d9ec9b48056a0ce03bd723d404
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
    creationTimestamp: "2023-03-27T13:36:30Z"
    labels:
      app: pod-network-loss-chaos9b6k8
      app.kubernetes.io/component: chaos-runner
      app.kubernetes.io/part-of: litmus
      chaosUID: 49b7adf7-8b81-47ab-9d5c-9f7553c12cae
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/part-of: {}
            f:chaosUID: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"49b7adf7-8b81-47ab-9d5c-9f7553c12cae"}: {}
        f:spec:
          f:containers:
            k:{"name":"chaos-runner"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"ANNOTATION_CHECK"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ANNOTATION_KEY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"APP_KIND"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"APP_LABEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"APP_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOS_SVC_ACC"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOSENGINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EXPERIMENT_LIST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: chaos-operator
      operation: Update
      time: "2023-03-27T13:36:30Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T13:37:30Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.120"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T13:37:32Z"
    name: pod-network-loss-chaos9b6k8-runner
    namespace: litmus
    ownerReferences:
    - apiVersion: litmuschaos.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: ChaosEngine
      name: pod-network-loss-chaos9b6k8
      uid: 49b7adf7-8b81-47ab-9d5c-9f7553c12cae
    resourceVersion: "1578979"
    uid: 1c2e65ac-3f3f-4dd1-9e68-3ee9edf57931
  spec:
    containers:
    - env:
      - name: CHAOSENGINE
        value: pod-network-loss-chaos9b6k8
      - name: APP_LABEL
        value: name in (balancereader,transactionhistory)
      - name: APP_KIND
        value: deployment
      - name: APP_NAMESPACE
        value: bank
      - name: EXPERIMENT_LIST
        value: pod-network-loss
      - name: CHAOS_SVC_ACC
        value: litmus-admin
      - name: CHAOS_NAMESPACE
        value: litmus
      - name: ANNOTATION_CHECK
        value: "false"
      - name: ANNOTATION_KEY
        value: litmuschaos.io/chaos
      image: litmuschaos/chaos-runner:2.14.0
      imagePullPolicy: Always
      name: chaos-runner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zmk5b
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: OnFailure
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: litmus-admin
    serviceAccountName: litmus-admin
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: kube-api-access-zmk5b
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:36:30Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:37:29Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:37:29Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:36:30Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4b45e2b1addd46b8303672ca1a7a5238b19d3b81e4380bbd43c578f0dd6c5601
      image: docker.io/litmuschaos/chaos-runner:2.14.0
      imageID: docker.io/litmuschaos/chaos-runner@sha256:a5fcf3f1766975ec6e4730c0aefdf9705af20c67d9ff68372168c8856acba7af
      lastState: {}
      name: chaos-runner
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://4b45e2b1addd46b8303672ca1a7a5238b19d3b81e4380bbd43c578f0dd6c5601
          exitCode: 0
          finishedAt: "2023-03-27T13:37:28Z"
          reason: Completed
          startedAt: "2023-03-27T13:36:34Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.120
    podIPs:
    - ip: 172.30.140.120
    qosClass: BestEffort
    startTime: "2023-03-27T13:36:30Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 4e9a2850c38fa4d5cb14f13ae0ca8393cd48433e791fb0f68a9efa5b86b2ca04
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
    creationTimestamp: "2023-03-27T16:28:58Z"
    labels:
      app: pod-network-loss-chaoslf8hs
      app.kubernetes.io/component: chaos-runner
      app.kubernetes.io/part-of: litmus
      chaosUID: 8cd4258c-5274-4cc2-8187-8273791de517
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/part-of: {}
            f:chaosUID: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8cd4258c-5274-4cc2-8187-8273791de517"}: {}
        f:spec:
          f:containers:
            k:{"name":"chaos-runner"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"ANNOTATION_CHECK"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ANNOTATION_KEY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"APP_KIND"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"APP_LABEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"APP_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOS_SVC_ACC"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOSENGINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EXPERIMENT_LIST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: chaos-operator
      operation: Update
      time: "2023-03-27T16:28:58Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T16:29:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.167"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T16:29:53Z"
    name: pod-network-loss-chaoslf8hs-runner
    namespace: litmus
    ownerReferences:
    - apiVersion: litmuschaos.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: ChaosEngine
      name: pod-network-loss-chaoslf8hs
      uid: 8cd4258c-5274-4cc2-8187-8273791de517
    resourceVersion: "1601611"
    uid: 638ec9e7-02f9-48ac-acf2-eced72afdb8b
  spec:
    containers:
    - env:
      - name: CHAOSENGINE
        value: pod-network-loss-chaoslf8hs
      - name: APP_LABEL
        value: name=balancereader
      - name: APP_KIND
        value: deployment
      - name: APP_NAMESPACE
        value: bank
      - name: EXPERIMENT_LIST
        value: pod-network-loss
      - name: CHAOS_SVC_ACC
        value: litmus-admin
      - name: CHAOS_NAMESPACE
        value: litmus
      - name: ANNOTATION_CHECK
        value: "false"
      - name: ANNOTATION_KEY
        value: litmuschaos.io/chaos
      image: litmuschaos/chaos-runner:2.14.0
      imagePullPolicy: Always
      name: chaos-runner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jsbd9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: OnFailure
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: litmus-admin
    serviceAccountName: litmus-admin
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: kube-api-access-jsbd9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:28:58Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:29:50Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:29:50Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:28:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3dea929606443aaf6c21df56264a064aee6a53a68caf3883d6afbc63abe6061a
      image: docker.io/litmuschaos/chaos-runner:2.14.0
      imageID: docker.io/litmuschaos/chaos-runner@sha256:a5fcf3f1766975ec6e4730c0aefdf9705af20c67d9ff68372168c8856acba7af
      lastState: {}
      name: chaos-runner
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://3dea929606443aaf6c21df56264a064aee6a53a68caf3883d6afbc63abe6061a
          exitCode: 0
          finishedAt: "2023-03-27T16:29:50Z"
          reason: Completed
          startedAt: "2023-03-27T16:29:02Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.167
    podIPs:
    - ip: 172.30.188.167
    qosClass: BestEffort
    startTime: "2023-03-27T16:28:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: e44ae97ab9485d2f64d52f45cd35a1381eaae900e94e777e92437186a524165b
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
    creationTimestamp: "2023-03-27T13:36:35Z"
    generateName: pod-network-loss-pgta7r-
    labels:
      app.kubernetes.io/component: experiment-job
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/runtime-api-usage: "true"
      app.kubernetes.io/version: latest
      chaosUID: 49b7adf7-8b81-47ab-9d5c-9f7553c12cae
      controller-uid: cb100e92-c6bc-43d7-8630-c6d58c32cee8
      job-name: pod-network-loss-pgta7r
      name: pod-network-loss
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/runtime-api-usage: {}
            f:app.kubernetes.io/version: {}
            f:chaosUID: {}
            f:controller-uid: {}
            f:job-name: {}
            f:name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"cb100e92-c6bc-43d7-8630-c6d58c32cee8"}: {}
        f:spec:
          f:containers:
            k:{"name":"pod-network-loss-pgta7r"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ANNOTATION_CHECK"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ANNOTATION_KEY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"APP_KIND"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"APP_LABEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"APP_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOS_SERVICE_ACCOUNT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOS_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOSENGINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CONTAINER_RUNTIME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DESTINATION_HOSTS"}:
                  .: {}
                  f:name: {}
                k:{"name":"DESTINATION_IPS"}:
                  .: {}
                  f:name: {}
                k:{"name":"EXPERIMENT_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"JOB_CLEANUP_POLICY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LIB_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LIB_IMAGE_PULL_POLICY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NETWORK_INTERFACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NETWORK_PACKET_LOSS_PERCENTAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NODE_LABEL"}:
                  .: {}
                  f:name: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"PODS_AFFECTED_PERC"}:
                  .: {}
                  f:name: {}
                k:{"name":"RAMP_TIME"}:
                  .: {}
                  f:name: {}
                k:{"name":"SEQUENCE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SOCKET_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"STATUS_CHECK_DELAY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"STATUS_CHECK_TIMEOUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TARGET_CONTAINER"}:
                  .: {}
                  f:name: {}
                k:{"name":"TARGET_PODS"}:
                  .: {}
                  f:name: {}
                k:{"name":"TC_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TERMINATION_GRACE_PERIOD_SECONDS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TOTAL_CHAOS_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-27T13:36:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T13:37:17Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.166"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T13:37:17Z"
    name: pod-network-loss-pgta7r-s7tcf
    namespace: litmus
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: pod-network-loss-pgta7r
      uid: cb100e92-c6bc-43d7-8630-c6d58c32cee8
    resourceVersion: "1578937"
    uid: a6ca76ae-c44f-4d06-a92d-58def53a393a
  spec:
    containers:
    - args:
      - -c
      - ./experiments -name pod-network-loss
      command:
      - /bin/bash
      env:
      - name: LIB_IMAGE_PULL_POLICY
        value: Always
      - name: TARGET_CONTAINER
      - name: NETWORK_INTERFACE
        value: eth0
      - name: APP_LABEL
        value: name in (balancereader,transactionhistory)
      - name: NETWORK_PACKET_LOSS_PERCENTAGE
        value: "100"
      - name: TOTAL_CHAOS_DURATION
        value: "90"
      - name: NODE_LABEL
      - name: STATUS_CHECK_TIMEOUT
        value: "180"
      - name: CHAOS_SERVICE_ACCOUNT
        value: litmus-admin
      - name: TARGET_PODS
      - name: SOCKET_PATH
        value: /var/run/docker.sock
      - name: JOB_CLEANUP_POLICY
        value: retain
      - name: APP_NAMESPACE
        value: bank
      - name: APP_KIND
        value: deployment
      - name: PODS_AFFECTED_PERC
      - name: DESTINATION_IPS
      - name: DESTINATION_HOSTS
      - name: STATUS_CHECK_DELAY
        value: "2"
      - name: TC_IMAGE
        value: gaiadocker/iproute2
      - name: RAMP_TIME
      - name: CHAOS_NAMESPACE
        value: litmus
      - name: EXPERIMENT_NAME
        value: pod-network-loss
      - name: TERMINATION_GRACE_PERIOD_SECONDS
        value: "0"
      - name: CHAOS_UID
        value: 49b7adf7-8b81-47ab-9d5c-9f7553c12cae
      - name: ANNOTATION_CHECK
        value: "false"
      - name: CHAOSENGINE
        value: pod-network-loss-chaos9b6k8
      - name: ANNOTATION_KEY
        value: litmuschaos.io/chaos
      - name: LIB_IMAGE
        value: litmuschaos/go-runner:latest
      - name: CONTAINER_RUNTIME
        value: docker
      - name: SEQUENCE
        value: parallel
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: litmuschaos/go-runner:latest
      imagePullPolicy: Always
      name: pod-network-loss-pgta7r
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mfwdp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: litmus-admin
    serviceAccountName: litmus-admin
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: kube-api-access-mfwdp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:36:35Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:37:15Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:37:15Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T13:36:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://fe593183633c97ba72b8126c41f8609f78900ca7b73c056a6ef52b1ece91be9f
      image: docker.io/litmuschaos/go-runner:latest
      imageID: docker.io/litmuschaos/go-runner@sha256:8ea284c51d66f2946d7b7bb43fbe5d0ed9cb94dba194e06893798bad3199d05d
      lastState: {}
      name: pod-network-loss-pgta7r
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://fe593183633c97ba72b8126c41f8609f78900ca7b73c056a6ef52b1ece91be9f
          exitCode: 0
          finishedAt: "2023-03-27T13:37:14Z"
          reason: Completed
          startedAt: "2023-03-27T13:37:03Z"
    hostIP: 10.85.149.8
    phase: Succeeded
    podIP: 172.30.188.166
    podIPs:
    - ip: 172.30.188.166
    qosClass: BestEffort
    startTime: "2023-03-27T13:36:35Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 9949509b81047da9188ca48f04662714c2c31ad84a7788fa0c5a6088a91dff12
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
    creationTimestamp: "2023-03-27T16:29:03Z"
    generateName: pod-network-loss-wfc04e-
    labels:
      app.kubernetes.io/component: experiment-job
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/runtime-api-usage: "true"
      app.kubernetes.io/version: latest
      chaosUID: 8cd4258c-5274-4cc2-8187-8273791de517
      controller-uid: e7fdb2b6-dd80-4211-8073-f4e3c2dc657d
      job-name: pod-network-loss-wfc04e
      name: pod-network-loss
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/runtime-api-usage: {}
            f:app.kubernetes.io/version: {}
            f:chaosUID: {}
            f:controller-uid: {}
            f:job-name: {}
            f:name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e7fdb2b6-dd80-4211-8073-f4e3c2dc657d"}: {}
        f:spec:
          f:containers:
            k:{"name":"pod-network-loss-wfc04e"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ANNOTATION_CHECK"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ANNOTATION_KEY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"APP_KIND"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"APP_LABEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"APP_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOS_SERVICE_ACCOUNT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOS_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHAOSENGINE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CONTAINER_RUNTIME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DESTINATION_HOSTS"}:
                  .: {}
                  f:name: {}
                k:{"name":"DESTINATION_IPS"}:
                  .: {}
                  f:name: {}
                k:{"name":"EXPERIMENT_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"JOB_CLEANUP_POLICY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LIB_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LIB_IMAGE_PULL_POLICY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NETWORK_INTERFACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NETWORK_PACKET_LOSS_PERCENTAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NODE_LABEL"}:
                  .: {}
                  f:name: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"PODS_AFFECTED_PERC"}:
                  .: {}
                  f:name: {}
                k:{"name":"RAMP_TIME"}:
                  .: {}
                  f:name: {}
                k:{"name":"SEQUENCE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SOCKET_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"STATUS_CHECK_DELAY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"STATUS_CHECK_TIMEOUT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TARGET_CONTAINER"}:
                  .: {}
                  f:name: {}
                k:{"name":"TARGET_PODS"}:
                  .: {}
                  f:name: {}
                k:{"name":"TC_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TERMINATION_GRACE_PERIOD_SECONDS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TOTAL_CHAOS_DURATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-27T16:29:03Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-27T16:29:43Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.122"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-27T16:29:44Z"
    name: pod-network-loss-wfc04e-n5p5j
    namespace: litmus
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: pod-network-loss-wfc04e
      uid: e7fdb2b6-dd80-4211-8073-f4e3c2dc657d
    resourceVersion: "1601583"
    uid: 4f5db6cc-2363-44c5-aa39-d03b4d70537d
  spec:
    containers:
    - args:
      - -c
      - ./experiments -name pod-network-loss
      command:
      - /bin/bash
      env:
      - name: CHAOS_NAMESPACE
        value: litmus
      - name: LIB_IMAGE
        value: litmuschaos/go-runner:latest
      - name: PODS_AFFECTED_PERC
      - name: TC_IMAGE
        value: gaiadocker/iproute2
      - name: RAMP_TIME
      - name: CHAOSENGINE
        value: pod-network-loss-chaoslf8hs
      - name: CHAOS_UID
        value: 8cd4258c-5274-4cc2-8187-8273791de517
      - name: ANNOTATION_KEY
        value: litmuschaos.io/chaos
      - name: NODE_LABEL
      - name: STATUS_CHECK_DELAY
        value: "2"
      - name: LIB_IMAGE_PULL_POLICY
        value: Always
      - name: TARGET_CONTAINER
      - name: NETWORK_PACKET_LOSS_PERCENTAGE
        value: "100"
      - name: APP_KIND
        value: deployment
      - name: TARGET_PODS
      - name: STATUS_CHECK_TIMEOUT
        value: "180"
      - name: TERMINATION_GRACE_PERIOD_SECONDS
        value: "0"
      - name: CHAOS_SERVICE_ACCOUNT
        value: litmus-admin
      - name: DESTINATION_IPS
      - name: JOB_CLEANUP_POLICY
        value: retain
      - name: ANNOTATION_CHECK
        value: "false"
      - name: NETWORK_INTERFACE
        value: eth0
      - name: SOCKET_PATH
        value: /var/run/docker.sock
      - name: TOTAL_CHAOS_DURATION
        value: "90"
      - name: CONTAINER_RUNTIME
        value: docker
      - name: DESTINATION_HOSTS
      - name: APP_LABEL
        value: name=balancereader
      - name: APP_NAMESPACE
        value: bank
      - name: EXPERIMENT_NAME
        value: pod-network-loss
      - name: SEQUENCE
        value: parallel
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: litmuschaos/go-runner:latest
      imagePullPolicy: Always
      name: pod-network-loss-wfc04e
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v5g8s
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: litmus-admin
    serviceAccountName: litmus-admin
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: kube-api-access-v5g8s
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:29:03Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:29:41Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:29:41Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-27T16:29:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a613a5b4bc23a25c4e836371f9c4ec553e56e3363ed1e6222ad692e0db5c7035
      image: docker.io/litmuschaos/go-runner:latest
      imageID: docker.io/litmuschaos/go-runner@sha256:8ea284c51d66f2946d7b7bb43fbe5d0ed9cb94dba194e06893798bad3199d05d
      lastState: {}
      name: pod-network-loss-wfc04e
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://a613a5b4bc23a25c4e836371f9c4ec553e56e3363ed1e6222ad692e0db5c7035
          exitCode: 0
          finishedAt: "2023-03-27T16:29:40Z"
          reason: Completed
          startedAt: "2023-03-27T16:29:30Z"
    hostIP: 10.85.149.20
    phase: Succeeded
    podIP: 172.30.140.122
    podIPs:
    - ip: 172.30.140.122
    qosClass: BestEffort
    startTime: "2023-03-27T16:29:03Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 6bfd28ce376563b2946851c0d568320e4506aab3d2f28290104e51487cda649a
      cni.projectcalico.org/podIP: 172.30.140.109/32
      cni.projectcalico.org/podIPs: 172.30.140.109/32
    creationTimestamp: "2023-03-23T08:16:50Z"
    generateName: subscriber-686d9b8dd9-
    labels:
      app: subscriber
      pod-template-hash: 686d9b8dd9
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"69fc4480-197d-453c-98bd-7f7fef7f3bf8"}: {}
        f:spec:
          f:containers:
            k:{"name":"subscriber"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"AGENT_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:envFrom: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.140.109"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T08:17:49Z"
    name: subscriber-686d9b8dd9-nbnvl
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: subscriber-686d9b8dd9
      uid: 69fc4480-197d-453c-98bd-7f7fef7f3bf8
    resourceVersion: "863196"
    uid: fdef6beb-1781-43c7-a1bc-161ac2ba26f4
  spec:
    containers:
    - env:
      - name: AGENT_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      envFrom:
      - configMapRef:
          name: agent-config
      - secretRef:
          name: agent-secret
      image: litmuschaos/litmusportal-subscriber:2.14.0
      imagePullPolicy: Always
      name: subscriber
      resources:
        limits:
          cpu: 225m
          ephemeral-storage: 1Gi
          memory: 500Mi
        requests:
          cpu: 125m
          ephemeral-storage: 500Mi
          memory: 300Mi
      securityContext:
        allowPrivilegeEscalation: false
        runAsUser: 2000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v9s66
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.20
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: litmus
    serviceAccountName: litmus
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: kube-api-access-v9s66
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:50Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:17:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:17:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7e5ba49badf2af18be188f99d3acb9092e96d7d2f1929be00c1b2168b22fe676
      image: docker.io/litmuschaos/litmusportal-subscriber:2.14.0
      imageID: docker.io/litmuschaos/litmusportal-subscriber@sha256:59e6dd6db68eb7c85a3886bbf0c044ff4c9cbcd632bbb35fcec1c004152077b3
      lastState:
        terminated:
          containerID: containerd://175bb1d5f366c6ef27f31391ecdbd7eff0f3eb8cdeba53616475d37a689c7df8
          exitCode: 1
          finishedAt: "2023-03-23T08:17:33Z"
          reason: Error
          startedAt: "2023-03-23T08:17:31Z"
      name: subscriber
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2023-03-23T08:17:49Z"
    hostIP: 10.85.149.20
    phase: Running
    podIP: 172.30.140.109
    podIPs:
    - ip: 172.30.140.109
    qosClass: Burstable
    startTime: "2023-03-23T08:16:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 2a836b0e5b1959ec05e1e751495d44255b7d827eca7e4d842e6d8f23482c9e33
      cni.projectcalico.org/podIP: 172.30.188.191/32
      cni.projectcalico.org/podIPs: 172.30.188.191/32
    creationTimestamp: "2023-03-23T08:16:50Z"
    generateName: workflow-controller-768f7d94dc-
    labels:
      app: workflow-controller
      pod-template-hash: 768f7d94dc
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"afee2f90-ed75-4509-aa00-859a26e7c6d3"}: {}
        f:spec:
          f:containers:
            k:{"name":"workflow-controller"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"LEADER_ELECTION_DISABLE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.188.191"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:53Z"
    name: workflow-controller-768f7d94dc-ghwlf
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: workflow-controller-768f7d94dc
      uid: afee2f90-ed75-4509-aa00-859a26e7c6d3
    resourceVersion: "863008"
    uid: 7d4835cb-a31a-4f41-9167-134fde66f4b7
  spec:
    containers:
    - args:
      - --configmap
      - workflow-controller-configmap
      - --executor-image
      - litmuschaos/argoexec:v3.3.1
      - --container-runtime-executor
      - k8sapi
      command:
      - workflow-controller
      env:
      - name: LEADER_ELECTION_DISABLE
        value: "true"
      image: litmuschaos/workflow-controller:v3.3.1
      imagePullPolicy: IfNotPresent
      name: workflow-controller
      resources:
        limits:
          cpu: 225m
          ephemeral-storage: 1Gi
          memory: 500Mi
        requests:
          cpu: 125m
          ephemeral-storage: 500Mi
          memory: 300Mi
      securityContext:
        allowPrivilegeEscalation: false
        runAsUser: 2000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sx7n2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: 10.85.149.8
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argo
    serviceAccountName: argo
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 600
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    volumes:
    - name: kube-api-access-sx7n2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:50Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-23T08:16:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1b91af1f43f1047c03543fcf08e2cb6f2e13b1b399847d7c6768aac15adc862c
      image: docker.io/litmuschaos/workflow-controller:v3.3.1
      imageID: docker.io/litmuschaos/workflow-controller@sha256:054ba49a9b225a3b49a132b7690662d132c7b73aab1084edb24eccf4557b9e6e
      lastState: {}
      name: workflow-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-23T08:16:53Z"
    hostIP: 10.85.149.8
    phase: Running
    podIP: 172.30.188.191
    podIPs:
    - ip: 172.30.188.191
    qosClass: Burstable
    startTime: "2023-03-23T08:16:50Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"accounts-db","tier":"db"},"name":"accounts-db","namespace":"bank-of-anthos"},"spec":{"ports":[{"name":"tcp","port":5432,"protocol":"TCP","targetPort":5432}],"selector":{"app":"accounts-db","tier":"db"}}}
    creationTimestamp: "2023-03-19T10:57:08Z"
    labels:
      app: accounts-db
      tier: db
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:app: {}
            f:tier: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":5432,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: kubectl
      operation: Update
      time: "2023-03-19T10:57:08Z"
    name: accounts-db
    namespace: bank-of-anthos
    resourceVersion: "345414"
    uid: 4bab5735-a207-4aad-a65f-774ab9204f14
  spec:
    clusterIP: 172.21.124.101
    clusterIPs:
    - 172.21.124.101
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      app: accounts-db
      tier: db
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"balancereader","namespace":"bank-of-anthos"},"spec":{"ports":[{"name":"http","port":8080,"targetPort":8080}],"selector":{"app":"balancereader"},"type":"ClusterIP"}}
    creationTimestamp: "2023-03-19T10:57:08Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":8080,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: kubectl
      operation: Update
      time: "2023-03-19T10:57:08Z"
    name: balancereader
    namespace: bank-of-anthos
    resourceVersion: "345427"
    uid: c4ef9ddb-c497-4e71-bf13-b37cdc0f8690
  spec:
    clusterIP: 172.21.152.250
    clusterIPs:
    - 172.21.152.250
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: balancereader
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"contacts","namespace":"bank-of-anthos"},"spec":{"ports":[{"name":"http","port":8080,"targetPort":8080}],"selector":{"app":"contacts"},"type":"ClusterIP"}}
    creationTimestamp: "2023-03-19T10:57:09Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":8080,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: kubectl
      operation: Update
      time: "2023-03-19T10:57:09Z"
    name: contacts
    namespace: bank-of-anthos
    resourceVersion: "345453"
    uid: 64567da8-a6e9-4649-b994-4949175d7ef1
  spec:
    clusterIP: 172.21.4.147
    clusterIPs:
    - 172.21.4.147
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: contacts
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"frontend","namespace":"bank-of-anthos"},"spec":{"ports":[{"name":"http","port":80,"targetPort":8080}],"selector":{"app":"frontend"},"type":"LoadBalancer"}}
    creationTimestamp: "2023-03-19T10:57:09Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:allocateLoadBalancerNodePorts: {}
          f:externalTrafficPolicy: {}
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":80,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: kubectl
      operation: Update
      time: "2023-03-19T10:57:09Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:finalizers:
            .: {}
            v:"service.kubernetes.io/load-balancer-cleanup": {}
        f:status:
          f:loadBalancer:
            f:ingress: {}
      manager: ibm-cloud-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-19T10:57:10Z"
    name: frontend
    namespace: bank-of-anthos
    resourceVersion: "345496"
    uid: 3ae8d4f4-4348-4946-9c22-6c5e824584f9
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 172.21.1.150
    clusterIPs:
    - 172.21.1.150
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      nodePort: 32578
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      app: frontend
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 158.177.65.42
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"ledger-db","namespace":"bank-of-anthos"},"spec":{"ports":[{"name":"tcp","port":5432,"targetPort":5432}],"selector":{"app":"ledger-db"},"type":"ClusterIP"}}
    creationTimestamp: "2023-03-19T10:57:10Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":5432,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: kubectl
      operation: Update
      time: "2023-03-19T10:57:10Z"
    name: ledger-db
    namespace: bank-of-anthos
    resourceVersion: "345502"
    uid: f0e79a61-1e46-4eee-95b7-ea95c91dd43e
  spec:
    clusterIP: 172.21.176.72
    clusterIPs:
    - 172.21.176.72
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      app: ledger-db
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"ledgerwriter","namespace":"bank-of-anthos"},"spec":{"ports":[{"name":"http","port":8080,"targetPort":8080}],"selector":{"app":"ledgerwriter"},"type":"ClusterIP"}}
    creationTimestamp: "2023-03-19T10:57:10Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":8080,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: kubectl
      operation: Update
      time: "2023-03-19T10:57:10Z"
    name: ledgerwriter
    namespace: bank-of-anthos
    resourceVersion: "345537"
    uid: 0e0dcd49-f623-4d19-91b7-9df64cb020f8
  spec:
    clusterIP: 172.21.190.152
    clusterIPs:
    - 172.21.190.152
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ledgerwriter
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"transactionhistory","namespace":"bank-of-anthos"},"spec":{"ports":[{"name":"http","port":8080,"targetPort":8080}],"selector":{"app":"transactionhistory"},"type":"ClusterIP"}}
    creationTimestamp: "2023-03-19T10:57:11Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":8080,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: kubectl
      operation: Update
      time: "2023-03-19T10:57:11Z"
    name: transactionhistory
    namespace: bank-of-anthos
    resourceVersion: "345570"
    uid: 77b94cea-50ad-473a-ba6c-fb681c0f7d7c
  spec:
    clusterIP: 172.21.186.50
    clusterIPs:
    - 172.21.186.50
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: transactionhistory
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"userservice","namespace":"bank-of-anthos"},"spec":{"ports":[{"name":"http","port":8080,"targetPort":8080}],"selector":{"app":"userservice"},"type":"ClusterIP"}}
    creationTimestamp: "2023-03-19T10:57:11Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":8080,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: kubectl
      operation: Update
      time: "2023-03-19T10:57:11Z"
    name: userservice
    namespace: bank-of-anthos
    resourceVersion: "345596"
    uid: 7b8ef517-0416-4748-befe-129bf59df03b
  spec:
    clusterIP: 172.21.29.207
    clusterIPs:
    - 172.21.29.207
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: userservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2023-03-15T09:16:59Z"
    labels:
      component: apiserver
      provider: kubernetes
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:component: {}
            f:provider: {}
        f:spec:
          f:clusterIP: {}
          f:internalTrafficPolicy: {}
          f:ipFamilyPolicy: {}
          f:ports:
            .: {}
            k:{"port":443,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: kube-apiserver
      operation: Update
      time: "2023-03-15T09:16:59Z"
    name: kubernetes
    namespace: default
    resourceVersion: "197"
    uid: 633ca8b5-b067-4917-bfd7-6cf20909f99b
  spec:
    clusterIP: 172.21.0.1
    clusterIPs:
    - 172.21.0.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 2040
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"k8s-app":"calico-typha"},"name":"calico-typha","namespace":"kube-system"},"spec":{"ports":[{"name":"calico-typha","port":5473,"protocol":"TCP","targetPort":"calico-typha"}],"selector":{"k8s-app":"calico-typha"}}}
    creationTimestamp: "2023-03-15T09:19:31Z"
    labels:
      k8s-app: calico-typha
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:k8s-app: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":5473,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2023-03-15T09:19:31Z"
    name: calico-typha
    namespace: kube-system
    resourceVersion: "434"
    uid: 0a562444-14fa-4313-b97c-5d45be9255ae
  spec:
    clusterIP: 172.21.202.99
    clusterIPs:
    - 172.21.202.99
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: calico-typha
      port: 5473
      protocol: TCP
      targetPort: calico-typha
    selector:
      k8s-app: calico-typha
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"dashboard-metrics-scraper"},"name":"dashboard-metrics-scraper","namespace":"kube-system"},"spec":{"ports":[{"port":8000,"targetPort":8000}],"selector":{"k8s-app":"dashboard-metrics-scraper"}}}
    creationTimestamp: "2023-03-15T09:22:45Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: dashboard-metrics-scraper
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:k8s-app: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":8000,"protocol":"TCP"}:
              .: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2023-03-15T09:22:45Z"
    name: dashboard-metrics-scraper
    namespace: kube-system
    resourceVersion: "754"
    uid: ae77c879-53e8-4a83-bbe7-1a07f9738699
  spec:
    clusterIP: 172.21.35.235
    clusterIPs:
    - 172.21.35.235
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      k8s-app: dashboard-metrics-scraper
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      razee.io/build-url: https://travis.ibm.com/alchemy-containers/armada-ingress-microservice/builds/86588613
      razee.io/source-url: https://github.ibm.com/alchemy-containers/armada-ingress-microservice/commit/63c8acfe7100e32794d404a928e175e39c17e440
    creationTimestamp: "2023-03-15T09:34:55Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:razee.io/build-url: {}
            f:razee.io/source-url: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":80,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: armada-ingress-microservice
      operation: Update
      time: "2023-03-15T09:34:55Z"
    name: ibm-k8s-controller-default-backend
    namespace: kube-system
    resourceVersion: "2350"
    uid: d78666d5-df5c-423f-9ea8-216ea5e46e2a
  spec:
    clusterIP: 172.21.126.50
    clusterIPs:
    - 172.21.126.50
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8282
    selector:
      alb-image-type: community
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      razee.io/build-url: https://travis.ibm.com/alchemy-containers/armada-ingress-microservice/builds/86588613
      razee.io/source-url: https://github.ibm.com/alchemy-containers/armada-ingress-microservice/commit/63c8acfe7100e32794d404a928e175e39c17e440
    creationTimestamp: "2023-03-15T09:41:06Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:razee.io/build-url: {}
            f:razee.io/source-url: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":80,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: armada-ingress-microservice
      operation: Update
      time: "2023-03-15T09:41:06Z"
    name: ibm-k8s-controller-health
    namespace: kube-system
    resourceVersion: "2774"
    uid: 0e7aa3ad-4d34-4b40-bb8e-7ddf500e833f
  spec:
    clusterIP: 172.21.161.4
    clusterIPs:
    - 172.21.161.4
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8283
    selector:
      alb-image-type: community
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"prometheus.io/port":"9153","prometheus.io/scrape":"true"},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kube-dns","kubernetes.io/cluster-service":"true","kubernetes.io/name":"CoreDNS"},"name":"kube-dns","namespace":"kube-system"},"spec":{"clusterIP":"172.21.0.10","clusterIPs":["172.21.0.10"],"ports":[{"name":"dns","port":53,"protocol":"UDP"},{"name":"dns-tcp","port":53,"protocol":"TCP"},{"name":"metrics","port":9153,"protocol":"TCP"}],"selector":{"k8s-app":"kube-dns"}}}
      prometheus.io/port: "9153"
      prometheus.io/scrape: "true"
    creationTimestamp: "2023-03-15T09:19:52Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
            f:prometheus.io/port: {}
            f:prometheus.io/scrape: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:k8s-app: {}
            f:kubernetes.io/cluster-service: {}
            f:kubernetes.io/name: {}
        f:spec:
          f:clusterIP: {}
          f:clusterIPs: {}
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":53,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":53,"protocol":"UDP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":9153,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2023-03-15T09:19:52Z"
    name: kube-dns
    namespace: kube-system
    resourceVersion: "522"
    uid: 9b3b2657-c555-4866-9dd6-e4c9802a60f9
  spec:
    clusterIP: 172.21.0.10
    clusterIPs:
    - 172.21.0.10
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kubernetes-dashboard","kubernetes.io/cluster-service":"true"},"name":"kubernetes-dashboard","namespace":"kube-system"},"spec":{"ports":[{"port":443,"targetPort":8443}],"selector":{"k8s-app":"kubernetes-dashboard"}}}
    creationTimestamp: "2023-03-15T09:22:45Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kubernetes-dashboard
      kubernetes.io/cluster-service: "true"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:k8s-app: {}
            f:kubernetes.io/cluster-service: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":443,"protocol":"TCP"}:
              .: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2023-03-15T09:22:45Z"
    name: kubernetes-dashboard
    namespace: kube-system
    resourceVersion: "740"
    uid: 9104e8fe-bd95-48b6-a3ab-1f09ae2e2d31
  spec:
    clusterIP: 172.21.212.24
    clusterIPs:
    - 172.21.212.24
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 443
      protocol: TCP
      targetPort: 8443
    selector:
      k8s-app: kubernetes-dashboard
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.io/cluster-service":"true","kubernetes.io/name":"Metrics-server"},"name":"metrics-server","namespace":"kube-system"},"spec":{"ports":[{"port":443,"protocol":"TCP","targetPort":"https"}],"selector":{"k8s-app":"metrics-server"}}}
    creationTimestamp: "2023-03-15T09:22:45Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: Metrics-server
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:kubernetes.io/cluster-service: {}
            f:kubernetes.io/name: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":443,"protocol":"TCP"}:
              .: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2023-03-15T09:22:45Z"
    name: metrics-server
    namespace: kube-system
    resourceVersion: "790"
    uid: e952a2e2-956a-4191-8d16-37efb4be15b2
  spec:
    clusterIP: 172.21.73.238
    clusterIPs:
    - 172.21.73.238
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 443
      protocol: TCP
      targetPort: https
    selector:
      k8s-app: metrics-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kube-dns","kubernetes.io/cluster-service":"true","kubernetes.io/name":"NodeLocalDNS"},"name":"node-local-dns","namespace":"kube-system"},"spec":{"ports":[{"name":"dns","port":53,"protocol":"UDP","targetPort":53},{"name":"dns-tcp","port":53,"protocol":"TCP","targetPort":53}],"selector":{"k8s-app":"kube-dns"}}}
    creationTimestamp: "2023-03-15T09:19:57Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: NodeLocalDNS
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:k8s-app: {}
            f:kubernetes.io/cluster-service: {}
            f:kubernetes.io/name: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":53,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":53,"protocol":"UDP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2023-03-15T09:19:57Z"
    name: node-local-dns
    namespace: kube-system
    resourceVersion: "529"
    uid: b812f669-873f-440c-a8d0-348f2654c7bb
  spec:
    clusterIP: 172.21.210.167
    clusterIPs:
    - 172.21.210.167
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      razee.io/build-url: https://travis.ibm.com/alchemy-containers/armada-ingress-microservice/builds/86588613
      razee.io/source-url: https://github.ibm.com/alchemy-containers/armada-ingress-microservice/commit/63c8acfe7100e32794d404a928e175e39c17e440
      service.kubernetes.io/ibm-load-balancer-cloud-provider-vlan: "3319718"
      service.kubernetes.io/ibm-load-balancer-cloud-provider-zone: fra02
    creationTimestamp: "2023-03-15T09:41:04Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app: public-crcg8om62f01beu8rudp30-alb1
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:razee.io/build-url: {}
            f:razee.io/source-url: {}
            f:service.kubernetes.io/ibm-load-balancer-cloud-provider-vlan: {}
            f:service.kubernetes.io/ibm-load-balancer-cloud-provider-zone: {}
          f:labels:
            .: {}
            f:app: {}
        f:spec:
          f:allocateLoadBalancerNodePorts: {}
          f:externalTrafficPolicy: {}
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":80,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":443,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: armada-ingress-microservice
      operation: Update
      time: "2023-03-15T09:41:04Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:finalizers:
            .: {}
            v:"service.kubernetes.io/load-balancer-cleanup": {}
        f:status:
          f:loadBalancer:
            f:ingress: {}
      manager: ibm-cloud-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-15T09:41:05Z"
    name: public-crcg8om62f01beu8rudp30-alb1
    namespace: kube-system
    resourceVersion: "2747"
    uid: 95e34b65-3e72-49dc-986e-6d973eec8c0c
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 172.21.178.153
    clusterIPs:
    - 172.21.178.153
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      nodePort: 30680
      port: 80
      protocol: TCP
      targetPort: 80
    - name: https
      nodePort: 31347
      port: 443
      protocol: TCP
      targetPort: 443
    selector:
      app: public-crcg8om62f01beu8rudp30-alb1
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 158.177.65.46
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2023-03-20T09:46:38Z"
    labels:
      app: chaos-exporter
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":8080,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: server
      operation: Update
      time: "2023-03-20T09:46:38Z"
    name: chaos-exporter
    namespace: litmus
    resourceVersion: "427127"
    uid: cc6ffd31-e8c9-4f85-bbdf-3cfbbde439ac
  spec:
    clusterIP: 172.21.22.236
    clusterIPs:
    - 172.21.22.236
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: chaos-exporter
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: chaos
      meta.helm.sh/release-namespace: litmus
    creationTimestamp: "2023-03-19T14:17:35Z"
    labels:
      app.kubernetes.io/component: litmus-auth-server
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: litmus
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: 2.15.10
      helm.sh/chart: litmus-2.15.10
      litmuschaos.io/version: 2.14.0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:litmuschaos.io/version: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":3030,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":9003,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: helm
      operation: Update
      time: "2023-03-19T14:17:35Z"
    name: chaos-litmus-auth-server-service
    namespace: litmus
    resourceVersion: "357911"
    uid: 58b7460b-9690-4262-9591-16d83dd09b97
  spec:
    clusterIP: 172.21.134.48
    clusterIPs:
    - 172.21.134.48
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: auth-server
      port: 9003
      protocol: TCP
      targetPort: 3000
    - name: auth-rpc-server
      port: 3030
      protocol: TCP
      targetPort: 3030
    selector:
      app.kubernetes.io/component: litmus-auth-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: chaos
      meta.helm.sh/release-namespace: litmus
    creationTimestamp: "2023-03-19T14:17:35Z"
    labels:
      app.kubernetes.io/component: litmus-frontend
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: litmus
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: 2.15.10
      helm.sh/chart: litmus-2.15.10
      litmuschaos.io/version: 2.14.0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:litmuschaos.io/version: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":9091,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: helm
      operation: Update
      time: "2023-03-19T14:17:35Z"
    name: chaos-litmus-frontend-service
    namespace: litmus
    resourceVersion: "357909"
    uid: 050a73de-f5ac-42e2-a7e5-c348ff3e1206
  spec:
    clusterIP: 172.21.206.230
    clusterIPs:
    - 172.21.206.230
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 9091
      protocol: TCP
      targetPort: 8080
    selector:
      app.kubernetes.io/component: litmus-frontend
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: chaos
      meta.helm.sh/release-namespace: litmus
    creationTimestamp: "2023-03-19T14:17:35Z"
    labels:
      app.kubernetes.io/component: litmus-server
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: litmus
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: 2.15.10
      helm.sh/chart: litmus-2.15.10
      litmuschaos.io/version: 2.14.0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:litmuschaos.io/version: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":8000,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":9002,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: helm
      operation: Update
      time: "2023-03-19T14:17:35Z"
    name: chaos-litmus-server-service
    namespace: litmus
    resourceVersion: "357906"
    uid: b5932b8e-775a-40ea-afe9-cb8d990de194
  spec:
    clusterIP: 172.21.140.41
    clusterIPs:
    - 172.21.140.41
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: graphql-server
      port: 9002
      protocol: TCP
      targetPort: 8080
    - name: graphql-rpc-server
      port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      app.kubernetes.io/component: litmus-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: chaos
      meta.helm.sh/release-namespace: litmus
    creationTimestamp: "2023-03-19T14:17:35Z"
    labels:
      app.kubernetes.io/component: mongodb
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: mongodb
      helm.sh/chart: mongodb-12.1.11
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":27017,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: helm
      operation: Update
      time: "2023-03-19T14:17:35Z"
    name: chaos-mongodb
    namespace: litmus
    resourceVersion: "357913"
    uid: 2505cda7-ca29-4c91-b6e2-8f89000eea1b
  spec:
    clusterIP: 172.21.151.126
    clusterIPs:
    - 172.21.151.126
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: mongodb
      port: 27017
      protocol: TCP
      targetPort: mongodb
    selector:
      app.kubernetes.io/component: mongodb
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/name: mongodb
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2023-03-20T09:46:40Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":9090,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: server
      operation: Update
      time: "2023-03-20T09:46:40Z"
    name: workflow-controller-metrics
    namespace: litmus
    resourceVersion: "427164"
    uid: 454f36d8-4078-4303-9e3b-b15503af3704
  spec:
    clusterIP: 172.21.193.102
    clusterIPs:
    - 172.21.193.102
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: metrics
      port: 9090
      protocol: TCP
      targetPort: 9090
    selector:
      app: workflow-controller
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "3"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{"deprecated.daemonset.template.generation":"1"},"labels":{"app.kubernetes.io/instance":"logdna-agent","app.kubernetes.io/name":"logdna-agent","app.kubernetes.io/version":"2.2.8"},"name":"logdna-agent","namespace":"ibm-observe"},"spec":{"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"logdna-agent"}},"template":{"metadata":{"labels":{"app":"logdna-agent","app.kubernetes.io/instance":"logdna-agent","app.kubernetes.io/name":"logdna-agent","app.kubernetes.io/version":"2.2.8"}},"spec":{"containers":[{"env":[{"name":"LOGDNA_AGENT_KEY","valueFrom":{"secretKeyRef":{"key":"logdna-agent-key","name":"logdna-agent-key"}}},{"name":"LOGDNA_HOST","value":"logs.eu-de.logging.cloud.ibm.com"},{"name":"POD_APP_LABEL","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.labels['app.kubernetes.io/name']"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"NODE_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}},{"name":"NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"LOGDNA_TAGS","value":"mycluster-fra02-b3c.4x16"},{"name":"LOGDNA_EXCLUDE","value":"/var/log/!(containers)/**,/var/log/containers/*_kube-system_*,/var/log/containers/*_ibm-system_*,/var/log/containers/calico*,/var/log/containers/*ibm-observe_*,/var/log/containerd.log,/var/log/kubelet.log,/var/log/syslog,/var/log/ntpstats/*,/var/log/ibm-cloud-databases-prod"}],"image":"icr.io/ext/logdna-agent:2.2.8","imagePullPolicy":"Always","name":"logdna-agent","resources":{"limits":{"memory":"500Mi"},"requests":{"cpu":"20m"}},"securityContext":{"capabilities":{"add":["DAC_READ_SEARCH"],"drop":["all"]},"privileged":true},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/var/log","name":"varlog"},{"mountPath":"/var/data","name":"vardata"},{"mountPath":"/var/lib/docker/containers","name":"varlibdockercontainers","readOnly":true},{"mountPath":"/mnt","name":"mnt","readOnly":true},{"mountPath":"/etc/os-release","name":"osrelease"},{"mountPath":"/etc/logdna-hostname","name":"logdnahostname"}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"serviceAccount":"logdna-agent","serviceAccountName":"logdna-agent","terminationGracePeriodSeconds":30,"volumes":[{"hostPath":{"path":"/var/log","type":""},"name":"varlog"},{"hostPath":{"path":"/var/data","type":""},"name":"vardata"},{"hostPath":{"path":"/var/lib/docker/containers","type":""},"name":"varlibdockercontainers"},{"hostPath":{"path":"/mnt","type":""},"name":"mnt"},{"hostPath":{"path":"/etc/os-release","type":""},"name":"osrelease"},{"hostPath":{"path":"/etc/hostname","type":""},"name":"logdnahostname"}]}},"updateStrategy":{"rollingUpdate":{"maxSurge":0,"maxUnavailable":"100%"},"type":"RollingUpdate"}}}
    creationTimestamp: "2023-03-15T09:40:40Z"
    generation: 3
    labels:
      app.kubernetes.io/instance: logdna-agent
      app.kubernetes.io/name: logdna-agent
      app.kubernetes.io/version: 2.2.8
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
        f:spec:
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/version: {}
            f:spec:
              f:containers:
                k:{"name":"logdna-agent"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"LOGDNA_AGENT_KEY"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                    k:{"name":"LOGDNA_HOST"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LOGDNA_TAGS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"NODE_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_APP_LABEL"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                  f:securityContext:
                    .: {}
                    f:capabilities:
                      .: {}
                      f:add: {}
                      f:drop: {}
                    f:privileged: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/logdna-hostname"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/os-release"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/mnt"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/data"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/lib/docker/containers"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/log"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"logdnahostname"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"mnt"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"osrelease"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"vardata"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"varlibdockercontainers"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"varlog"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
          f:updateStrategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
      manager: armada-kedge
      operation: Update
      time: "2023-03-15T09:40:40Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deprecated.daemonset.template.generation: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:template:
            f:spec:
              f:containers:
                k:{"name":"logdna-agent"}:
                  f:env:
                    k:{"name":"LOGDNA_EXCLUDE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
      manager: kubectl
      operation: Update
      time: "2023-03-16T08:50:38Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:currentNumberScheduled: {}
          f:desiredNumberScheduled: {}
          f:numberAvailable: {}
          f:numberMisscheduled: {}
          f:numberReady: {}
          f:observedGeneration: {}
          f:updatedNumberScheduled: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-26T18:27:09Z"
    name: logdna-agent
    namespace: ibm-observe
    resourceVersion: "1450223"
    uid: 687b80cc-408d-4d89-8ab4-557e1ce63644
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: logdna-agent
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: logdna-agent
          app.kubernetes.io/instance: logdna-agent
          app.kubernetes.io/name: logdna-agent
          app.kubernetes.io/version: 2.2.8
      spec:
        containers:
        - env:
          - name: LOGDNA_AGENT_KEY
            valueFrom:
              secretKeyRef:
                key: logdna-agent-key
                name: logdna-agent-key
          - name: LOGDNA_HOST
            value: logs.eu-de.logging.cloud.ibm.com
          - name: POD_APP_LABEL
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.labels['app.kubernetes.io/name']
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: LOGDNA_TAGS
            value: mycluster-fra02-b3c.4x16
          - name: LOGDNA_EXCLUDE
            value: /var/log/!(containers)/**,/var/log/containers/*_kube-system_*,/var/log/containers/*_ibm-system_*,/var/log/containers/calico*,/var/log/containers/*ibm-observe_*,/var/log/containerd.log,/var/log/kubelet.log,/var/log/syslog,/var/log/ntpstats/*,/var/log/ibm-cloud-databases-prod
          image: icr.io/ext/logdna-agent:2.2.8
          imagePullPolicy: Always
          name: logdna-agent
          resources:
            limits:
              memory: 500Mi
            requests:
              cpu: 20m
          securityContext:
            capabilities:
              add:
              - DAC_READ_SEARCH
              drop:
              - all
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: varlog
          - mountPath: /var/data
            name: vardata
          - mountPath: /var/lib/docker/containers
            name: varlibdockercontainers
            readOnly: true
          - mountPath: /mnt
            name: mnt
            readOnly: true
          - mountPath: /etc/os-release
            name: osrelease
          - mountPath: /etc/logdna-hostname
            name: logdnahostname
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: logdna-agent
        serviceAccountName: logdna-agent
        terminationGracePeriodSeconds: 30
        volumes:
        - hostPath:
            path: /var/log
            type: ""
          name: varlog
        - hostPath:
            path: /var/data
            type: ""
          name: vardata
        - hostPath:
            path: /var/lib/docker/containers
            type: ""
          name: varlibdockercontainers
        - hostPath:
            path: /mnt
            type: ""
          name: mnt
        - hostPath:
            path: /etc/os-release
            type: ""
          name: osrelease
        - hostPath:
            path: /etc/hostname
            type: ""
          name: logdnahostname
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 100%
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 3
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2023-03-15T09:40:30Z"
    generation: 1
    labels:
      app: sysdig-agent
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deprecated.daemonset.template.generation: {}
          f:labels:
            .: {}
            f:app: {}
        f:spec:
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"sysdig-agent"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"K8S_NODE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/dev/shm"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/modprobe.d"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/podinfo"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/host/boot"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/host/dev"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/host/etc"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/host/lib/modules"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/host/proc"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/host/run"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/host/usr"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/host/var/run"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/opt/draios/etc/kubernetes/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/opt/draios/etc/kubernetes/secrets"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:hostNetwork: {}
              f:hostPID: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"boot-vol"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"dev-vol"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"dshm"}:
                  .: {}
                  f:emptyDir:
                    .: {}
                    f:medium: {}
                  f:name: {}
                k:{"name":"etc-vol"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"modprobe-d"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"modules-vol"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"podinfo"}:
                  .: {}
                  f:downwardAPI:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                  f:name: {}
                k:{"name":"proc-vol"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"run-vol"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"sysdig-agent-config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
                k:{"name":"sysdig-agent-secrets"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"usr-vol"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"varrun-vol"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
          f:updateStrategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
      manager: armada-kedge
      operation: Update
      time: "2023-03-15T09:40:30Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:currentNumberScheduled: {}
          f:desiredNumberScheduled: {}
          f:numberAvailable: {}
          f:numberMisscheduled: {}
          f:numberReady: {}
          f:observedGeneration: {}
          f:updatedNumberScheduled: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-26T18:27:09Z"
    name: sysdig-agent
    namespace: ibm-observe
    resourceVersion: "1450212"
    uid: 0eb0df11-8492-485a-90fb-530c7bcb9ba9
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: sysdig-agent
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: sysdig-agent
      spec:
        containers:
        - env:
          - name: K8S_NODE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: icr.io/ext/sysdig/agent
          imagePullPolicy: Always
          name: sysdig-agent
          readinessProbe:
            exec:
              command:
              - test
              - -e
              - /opt/draios/logs/running
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: "1"
              memory: 1Gi
          securityContext:
            privileged: true
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/modprobe.d
            name: modprobe-d
            readOnly: true
          - mountPath: /host/etc
            name: etc-vol
            readOnly: true
          - mountPath: /host/dev
            name: dev-vol
          - mountPath: /host/proc
            name: proc-vol
            readOnly: true
          - mountPath: /host/boot
            name: boot-vol
            readOnly: true
          - mountPath: /host/lib/modules
            name: modules-vol
            readOnly: true
          - mountPath: /host/usr
            name: usr-vol
            readOnly: true
          - mountPath: /host/run
            name: run-vol
          - mountPath: /host/var/run
            name: varrun-vol
          - mountPath: /dev/shm
            name: dshm
          - mountPath: /opt/draios/etc/kubernetes/config
            name: sysdig-agent-config
          - mountPath: /opt/draios/etc/kubernetes/secrets
            name: sysdig-agent-secrets
          - mountPath: /etc/podinfo
            name: podinfo
        dnsPolicy: ClusterFirstWithHostNet
        hostNetwork: true
        hostPID: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: sysdig-agent
        serviceAccountName: sysdig-agent
        terminationGracePeriodSeconds: 5
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        - effect: NoSchedule
          key: node-role.kubernetes.io/controlplane
          operator: Equal
          value: "true"
        - effect: NoExecute
          key: node-role.kubernetes.io/etcd
          operator: Equal
          value: "true"
        volumes:
        - hostPath:
            path: /etc/modprobe.d
            type: ""
          name: modprobe-d
        - emptyDir:
            medium: Memory
          name: dshm
        - hostPath:
            path: /etc
            type: ""
          name: etc-vol
        - hostPath:
            path: /dev
            type: ""
          name: dev-vol
        - hostPath:
            path: /proc
            type: ""
          name: proc-vol
        - hostPath:
            path: /boot
            type: ""
          name: boot-vol
        - hostPath:
            path: /lib/modules
            type: ""
          name: modules-vol
        - hostPath:
            path: /usr
            type: ""
          name: usr-vol
        - hostPath:
            path: /run
            type: ""
          name: run-vol
        - hostPath:
            path: /var/run
            type: ""
          name: varrun-vol
        - configMap:
            defaultMode: 420
            name: sysdig-agent
            optional: true
          name: sysdig-agent-config
        - name: sysdig-agent-secrets
          secret:
            defaultMode: 420
            secretName: sysdig-agent
        - downwardAPI:
            defaultMode: 420
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
              path: name
          name: podinfo
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"k8s-app":"calico-node"},"name":"calico-node","namespace":"kube-system"},"spec":{"minReadySeconds":30,"selector":{"matchLabels":{"k8s-app":"calico-node"}},"template":{"metadata":{"labels":{"k8s-app":"calico-node"}},"spec":{"containers":[{"env":[{"name":"DATASTORE_TYPE","value":"kubernetes"},{"name":"FELIX_TYPHAK8SSERVICENAME","valueFrom":{"configMapKeyRef":{"key":"typha_service_name","name":"calico-config"}}},{"name":"WAIT_FOR_DATASTORE","value":"true"},{"name":"NODENAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"CALICO_NETWORKING_BACKEND","valueFrom":{"configMapKeyRef":{"key":"calico_backend","name":"calico-config"}}},{"name":"CLUSTER_TYPE","value":"k8s,bgp"},{"name":"IP","value":"autodetect"},{"name":"CALICO_IPV4POOL_IPIP","value":"CrossSubnet"},{"name":"FELIX_IPINIPMTU","valueFrom":{"configMapKeyRef":{"key":"veth_mtu","name":"calico-config"}}},{"name":"CALICO_IPV4POOL_CIDR","value":"172.30.0.0/16"},{"name":"CALICO_DISABLE_FILE_LOGGING","value":"true"},{"name":"FELIX_DEFAULTENDPOINTTOHOSTACTION","value":"ACCEPT"},{"name":"FELIX_IPV6SUPPORT","value":"false"},{"name":"FELIX_IPTABLESREFRESHINTERVAL","value":"60"},{"name":"FELIX_PROMETHEUSMETRICSENABLED","value":"true"},{"name":"FELIX_PROMETHEUSMETRICSPORT","value":"9091"},{"name":"FELIX_FAILSAFEINBOUNDHOSTPORTS","value":"none"},{"name":"FELIX_FAILSAFEOUTBOUNDHOSTPORTS","value":"none"},{"name":"IP_AUTODETECTION_METHOD","value":"interface=(^bond0$|^eth0$|^ens.*$|^enc.*$)"},{"name":"FELIX_HEALTHENABLED","value":"true"},{"name":"FELIX_USAGEREPORTINGENABLED","value":"false"}],"envFrom":[{"configMapRef":{"name":"kubernetes-services-endpoint","optional":true}}],"image":"de.icr.io/armada-master/calico/node:v3.24.5","imagePullPolicy":"IfNotPresent","lifecycle":{"preStop":{"exec":{"command":["/bin/calico-node","-shutdown"]}}},"livenessProbe":{"exec":{"command":["/bin/calico-node","-felix-live","-bird-live"]},"failureThreshold":6,"initialDelaySeconds":10,"periodSeconds":10,"timeoutSeconds":10},"name":"calico-node","readinessProbe":{"exec":{"command":["/bin/calico-node","-felix-ready","-bird-ready"]},"failureThreshold":3,"initialDelaySeconds":60,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":10},"resources":{"requests":{"cpu":"250m","memory":"90Mi"}},"securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/host/etc/cni/net.d","name":"cni-net-dir","readOnly":false},{"mountPath":"/lib/modules","name":"lib-modules","readOnly":true},{"mountPath":"/run/xtables.lock","name":"xtables-lock","readOnly":false},{"mountPath":"/var/run/calico","name":"var-run-calico","readOnly":false},{"mountPath":"/var/lib/calico","name":"var-lib-calico","readOnly":false},{"mountPath":"/var/log/calico/cni","name":"cni-log-dir","readOnly":true}]}],"hostNetwork":true,"initContainers":[{"command":["/opt/cni/bin/install"],"env":[{"name":"CNI_CONF_NAME","value":"10-calico.conflist"},{"name":"CNI_NETWORK_CONFIG","valueFrom":{"configMapKeyRef":{"key":"cni_network_config","name":"calico-config"}}},{"name":"KUBERNETES_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"CNI_MTU","valueFrom":{"configMapKeyRef":{"key":"veth_mtu","name":"calico-config"}}},{"name":"SLEEP","value":"false"}],"envFrom":[{"configMapRef":{"name":"kubernetes-services-endpoint","optional":true}}],"image":"de.icr.io/armada-master/calico/cni:v3.24.5","name":"install-cni","resources":{"requests":{"cpu":"5m","memory":"5Mi"}},"securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/host/opt/cni/bin","name":"cni-bin-dir"},{"mountPath":"/host/etc/cni/net.d","name":"cni-net-dir"}]},{"env":[{"name":"CALICO_K8S_NODE_REF","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"DATASTORE_TYPE","value":"kubernetes"}],"image":"de.icr.io/armada-master/armada-calico-extension:1308-amd64","name":"calico-extension","resources":{"requests":{"cpu":"5m","memory":"5Mi"}},"securityContext":{"runAsUser":2000}}],"priorityClassName":"system-node-critical","serviceAccountName":"calico-node","terminationGracePeriodSeconds":180,"tolerations":[{"operator":"Exists"}],"volumes":[{"hostPath":{"path":"/lib/modules"},"name":"lib-modules"},{"hostPath":{"path":"/var/run/calico"},"name":"var-run-calico"},{"hostPath":{"path":"/var/lib/calico"},"name":"var-lib-calico"},{"hostPath":{"path":"/run/xtables.lock","type":"FileOrCreate"},"name":"xtables-lock"},{"hostPath":{"path":"/opt/cni/bin"},"name":"cni-bin-dir"},{"hostPath":{"path":"/etc/cni/net.d"},"name":"cni-net-dir"},{"hostPath":{"path":"/var/log/calico/cni"},"name":"cni-log-dir"}]}},"updateStrategy":{"rollingUpdate":{"maxUnavailable":"5%"},"type":"RollingUpdate"}}}
    creationTimestamp: "2023-03-15T09:19:31Z"
    generation: 1
    labels:
      k8s-app: calico-node
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deprecated.daemonset.template.generation: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:k8s-app: {}
        f:spec:
          f:minReadySeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:k8s-app: {}
            f:spec:
              f:containers:
                k:{"name":"calico-node"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"CALICO_DISABLE_FILE_LOGGING"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CALICO_IPV4POOL_CIDR"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CALICO_IPV4POOL_IPIP"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CALICO_NETWORKING_BACKEND"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:configMapKeyRef: {}
                    k:{"name":"CLUSTER_TYPE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"DATASTORE_TYPE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"FELIX_DEFAULTENDPOINTTOHOSTACTION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"FELIX_FAILSAFEINBOUNDHOSTPORTS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"FELIX_FAILSAFEOUTBOUNDHOSTPORTS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"FELIX_HEALTHENABLED"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"FELIX_IPINIPMTU"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:configMapKeyRef: {}
                    k:{"name":"FELIX_IPTABLESREFRESHINTERVAL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"FELIX_IPV6SUPPORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"FELIX_PROMETHEUSMETRICSENABLED"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"FELIX_PROMETHEUSMETRICSPORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"FELIX_TYPHAK8SSERVICENAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:configMapKeyRef: {}
                    k:{"name":"FELIX_USAGEREPORTINGENABLED"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"IP"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"IP_AUTODETECTION_METHOD"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NODENAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"WAIT_FOR_DATASTORE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:lifecycle:
                    .: {}
                    f:preStop:
                      .: {}
                      f:exec:
                        .: {}
                        f:command: {}
                  f:livenessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/host/etc/cni/net.d"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/lib/modules"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/run/xtables.lock"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/lib/calico"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/log/calico/cni"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/run/calico"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:hostNetwork: {}
              f:initContainers:
                .: {}
                k:{"name":"calico-extension"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"CALICO_K8S_NODE_REF"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"DATASTORE_TYPE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                k:{"name":"install-cni"}:
                  .: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"CNI_CONF_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CNI_MTU"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:configMapKeyRef: {}
                    k:{"name":"CNI_NETWORK_CONFIG"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:configMapKeyRef: {}
                    k:{"name":"KUBERNETES_NODE_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"SLEEP"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/host/etc/cni/net.d"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/host/opt/cni/bin"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"cni-bin-dir"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"cni-log-dir"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"cni-net-dir"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"lib-modules"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"var-lib-calico"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"var-run-calico"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"xtables-lock"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
          f:updateStrategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2023-03-15T09:19:31Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:currentNumberScheduled: {}
          f:desiredNumberScheduled: {}
          f:numberAvailable: {}
          f:numberReady: {}
          f:observedGeneration: {}
          f:updatedNumberScheduled: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-26T18:27:09Z"
    name: calico-node
    namespace: kube-system
    resourceVersion: "1450205"
    uid: 0e0ada95-2f6b-4bf9-a294-20800a104e0b
  spec:
    minReadySeconds: 30
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: calico-node
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: calico-node
      spec:
        containers:
        - env:
          - name: DATASTORE_TYPE
            value: kubernetes
          - name: FELIX_TYPHAK8SSERVICENAME
            valueFrom:
              configMapKeyRef:
                key: typha_service_name
                name: calico-config
          - name: WAIT_FOR_DATASTORE
            value: "true"
          - name: NODENAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CALICO_NETWORKING_BACKEND
            valueFrom:
              configMapKeyRef:
                key: calico_backend
                name: calico-config
          - name: CLUSTER_TYPE
            value: k8s,bgp
          - name: IP
            value: autodetect
          - name: CALICO_IPV4POOL_IPIP
            value: CrossSubnet
          - name: FELIX_IPINIPMTU
            valueFrom:
              configMapKeyRef:
                key: veth_mtu
                name: calico-config
          - name: CALICO_IPV4POOL_CIDR
            value: 172.30.0.0/16
          - name: CALICO_DISABLE_FILE_LOGGING
            value: "true"
          - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
            value: ACCEPT
          - name: FELIX_IPV6SUPPORT
            value: "false"
          - name: FELIX_IPTABLESREFRESHINTERVAL
            value: "60"
          - name: FELIX_PROMETHEUSMETRICSENABLED
            value: "true"
          - name: FELIX_PROMETHEUSMETRICSPORT
            value: "9091"
          - name: FELIX_FAILSAFEINBOUNDHOSTPORTS
            value: none
          - name: FELIX_FAILSAFEOUTBOUNDHOSTPORTS
            value: none
          - name: IP_AUTODETECTION_METHOD
            value: interface=(^bond0$|^eth0$|^ens.*$|^enc.*$)
          - name: FELIX_HEALTHENABLED
            value: "true"
          - name: FELIX_USAGEREPORTINGENABLED
            value: "false"
          envFrom:
          - configMapRef:
              name: kubernetes-services-endpoint
              optional: true
          image: de.icr.io/armada-master/calico/node:v3.24.5
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/calico-node
                - -shutdown
          livenessProbe:
            exec:
              command:
              - /bin/calico-node
              - -felix-live
              - -bird-live
            failureThreshold: 6
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: calico-node
          readinessProbe:
            exec:
              command:
              - /bin/calico-node
              - -felix-ready
              - -bird-ready
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 250m
              memory: 90Mi
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/etc/cni/net.d
            name: cni-net-dir
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /var/run/calico
            name: var-run-calico
          - mountPath: /var/lib/calico
            name: var-lib-calico
          - mountPath: /var/log/calico/cni
            name: cni-log-dir
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /opt/cni/bin/install
          env:
          - name: CNI_CONF_NAME
            value: 10-calico.conflist
          - name: CNI_NETWORK_CONFIG
            valueFrom:
              configMapKeyRef:
                key: cni_network_config
                name: calico-config
          - name: KUBERNETES_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CNI_MTU
            valueFrom:
              configMapKeyRef:
                key: veth_mtu
                name: calico-config
          - name: SLEEP
            value: "false"
          envFrom:
          - configMapRef:
              name: kubernetes-services-endpoint
              optional: true
          image: de.icr.io/armada-master/calico/cni:v3.24.5
          imagePullPolicy: IfNotPresent
          name: install-cni
          resources:
            requests:
              cpu: 5m
              memory: 5Mi
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-bin-dir
          - mountPath: /host/etc/cni/net.d
            name: cni-net-dir
        - env:
          - name: CALICO_K8S_NODE_REF
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: DATASTORE_TYPE
            value: kubernetes
          image: de.icr.io/armada-master/armada-calico-extension:1308-amd64
          imagePullPolicy: IfNotPresent
          name: calico-extension
          resources:
            requests:
              cpu: 5m
              memory: 5Mi
          securityContext:
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: calico-node
        serviceAccountName: calico-node
        terminationGracePeriodSeconds: 180
        tolerations:
        - operator: Exists
        volumes:
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
        - hostPath:
            path: /var/run/calico
            type: ""
          name: var-run-calico
        - hostPath:
            path: /var/lib/calico
            type: ""
          name: var-lib-calico
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /opt/cni/bin
            type: ""
          name: cni-bin-dir
        - hostPath:
            path: /etc/cni/net.d
            type: ""
          name: cni-net-dir
        - hostPath:
            path: /var/log/calico/cni
            type: ""
          name: cni-log-dir
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 5%
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      armada-service: cruiser-kube-addons
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{"armada-service":"cruiser-kube-addons","version":"1.25.6_1534"},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","app":"ibm-keepalived-watcher","kubernetes.io/cluster-service":"true"},"name":"ibm-keepalived-watcher","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"ibm-keepalived-watcher"}},"template":{"metadata":{"labels":{"app":"ibm-keepalived-watcher"}},"spec":{"containers":[{"image":"de.icr.io/armada-master/keepalived-watcher:2383","imagePullPolicy":"IfNotPresent","name":"keepalived-watcher","resources":{"requests":{"cpu":"5m","memory":"10Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN"]},"runAsGroup":2000,"runAsUser":2000},"volumeMounts":[{"mountPath":"/status","name":"keepalived-status"}]}],"hostNetwork":true,"initContainers":[{"command":["/usr/local/bin/hostDirPerms"],"image":"de.icr.io/armada-master/keepalived-watcher:2383","name":"keepalived-init","resources":{"requests":{"cpu":"5m","memory":"10Mi"}},"securityContext":{"runAsGroup":0,"runAsUser":0},"volumeMounts":[{"mountPath":"/status","name":"keepalived-status"}]}],"priorityClassName":"system-node-critical","serviceAccountName":"ibm-keepalived-watcher","tolerations":[{"operator":"Exists"}],"volumes":[{"hostPath":{"path":"/tmp/keepalived"},"name":"keepalived-status"}]}},"updateStrategy":{"type":"RollingUpdate"}}}
      version: 1.25.6_1534
    creationTimestamp: "2023-03-15T09:22:57Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-keepalived-watcher
      kubernetes.io/cluster-service: "true"
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:armada-service: {}
            f:deprecated.daemonset.template.generation: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
            f:version: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:app: {}
            f:kubernetes.io/cluster-service: {}
        f:spec:
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"keepalived-watcher"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:capabilities:
                      .: {}
                      f:add: {}
                    f:runAsGroup: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/status"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:hostNetwork: {}
              f:initContainers:
                .: {}
                k:{"name":"keepalived-init"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:runAsGroup: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/status"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"keepalived-status"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
          f:updateStrategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2023-03-15T09:22:57Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:currentNumberScheduled: {}
          f:desiredNumberScheduled: {}
          f:numberAvailable: {}
          f:numberReady: {}
          f:observedGeneration: {}
          f:updatedNumberScheduled: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-26T18:27:09Z"
    name: ibm-keepalived-watcher
    namespace: kube-system
    resourceVersion: "1450220"
    uid: 277a5454-2bb2-4dc1-9fc7-760469e01677
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ibm-keepalived-watcher
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ibm-keepalived-watcher
      spec:
        containers:
        - image: de.icr.io/armada-master/keepalived-watcher:2383
          imagePullPolicy: IfNotPresent
          name: keepalived-watcher
          resources:
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            runAsGroup: 2000
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /status
            name: keepalived-status
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /usr/local/bin/hostDirPerms
          image: de.icr.io/armada-master/keepalived-watcher:2383
          imagePullPolicy: IfNotPresent
          name: keepalived-init
          resources:
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            runAsGroup: 0
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /status
            name: keepalived-status
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ibm-keepalived-watcher
        serviceAccountName: ibm-keepalived-watcher
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        volumes:
        - hostPath:
            path: /tmp/keepalived
            type: ""
          name: keepalived-status
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      armada-service: cruiser-kube-addons
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{"armada-service":"cruiser-kube-addons","version":"1.25.6_1534"},"labels":{"app":"ibmcloud-block-storage-driver","release":"ibmc-block"},"name":"ibmcloud-block-storage-driver","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"ibmcloud-block-storage-driver","release":"ibmc-block"}},"template":{"metadata":{"labels":{"app":"ibmcloud-block-storage-driver","release":"ibmc-block"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"ibm-cloud.kubernetes.io/iaas-provider","operator":"In","values":["softlayer"]},{"key":"kubernetes.io/arch","operator":"In","values":["amd64"]}]}]}}},"containers":[{"env":[{"name":"IBMC_FEATURE_GATES","value":"KeyManagementBYOK=true"},{"name":"HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}}],"image":"de.icr.io/armada-master/ibmcloud-block-storage-driver:v2.3.7","imagePullPolicy":"IfNotPresent","livenessProbe":{"exec":{"command":["ls","/host/usr/libexec/kubernetes/kubelet-plugins/volume/exec/ibm~ibmc-block/ibmc-block"]},"failureThreshold":3,"initialDelaySeconds":30,"periodSeconds":60,"timeoutSeconds":5},"name":"ibmcloud-block-storage-driver-container","resources":{"limits":{"cpu":"300m","memory":"300Mi"},"requests":{"cpu":"50m","memory":"100Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"privileged":false,"runAsNonRoot":false,"runAsUser":0},"volumeMounts":[{"mountPath":"/host/usr","name":"host-usr"},{"mountPath":"/run/systemd","name":"sysd-run"},{"mountPath":"/host/etc","name":"host-etc"},{"mountPath":"/host/lib","name":"host-lib"},{"mountPath":"/host/var/log","name":"host-var-log"}]}],"hostNetwork":true,"priorityClassName":"system-node-critical","serviceAccountName":"ibmcloud-block-storage-plugin","tolerations":[{"operator":"Exists"}],"volumes":[{"hostPath":{"path":"/usr/"},"name":"host-usr"},{"hostPath":{"path":"/run/systemd"},"name":"sysd-run"},{"hostPath":{"path":"/etc/"},"name":"host-etc"},{"hostPath":{"path":"/lib/"},"name":"host-lib"},{"hostPath":{"path":"/var/log"},"name":"host-var-log"}]}},"updateStrategy":{"type":"RollingUpdate"}}}
      version: 1.25.6_1534
    creationTimestamp: "2023-03-15T09:20:55Z"
    generation: 1
    labels:
      app: ibmcloud-block-storage-driver
      release: ibmc-block
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:armada-service: {}
            f:deprecated.daemonset.template.generation: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
            f:version: {}
          f:labels:
            .: {}
            f:app: {}
            f:release: {}
        f:spec:
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:release: {}
            f:spec:
              f:affinity:
                .: {}
                f:nodeAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"ibmcloud-block-storage-driver-container"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"HOST_IP"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"IBMC_FEATURE_GATES"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:privileged: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/host/etc"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/host/lib"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/host/usr"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/host/var/log"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/run/systemd"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:hostNetwork: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"host-etc"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"host-lib"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"host-usr"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"host-var-log"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"sysd-run"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
          f:updateStrategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2023-03-15T09:22:56Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:currentNumberScheduled: {}
          f:desiredNumberScheduled: {}
          f:numberAvailable: {}
          f:numberReady: {}
          f:observedGeneration: {}
          f:updatedNumberScheduled: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-26T18:27:09Z"
    name: ibmcloud-block-storage-driver
    namespace: kube-system
    resourceVersion: "1450209"
    uid: fb11f04f-5c99-4914-a1b3-b6a61ee9a385
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ibmcloud-block-storage-driver
        release: ibmc-block
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ibmcloud-block-storage-driver
          release: ibmc-block
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: ibm-cloud.kubernetes.io/iaas-provider
                  operator: In
                  values:
                  - softlayer
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
        containers:
        - env:
          - name: IBMC_FEATURE_GATES
            value: KeyManagementBYOK=true
          - name: HOST_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          image: de.icr.io/armada-master/ibmcloud-block-storage-driver:v2.3.7
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - ls
              - /host/usr/libexec/kubernetes/kubelet-plugins/volume/exec/ibm~ibmc-block/ibmc-block
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          name: ibmcloud-block-storage-driver-container
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/usr
            name: host-usr
          - mountPath: /run/systemd
            name: sysd-run
          - mountPath: /host/etc
            name: host-etc
          - mountPath: /host/lib
            name: host-lib
          - mountPath: /host/var/log
            name: host-var-log
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ibmcloud-block-storage-plugin
        serviceAccountName: ibmcloud-block-storage-plugin
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        volumes:
        - hostPath:
            path: /usr/
            type: ""
          name: host-usr
        - hostPath:
            path: /run/systemd
            type: ""
          name: sysd-run
        - hostPath:
            path: /etc/
            type: ""
          name: host-etc
        - hostPath:
            path: /lib/
            type: ""
          name: host-lib
        - hostPath:
            path: /var/log
            type: ""
          name: host-var-log
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","dashboard-metrics-scraper-policy":"allow","k8s-app":"konnectivity-agent","kubernetes-dashboard-policy":"allow"},"name":"konnectivity-agent","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"konnectivity-agent"}},"template":{"metadata":{"labels":{"dashboard-metrics-scraper-policy":"allow","k8s-app":"konnectivity-agent","kubernetes-dashboard-policy":"allow"}},"spec":{"automountServiceAccountToken":false,"containers":[{"args":["--ca-cert=/var/run/secrets/certs/ca.crt","--proxy-server-host=c111.eu-de.containers.cloud.ibm.com","--proxy-server-port=32519","--health-server-port=8093","--agent-cert=/var/run/secrets/konn-certs/konnectivity-agent.pem","--agent-key=/var/run/secrets/konn-certs/konnectivity-agent-key.pem","--agent-identifiers=ipv4=$(HOST_IP)"],"command":["/bin/proxy-agent"],"env":[{"name":"HOST_IP","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"status.hostIP"}}}],"image":"de.icr.io/armada-master/konnectivity-community:v0.1.1_569_iks-amd64","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":8093,"scheme":"HTTP"},"initialDelaySeconds":120,"periodSeconds":60,"timeoutSeconds":30},"name":"konnectivity-agent","resources":{"limits":{"memory":"500Mi"},"requests":{"cpu":"10m","memory":"10Mi"}},"securityContext":{"runAsGroup":0,"runAsUser":2000},"volumeMounts":[{"mountPath":"/var/run/secrets/certs","name":"kube-root-ca"},{"mountPath":"/var/run/secrets/konn-certs","name":"konnectivity-agent-certs"}]}],"dnsPolicy":"Default","priorityClassName":"system-node-critical","tolerations":[{"operator":"Exists"}],"volumes":[{"name":"konnectivity-agent-certs","secret":{"defaultMode":416,"secretName":"konnectivity-agent-certs"}},{"configMap":{"items":[],"name":"kube-root-ca.crt"},"name":"kube-root-ca"}]}},"updateStrategy":{"rollingUpdate":{"maxUnavailable":"10%"},"type":"RollingUpdate"}}}
    creationTimestamp: "2023-03-15T09:20:05Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      dashboard-metrics-scraper-policy: allow
      k8s-app: konnectivity-agent
      kubernetes-dashboard-policy: allow
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deprecated.daemonset.template.generation: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:dashboard-metrics-scraper-policy: {}
            f:k8s-app: {}
            f:kubernetes-dashboard-policy: {}
        f:spec:
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:dashboard-metrics-scraper-policy: {}
                f:k8s-app: {}
                f:kubernetes-dashboard-policy: {}
            f:spec:
              f:automountServiceAccountToken: {}
              f:containers:
                k:{"name":"konnectivity-agent"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"HOST_IP"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:runAsGroup: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/run/secrets/certs"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/konn-certs"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"konnectivity-agent-certs"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"kube-root-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
          f:updateStrategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2023-03-15T09:20:05Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:currentNumberScheduled: {}
          f:desiredNumberScheduled: {}
          f:numberAvailable: {}
          f:numberReady: {}
          f:observedGeneration: {}
          f:updatedNumberScheduled: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-26T18:27:09Z"
    name: konnectivity-agent
    namespace: kube-system
    resourceVersion: "1450215"
    uid: ebf4d21b-2318-4f18-865a-4fa9e1fcb543
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: konnectivity-agent
    template:
      metadata:
        creationTimestamp: null
        labels:
          dashboard-metrics-scraper-policy: allow
          k8s-app: konnectivity-agent
          kubernetes-dashboard-policy: allow
      spec:
        automountServiceAccountToken: false
        containers:
        - args:
          - --ca-cert=/var/run/secrets/certs/ca.crt
          - --proxy-server-host=c111.eu-de.containers.cloud.ibm.com
          - --proxy-server-port=32519
          - --health-server-port=8093
          - --agent-cert=/var/run/secrets/konn-certs/konnectivity-agent.pem
          - --agent-key=/var/run/secrets/konn-certs/konnectivity-agent-key.pem
          - --agent-identifiers=ipv4=$(HOST_IP)
          command:
          - /bin/proxy-agent
          env:
          - name: HOST_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          image: de.icr.io/armada-master/konnectivity-community:v0.1.1_569_iks-amd64
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8093
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 30
          name: konnectivity-agent
          resources:
            limits:
              memory: 500Mi
            requests:
              cpu: 10m
              memory: 10Mi
          securityContext:
            runAsGroup: 0
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/secrets/certs
            name: kube-root-ca
          - mountPath: /var/run/secrets/konn-certs
            name: konnectivity-agent-certs
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        volumes:
        - name: konnectivity-agent-certs
          secret:
            defaultMode: 416
            secretName: konnectivity-agent-certs
        - configMap:
            defaultMode: 420
            name: kube-root-ca.crt
          name: kube-root-ca
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"node-local-dns","kubernetes.io/cluster-service":"true"},"name":"node-local-dns","namespace":"kube-system"},"spec":{"minReadySeconds":60,"selector":{"matchLabels":{"k8s-app":"node-local-dns"}},"template":{"metadata":{"annotations":{"prometheus.io/port":"9253","prometheus.io/scrape":"true"},"labels":{"k8s-app":"node-local-dns"}},"spec":{"containers":[{"args":["-localip","169.254.20.10,172.21.0.10","-conf","/etc/Corefile","-basecorefile","/etc/coredns/Corefile","-upstreamsvc","node-local-dns"],"image":"de.icr.io/armada-master/k8s-dns-node-cache:1.22.18-amd64","livenessProbe":{"httpGet":{"host":"169.254.20.10","path":"/health","port":8080},"initialDelaySeconds":60,"timeoutSeconds":5},"name":"node-cache","ports":[{"containerPort":53,"name":"dns","protocol":"UDP"},{"containerPort":53,"name":"dns-tcp","protocol":"TCP"},{"containerPort":9253,"name":"metrics","protocol":"TCP"}],"resources":{"requests":{"cpu":"25m","memory":"10Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN"]},"runAsUser":0},"volumeMounts":[{"mountPath":"/run/xtables.lock","name":"xtables-lock","readOnly":false},{"mountPath":"/etc/coredns","name":"base-config-volume"},{"mountPath":"/etc/kube-dns","name":"kube-dns-config-volume"}]}],"dnsPolicy":"Default","hostNetwork":true,"nodeSelector":{"ibm-cloud.kubernetes.io/node-local-dns-enabled":"true"},"priorityClassName":"system-node-critical","serviceAccountName":"node-local-dns","terminationGracePeriodSeconds":900,"tolerations":[{"operator":"Exists"}],"volumes":[{"hostPath":{"path":"/run/xtables.lock","type":"FileOrCreate"},"name":"xtables-lock"},{"configMap":{"items":[],"name":"node-local-dns"},"name":"base-config-volume"},{"configMap":{"name":"node-local-dns-config","optional":true},"name":"kube-dns-config-volume"}]}},"updateStrategy":{"rollingUpdate":{"maxUnavailable":"10%"},"type":"RollingUpdate"}}}
    creationTimestamp: "2023-03-15T09:19:57Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: node-local-dns
      kubernetes.io/cluster-service: "true"
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-15T09:19:57Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deprecated.daemonset.template.generation: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:k8s-app: {}
            f:kubernetes.io/cluster-service: {}
        f:spec:
          f:minReadySeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:prometheus.io/port: {}
                f:prometheus.io/scrape: {}
              f:labels:
                .: {}
                f:k8s-app: {}
            f:spec:
              f:containers:
                k:{"name":"node-cache"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:host: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":53,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:hostPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":53,"protocol":"UDP"}:
                      .: {}
                      f:containerPort: {}
                      f:hostPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":9253,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:hostPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:capabilities:
                      .: {}
                      f:add: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/coredns"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/kube-dns"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/run/xtables.lock"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:hostNetwork: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"base-config-volume"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"kube-dns-config-volume"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
                k:{"name":"xtables-lock"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
          f:updateStrategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2023-03-15T09:22:46Z"
    name: node-local-dns
    namespace: kube-system
    resourceVersion: "804"
    uid: 9392519a-c91e-468c-86f8-b349fd8a3d46
  spec:
    minReadySeconds: 60
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: node-local-dns
    template:
      metadata:
        annotations:
          prometheus.io/port: "9253"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          k8s-app: node-local-dns
      spec:
        containers:
        - args:
          - -localip
          - 169.254.20.10,172.21.0.10
          - -conf
          - /etc/Corefile
          - -basecorefile
          - /etc/coredns/Corefile
          - -upstreamsvc
          - node-local-dns
          image: de.icr.io/armada-master/k8s-dns-node-cache:1.22.18-amd64
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 169.254.20.10
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: node-cache
          ports:
          - containerPort: 53
            hostPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            hostPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9253
            hostPort: 9253
            name: metrics
            protocol: TCP
          resources:
            requests:
              cpu: 25m
              memory: 10Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /etc/coredns
            name: base-config-volume
          - mountPath: /etc/kube-dns
            name: kube-dns-config-volume
        dnsPolicy: Default
        hostNetwork: true
        nodeSelector:
          ibm-cloud.kubernetes.io/node-local-dns-enabled: "true"
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: node-local-dns
        serviceAccountName: node-local-dns
        terminationGracePeriodSeconds: 900
        tolerations:
        - operator: Exists
        volumes:
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - configMap:
            defaultMode: 420
            name: node-local-dns
          name: base-config-volume
        - configMap:
            defaultMode: 420
            name: node-local-dns-config
            optional: true
          name: kube-dns-config-volume
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      armada-service: cruiser-kube-addons
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{"armada-service":"cruiser-kube-addons","version":"1.25.6_1534"},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"nvidia-driver-installer","kubernetes.io/cluster-service":"true"},"name":"nvidia-driver-installer","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"nvidia-driver-installer"}},"template":{"metadata":{"labels":{"k8s-app":"nvidia-driver-installer"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"ibm-cloud.kubernetes.io/gpu-enabled","operator":"Exists"}]}]}}},"containers":[{"image":"de.icr.io/armada-master/pause:3.8","name":"pause"}],"hostNetwork":true,"hostPID":true,"initContainers":[{"env":[{"name":"NVIDIA_INSTALL_DIR_HOST","value":"/home/kubernetes/bin/nvidia"},{"name":"NVIDIA_INSTALL_DIR_CONTAINER","value":"/usr/local/nvidia"},{"name":"VULKAN_ICD_DIR_HOST","value":"/home/kubernetes/bin/nvidia/vulkan/icd.d"},{"name":"VULKAN_ICD_DIR_CONTAINER","value":"/etc/vulkan/icd.d"},{"name":"ROOT_MOUNT_DIR","value":"/root"}],"image":"de.icr.io/armada-master/container-engine-accelerators-installer:79a2232ab6188b816eaece854f6e19a35e66998e","name":"nvidia-driver-installer","resources":{"requests":{"cpu":0.15}},"securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/usr/local/nvidia","name":"nvidia-install-dir-host"},{"mountPath":"/etc/vulkan/icd.d","name":"vulkan-icd-mount"},{"mountPath":"/dev","name":"dev"},{"mountPath":"/root","name":"root-mount"}]}],"tolerations":[{"operator":"Exists"}],"volumes":[{"hostPath":{"path":"/dev"},"name":"dev"},{"hostPath":{"path":"/home/kubernetes/bin/nvidia/vulkan/icd.d"},"name":"vulkan-icd-mount"},{"hostPath":{"path":"/home/kubernetes/bin/nvidia"},"name":"nvidia-install-dir-host"},{"hostPath":{"path":"/"},"name":"root-mount"}]}},"updateStrategy":{"type":"OnDelete"}}}
      version: 1.25.6_1534
    creationTimestamp: "2023-03-15T09:22:56Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-driver-installer
      kubernetes.io/cluster-service: "true"
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-15T09:22:56Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:armada-service: {}
            f:deprecated.daemonset.template.generation: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
            f:version: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:k8s-app: {}
            f:kubernetes.io/cluster-service: {}
        f:spec:
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:k8s-app: {}
            f:spec:
              f:affinity:
                .: {}
                f:nodeAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"pause"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:hostNetwork: {}
              f:hostPID: {}
              f:initContainers:
                .: {}
                k:{"name":"nvidia-driver-installer"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"NVIDIA_INSTALL_DIR_CONTAINER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NVIDIA_INSTALL_DIR_HOST"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ROOT_MOUNT_DIR"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"VULKAN_ICD_DIR_CONTAINER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"VULKAN_ICD_DIR_HOST"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/dev"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/vulkan/icd.d"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/root"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/usr/local/nvidia"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"dev"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"nvidia-install-dir-host"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"root-mount"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"vulkan-icd-mount"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
          f:updateStrategy:
            f:type: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2023-03-15T09:22:56Z"
    name: nvidia-driver-installer
    namespace: kube-system
    resourceVersion: "835"
    uid: d4238c51-78ed-4c76-a7ca-d9c139a9d49d
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-driver-installer
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: nvidia-driver-installer
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: ibm-cloud.kubernetes.io/gpu-enabled
                  operator: Exists
        containers:
        - image: de.icr.io/armada-master/pause:3.8
          imagePullPolicy: IfNotPresent
          name: pause
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - env:
          - name: NVIDIA_INSTALL_DIR_HOST
            value: /home/kubernetes/bin/nvidia
          - name: NVIDIA_INSTALL_DIR_CONTAINER
            value: /usr/local/nvidia
          - name: VULKAN_ICD_DIR_HOST
            value: /home/kubernetes/bin/nvidia/vulkan/icd.d
          - name: VULKAN_ICD_DIR_CONTAINER
            value: /etc/vulkan/icd.d
          - name: ROOT_MOUNT_DIR
            value: /root
          image: de.icr.io/armada-master/container-engine-accelerators-installer:79a2232ab6188b816eaece854f6e19a35e66998e
          imagePullPolicy: IfNotPresent
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local/nvidia
            name: nvidia-install-dir-host
          - mountPath: /etc/vulkan/icd.d
            name: vulkan-icd-mount
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        volumes:
        - hostPath:
            path: /dev
            type: ""
          name: dev
        - hostPath:
            path: /home/kubernetes/bin/nvidia/vulkan/icd.d
            type: ""
          name: vulkan-icd-mount
        - hostPath:
            path: /home/kubernetes/bin/nvidia
            type: ""
          name: nvidia-install-dir-host
        - hostPath:
            path: /
            type: ""
          name: root-mount
    updateStrategy:
      type: OnDelete
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      armada-service: cruiser-kube-addons
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{"armada-service":"cruiser-kube-addons","version":"1.25.6_1534"},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"nvidia-gpu-device-plugin","kubernetes.io/cluster-service":"true"},"name":"nvidia-gpu-device-plugin","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"nvidia-gpu-device-plugin"}},"template":{"metadata":{"labels":{"k8s-app":"nvidia-gpu-device-plugin"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"ibm-cloud.kubernetes.io/gpu-enabled","operator":"Exists"}]}]}}},"containers":[{"image":"de.icr.io/armada-master/nvidia-gpu-device-plugin:79a2232ab6188b816eaece854f6e19a35e66998e","name":"nvidia-gpu-device-plugin","resources":{"requests":{"cpu":"50m","memory":"10Mi"}},"securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/device-plugin","name":"device-plugin"},{"mountPath":"/dev","name":"dev"},{"mountPath":"/usr/local/nvidia","name":"nvidia-install-dir-host"},{"mountPath":"/var/lib/kubelet/pod-resources","name":"pod-gpu-resources","readOnly":true}]}],"priorityClassName":"system-node-critical","tolerations":[{"operator":"Exists"}],"volumes":[{"hostPath":{"path":"/var/lib/kubelet/device-plugins"},"name":"device-plugin"},{"hostPath":{"path":"/var/lib/kubelet/pod-resources"},"name":"pod-gpu-resources"},{"hostPath":{"path":"/dev"},"name":"dev"},{"hostPath":{"path":"/home/kubernetes/bin/nvidia"},"name":"nvidia-install-dir-host"}]}},"updateStrategy":{"type":"OnDelete"}}}
      version: 1.25.6_1534
    creationTimestamp: "2023-03-15T09:22:57Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
      kubernetes.io/cluster-service: "true"
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-15T09:22:57Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:armada-service: {}
            f:deprecated.daemonset.template.generation: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
            f:version: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:k8s-app: {}
            f:kubernetes.io/cluster-service: {}
        f:spec:
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:k8s-app: {}
            f:spec:
              f:affinity:
                .: {}
                f:nodeAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"nvidia-gpu-device-plugin"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/dev"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/device-plugin"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/usr/local/nvidia"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/lib/kubelet/pod-resources"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"dev"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"device-plugin"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"nvidia-install-dir-host"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"pod-gpu-resources"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
          f:updateStrategy:
            f:type: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2023-03-15T09:22:57Z"
    name: nvidia-gpu-device-plugin
    namespace: kube-system
    resourceVersion: "856"
    uid: 3e131265-5a29-4544-8468-e3fd12477fca
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: ibm-cloud.kubernetes.io/gpu-enabled
                  operator: Exists
        containers:
        - image: de.icr.io/armada-master/nvidia-gpu-device-plugin:79a2232ab6188b816eaece854f6e19a35e66998e
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          resources:
            requests:
              cpu: 50m
              memory: 10Mi
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local/nvidia
            name: nvidia-install-dir-host
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-gpu-resources
            readOnly: true
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: ""
          name: device-plugin
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: ""
          name: pod-gpu-resources
        - hostPath:
            path: /dev
            type: ""
          name: dev
        - hostPath:
            path: /home/kubernetes/bin/nvidia
            type: ""
          name: nvidia-install-dir-host
    updateStrategy:
      type: OnDelete
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"balancereader","namespace":"bank-of-anthos"},"spec":{"selector":{"matchLabels":{"app":"balancereader"}},"template":{"metadata":{"labels":{"app":"balancereader"}},"spec":{"containers":[{"env":[{"name":"VERSION","value":"v0.5.10"},{"name":"PORT","value":"8080"},{"name":"ENABLE_TRACING","value":"false"},{"name":"ENABLE_METRICS","value":"false"},{"name":"POLL_MS","value":"100"},{"name":"CACHE_SIZE","value":"1000000"},{"name":"JVM_OPTS","value":"-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Xms256m -Xmx512m"},{"name":"LOG_LEVEL","value":"info"},{"name":"NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"envFrom":[{"configMapRef":{"name":"environment-config"}},{"configMapRef":{"name":"ledger-db-config"}}],"image":"gcr.io/bank-of-anthos-ci/balancereader:v0.5.10","livenessProbe":{"httpGet":{"path":"/healthy","port":8080},"initialDelaySeconds":120,"periodSeconds":5,"timeoutSeconds":10},"name":"balancereader","readinessProbe":{"httpGet":{"path":"/ready","port":8080},"initialDelaySeconds":60,"periodSeconds":5,"timeoutSeconds":10},"resources":{"limits":{"cpu":"500m","memory":"512Mi"},"requests":{"cpu":"100m","memory":"256Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]},"privileged":false,"readOnlyRootFilesystem":true},"startupProbe":{"failureThreshold":30,"httpGet":{"path":"/healthy","port":8080},"periodSeconds":10},"volumeMounts":[{"mountPath":"/tmp/.ssh","name":"publickey","readOnly":true},{"mountPath":"/tmp","name":"tmp"}]}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"default","terminationGracePeriodSeconds":5,"volumes":[{"name":"publickey","secret":{"items":[{"key":"jwtRS256.key.pub","path":"publickey"}],"secretName":"jwt-key"}},{"emptyDir":{},"name":"tmp"}]}}}}
    creationTimestamp: "2023-03-19T10:57:08Z"
    generation: 3
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kubectl.kubernetes.io/restartedAt: {}
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"balancereader"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"CACHE_SIZE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ENABLE_METRICS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ENABLE_TRACING"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"JVM_OPTS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LOG_LEVEL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POLL_MS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp/.ssh"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"publickey"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:secretName: {}
                k:{"name":"tmp"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kubectl
      operation: Update
      time: "2023-03-20T15:40:14Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-22T11:58:29Z"
    name: balancereader
    namespace: bank-of-anthos
    resourceVersion: "777736"
    uid: 1a654446-c2cd-4b7f-966f-bfd454cc6d14
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: balancereader
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2023-03-20T16:40:14+01:00"
        creationTimestamp: null
        labels:
          app: balancereader
      spec:
        containers:
        - env:
          - name: VERSION
            value: v0.5.10
          - name: PORT
            value: "8080"
          - name: ENABLE_TRACING
            value: "false"
          - name: ENABLE_METRICS
            value: "false"
          - name: POLL_MS
            value: "100"
          - name: CACHE_SIZE
            value: "1000000"
          - name: JVM_OPTS
            value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap
              -Xms256m -Xmx512m
          - name: LOG_LEVEL
            value: info
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          envFrom:
          - configMapRef:
              name: environment-config
          - configMapRef:
              name: ledger-db-config
          image: gcr.io/bank-of-anthos-ci/balancereader:v0.5.10
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthy
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          name: balancereader
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /healthy
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/.ssh
            name: publickey
            readOnly: true
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 5
        volumes:
        - name: publickey
          secret:
            defaultMode: 420
            items:
            - key: jwtRS256.key.pub
              path: publickey
            secretName: jwt-key
        - emptyDir: {}
          name: tmp
  status:
    conditions:
    - lastTransitionTime: "2023-03-19T10:58:59Z"
      lastUpdateTime: "2023-03-19T10:58:59Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2023-03-19T10:57:08Z"
      lastUpdateTime: "2023-03-20T15:42:05Z"
      message: ReplicaSet "balancereader-6b4679f6fc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"contacts","namespace":"bank-of-anthos"},"spec":{"selector":{"matchLabels":{"app":"contacts"}},"template":{"metadata":{"labels":{"app":"contacts"}},"spec":{"containers":[{"env":[{"name":"VERSION","value":"v0.5.10"},{"name":"PORT","value":"8080"},{"name":"ENABLE_TRACING","value":"false"},{"name":"LOG_LEVEL","value":"info"}],"envFrom":[{"configMapRef":{"name":"environment-config"}},{"configMapRef":{"name":"accounts-db-config"}}],"image":"gcr.io/bank-of-anthos-ci/contacts:v0.5.10","name":"contacts","readinessProbe":{"httpGet":{"path":"/ready","port":8080},"initialDelaySeconds":10,"periodSeconds":5,"timeoutSeconds":10},"resources":{"limits":{"cpu":"250m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]},"privileged":false,"readOnlyRootFilesystem":true},"volumeMounts":[{"mountPath":"/tmp/.ssh","name":"publickey","readOnly":true},{"mountPath":"/tmp","name":"tmp"}]}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"default","terminationGracePeriodSeconds":5,"volumes":[{"name":"publickey","secret":{"items":[{"key":"jwtRS256.key.pub","path":"publickey"}],"secretName":"jwt-key"}},{"emptyDir":{},"name":"tmp"}]}}}}
    creationTimestamp: "2023-03-19T10:57:09Z"
    generation: 3
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kubectl.kubernetes.io/restartedAt: {}
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"contacts"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"ENABLE_TRACING"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LOG_LEVEL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp/.ssh"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"publickey"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:secretName: {}
                k:{"name":"tmp"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kubectl
      operation: Update
      time: "2023-03-20T15:40:14Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-22T11:58:29Z"
    name: contacts
    namespace: bank-of-anthos
    resourceVersion: "777738"
    uid: 8fab55a7-d710-418f-b62c-a22913ec76ed
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: contacts
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2023-03-20T16:40:14+01:00"
        creationTimestamp: null
        labels:
          app: contacts
      spec:
        containers:
        - env:
          - name: VERSION
            value: v0.5.10
          - name: PORT
            value: "8080"
          - name: ENABLE_TRACING
            value: "false"
          - name: LOG_LEVEL
            value: info
          envFrom:
          - configMapRef:
              name: environment-config
          - configMapRef:
              name: accounts-db-config
          image: gcr.io/bank-of-anthos-ci/contacts:v0.5.10
          imagePullPolicy: IfNotPresent
          name: contacts
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 250m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/.ssh
            name: publickey
            readOnly: true
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 5
        volumes:
        - name: publickey
          secret:
            defaultMode: 420
            items:
            - key: jwtRS256.key.pub
              path: publickey
            secretName: jwt-key
        - emptyDir: {}
          name: tmp
  status:
    conditions:
    - lastTransitionTime: "2023-03-19T10:57:25Z"
      lastUpdateTime: "2023-03-19T10:57:25Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2023-03-19T10:57:09Z"
      lastUpdateTime: "2023-03-20T15:40:30Z"
      message: ReplicaSet "contacts-7f6d8556dc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"frontend","namespace":"bank-of-anthos"},"spec":{"selector":{"matchLabels":{"app":"frontend"}},"template":{"metadata":{"labels":{"app":"frontend"}},"spec":{"containers":[{"env":[{"name":"VERSION","value":"v0.5.10"},{"name":"PORT","value":"8080"},{"name":"ENABLE_TRACING","value":"false"},{"name":"SCHEME","value":"http"},{"name":"LOG_LEVEL","value":"info"},{"name":"CLUSTER_NAME","value":"mycluster-fra02-b3c.4x16"},{"name":"DEFAULT_USERNAME","valueFrom":{"configMapKeyRef":{"key":"DEMO_LOGIN_USERNAME","name":"demo-data-config"}}},{"name":"DEFAULT_PASSWORD","valueFrom":{"configMapKeyRef":{"key":"DEMO_LOGIN_PASSWORD","name":"demo-data-config"}}},{"name":"REGISTERED_OAUTH_CLIENT_ID","valueFrom":{"configMapKeyRef":{"key":"DEMO_OAUTH_CLIENT_ID","name":"oauth-config","optional":true}}},{"name":"ALLOWED_OAUTH_REDIRECT_URI","valueFrom":{"configMapKeyRef":{"key":"DEMO_OAUTH_REDIRECT_URI","name":"oauth-config","optional":true}}}],"envFrom":[{"configMapRef":{"name":"environment-config"}},{"configMapRef":{"name":"service-api-config"}}],"image":"gcr.io/bank-of-anthos-ci/frontend:v0.5.10","livenessProbe":{"httpGet":{"path":"/ready","port":8080},"initialDelaySeconds":60,"periodSeconds":15,"timeoutSeconds":30},"name":"frontend","readinessProbe":{"httpGet":{"path":"/ready","port":8080},"initialDelaySeconds":10,"periodSeconds":5,"timeoutSeconds":10},"resources":{"limits":{"cpu":"250m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]},"privileged":false,"readOnlyRootFilesystem":true},"volumeMounts":[{"mountPath":"/tmp/.ssh","name":"publickey","readOnly":true},{"mountPath":"/tmp","name":"tmp"}]}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"default","terminationGracePeriodSeconds":5,"volumes":[{"name":"publickey","secret":{"items":[{"key":"jwtRS256.key.pub","path":"publickey"}],"secretName":"jwt-key"}},{"emptyDir":{},"name":"tmp"}]}}}}
    creationTimestamp: "2023-03-19T10:57:09Z"
    generation: 3
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kubectl.kubernetes.io/restartedAt: {}
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"frontend"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"ALLOWED_OAUTH_REDIRECT_URI"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:configMapKeyRef: {}
                    k:{"name":"CLUSTER_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"DEFAULT_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:configMapKeyRef: {}
                    k:{"name":"DEFAULT_USERNAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:configMapKeyRef: {}
                    k:{"name":"ENABLE_TRACING"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LOG_LEVEL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"REGISTERED_OAUTH_CLIENT_ID"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:configMapKeyRef: {}
                    k:{"name":"SCHEME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp/.ssh"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"publickey"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:secretName: {}
                k:{"name":"tmp"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kubectl
      operation: Update
      time: "2023-03-20T15:40:14Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-22T11:58:29Z"
    name: frontend
    namespace: bank-of-anthos
    resourceVersion: "777737"
    uid: 68cf3c77-5526-4068-91f6-b516ac2739e0
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: frontend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2023-03-20T16:40:14+01:00"
        creationTimestamp: null
        labels:
          app: frontend
      spec:
        containers:
        - env:
          - name: VERSION
            value: v0.5.10
          - name: PORT
            value: "8080"
          - name: ENABLE_TRACING
            value: "false"
          - name: SCHEME
            value: http
          - name: LOG_LEVEL
            value: info
          - name: CLUSTER_NAME
            value: mycluster-fra02-b3c.4x16
          - name: DEFAULT_USERNAME
            valueFrom:
              configMapKeyRef:
                key: DEMO_LOGIN_USERNAME
                name: demo-data-config
          - name: DEFAULT_PASSWORD
            valueFrom:
              configMapKeyRef:
                key: DEMO_LOGIN_PASSWORD
                name: demo-data-config
          - name: REGISTERED_OAUTH_CLIENT_ID
            valueFrom:
              configMapKeyRef:
                key: DEMO_OAUTH_CLIENT_ID
                name: oauth-config
                optional: true
          - name: ALLOWED_OAUTH_REDIRECT_URI
            valueFrom:
              configMapKeyRef:
                key: DEMO_OAUTH_REDIRECT_URI
                name: oauth-config
                optional: true
          envFrom:
          - configMapRef:
              name: environment-config
          - configMapRef:
              name: service-api-config
          image: gcr.io/bank-of-anthos-ci/frontend:v0.5.10
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 30
          name: frontend
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 250m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/.ssh
            name: publickey
            readOnly: true
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 5
        volumes:
        - name: publickey
          secret:
            defaultMode: 420
            items:
            - key: jwtRS256.key.pub
              path: publickey
            secretName: jwt-key
        - emptyDir: {}
          name: tmp
  status:
    conditions:
    - lastTransitionTime: "2023-03-19T10:57:25Z"
      lastUpdateTime: "2023-03-19T10:57:25Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2023-03-19T10:57:09Z"
      lastUpdateTime: "2023-03-20T15:40:30Z"
      message: ReplicaSet "frontend-59c84b5f46" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"ledgerwriter","namespace":"bank-of-anthos"},"spec":{"selector":{"matchLabels":{"app":"ledgerwriter"}},"template":{"metadata":{"labels":{"app":"ledgerwriter"}},"spec":{"containers":[{"env":[{"name":"VERSION","value":"v0.5.10"},{"name":"PORT","value":"8080"},{"name":"ENABLE_TRACING","value":"false"},{"name":"ENABLE_METRICS","value":"false"},{"name":"JVM_OPTS","value":"-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Xms256m -Xmx512m"},{"name":"LOG_LEVEL","value":"info"},{"name":"NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"envFrom":[{"configMapRef":{"name":"environment-config"}},{"configMapRef":{"name":"service-api-config"}},{"configMapRef":{"name":"ledger-db-config"}}],"image":"gcr.io/bank-of-anthos-ci/ledgerwriter:v0.5.10","name":"ledgerwriter","readinessProbe":{"httpGet":{"path":"/ready","port":8080},"initialDelaySeconds":60,"periodSeconds":5,"timeoutSeconds":10},"resources":{"limits":{"cpu":"500m","memory":"512Mi"},"requests":{"cpu":"100m","memory":"256Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]},"privileged":false,"readOnlyRootFilesystem":true},"startupProbe":{"failureThreshold":30,"httpGet":{"path":"/ready","port":8080},"periodSeconds":10},"volumeMounts":[{"mountPath":"/tmp/.ssh","name":"publickey","readOnly":true},{"mountPath":"/tmp","name":"tmp"}]}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"default","terminationGracePeriodSeconds":5,"volumes":[{"name":"publickey","secret":{"items":[{"key":"jwtRS256.key.pub","path":"publickey"}],"secretName":"jwt-key"}},{"emptyDir":{},"name":"tmp"}]}}}}
    creationTimestamp: "2023-03-19T10:57:10Z"
    generation: 3
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kubectl.kubernetes.io/restartedAt: {}
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"ledgerwriter"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"ENABLE_METRICS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ENABLE_TRACING"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"JVM_OPTS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LOG_LEVEL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp/.ssh"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"publickey"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:secretName: {}
                k:{"name":"tmp"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kubectl
      operation: Update
      time: "2023-03-20T15:40:14Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-22T11:58:29Z"
    name: ledgerwriter
    namespace: bank-of-anthos
    resourceVersion: "777762"
    uid: b894d443-2cb2-429e-990f-8b135415e99d
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ledgerwriter
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2023-03-20T16:40:14+01:00"
        creationTimestamp: null
        labels:
          app: ledgerwriter
      spec:
        containers:
        - env:
          - name: VERSION
            value: v0.5.10
          - name: PORT
            value: "8080"
          - name: ENABLE_TRACING
            value: "false"
          - name: ENABLE_METRICS
            value: "false"
          - name: JVM_OPTS
            value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap
              -Xms256m -Xmx512m
          - name: LOG_LEVEL
            value: info
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          envFrom:
          - configMapRef:
              name: environment-config
          - configMapRef:
              name: service-api-config
          - configMapRef:
              name: ledger-db-config
          image: gcr.io/bank-of-anthos-ci/ledgerwriter:v0.5.10
          imagePullPolicy: IfNotPresent
          name: ledgerwriter
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/.ssh
            name: publickey
            readOnly: true
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 5
        volumes:
        - name: publickey
          secret:
            defaultMode: 420
            items:
            - key: jwtRS256.key.pub
              path: publickey
            secretName: jwt-key
        - emptyDir: {}
          name: tmp
  status:
    conditions:
    - lastTransitionTime: "2023-03-19T10:58:42Z"
      lastUpdateTime: "2023-03-19T10:58:42Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2023-03-19T10:57:10Z"
      lastUpdateTime: "2023-03-20T15:41:20Z"
      message: ReplicaSet "ledgerwriter-675c9df465" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"loadgenerator","namespace":"bank-of-anthos"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"loadgenerator"}},"template":{"metadata":{"annotations":{"sidecar.istio.io/rewriteAppHTTPProbers":"true"},"labels":{"app":"loadgenerator"}},"spec":{"containers":[{"env":[{"name":"FRONTEND_ADDR","value":"frontend:80"},{"name":"USERS","value":"5"},{"name":"LOG_LEVEL","value":"error"}],"image":"gcr.io/bank-of-anthos-ci/loadgenerator:v0.5.10","name":"loadgenerator","resources":{"limits":{"cpu":"250m","memory":"1Gi"},"requests":{"cpu":"100m","memory":"512Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]},"privileged":false,"readOnlyRootFilesystem":true}}],"restartPolicy":"Always","securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"default","terminationGracePeriodSeconds":5}}}}
    creationTimestamp: "2023-03-19T10:57:10Z"
    generation: 3
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-20T15:40:14Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kubectl.kubernetes.io/restartedAt: {}
                f:sidecar.istio.io/rewriteAppHTTPProbers: {}
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"loadgenerator"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"FRONTEND_ADDR"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LOG_LEVEL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"USERS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: kubectl
      operation: Update
      time: "2023-03-20T15:40:14Z"
    name: loadgenerator
    namespace: bank-of-anthos
    resourceVersion: "468419"
    uid: ac5db93c-5ca4-47d9-a01c-ae3f7c0e1841
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: loadgenerator
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2023-03-20T16:40:14+01:00"
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: loadgenerator
      spec:
        containers:
        - env:
          - name: FRONTEND_ADDR
            value: frontend:80
          - name: USERS
            value: "5"
          - name: LOG_LEVEL
            value: error
          image: gcr.io/bank-of-anthos-ci/loadgenerator:v0.5.10
          imagePullPolicy: IfNotPresent
          name: loadgenerator
          resources:
            limits:
              cpu: 250m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 5
  status:
    conditions:
    - lastTransitionTime: "2023-03-19T10:57:16Z"
      lastUpdateTime: "2023-03-19T10:57:16Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2023-03-19T10:57:10Z"
      lastUpdateTime: "2023-03-20T15:40:14Z"
      message: ReplicaSet "loadgenerator-79554754b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"transactionhistory","namespace":"bank-of-anthos"},"spec":{"selector":{"matchLabels":{"app":"transactionhistory"}},"template":{"metadata":{"labels":{"app":"transactionhistory"}},"spec":{"containers":[{"env":[{"name":"VERSION","value":"v0.5.10"},{"name":"PORT","value":"8080"},{"name":"ENABLE_TRACING","value":"false"},{"name":"ENABLE_METRICS","value":"false"},{"name":"POLL_MS","value":"100"},{"name":"CACHE_SIZE","value":"1000"},{"name":"CACHE_MINUTES","value":"60"},{"name":"HISTORY_LIMIT","value":"100"},{"name":"JVM_OPTS","value":"-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Xms256m -Xmx512m"},{"name":"LOG_LEVEL","value":"info"},{"name":"NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"envFrom":[{"configMapRef":{"name":"environment-config"}},{"configMapRef":{"name":"ledger-db-config"}}],"image":"gcr.io/bank-of-anthos-ci/transactionhistory:v0.5.10","livenessProbe":{"httpGet":{"path":"/healthy","port":8080},"initialDelaySeconds":120,"periodSeconds":5,"timeoutSeconds":10},"name":"transactionhistory","readinessProbe":{"httpGet":{"path":"/ready","port":8080},"initialDelaySeconds":60,"periodSeconds":5,"timeoutSeconds":10},"resources":{"limits":{"cpu":"500m","memory":"512Mi"},"requests":{"cpu":"100m","memory":"256Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]},"privileged":false,"readOnlyRootFilesystem":true},"startupProbe":{"failureThreshold":30,"httpGet":{"path":"/healthy","port":8080},"periodSeconds":10},"volumeMounts":[{"mountPath":"/tmp/.ssh","name":"publickey","readOnly":true},{"mountPath":"/tmp","name":"tmp"}]}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"default","terminationGracePeriodSeconds":5,"volumes":[{"name":"publickey","secret":{"items":[{"key":"jwtRS256.key.pub","path":"publickey"}],"secretName":"jwt-key"}},{"emptyDir":{},"name":"tmp"}]}}}}
    creationTimestamp: "2023-03-19T11:05:41Z"
    generation: 3
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kubectl.kubernetes.io/restartedAt: {}
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"transactionhistory"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"CACHE_MINUTES"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CACHE_SIZE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ENABLE_METRICS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ENABLE_TRACING"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"HISTORY_LIMIT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"JVM_OPTS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LOG_LEVEL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POLL_MS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp/.ssh"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"publickey"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:secretName: {}
                k:{"name":"tmp"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kubectl
      operation: Update
      time: "2023-03-20T15:40:14Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-22T11:58:29Z"
    name: transactionhistory
    namespace: bank-of-anthos
    resourceVersion: "777765"
    uid: 97bded56-d3c8-48f1-9033-8f9e9b81ff8f
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: transactionhistory
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2023-03-20T16:40:14+01:00"
        creationTimestamp: null
        labels:
          app: transactionhistory
      spec:
        containers:
        - env:
          - name: VERSION
            value: v0.5.10
          - name: PORT
            value: "8080"
          - name: ENABLE_TRACING
            value: "false"
          - name: ENABLE_METRICS
            value: "false"
          - name: POLL_MS
            value: "100"
          - name: CACHE_SIZE
            value: "1000"
          - name: CACHE_MINUTES
            value: "60"
          - name: HISTORY_LIMIT
            value: "100"
          - name: JVM_OPTS
            value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap
              -Xms256m -Xmx512m
          - name: LOG_LEVEL
            value: info
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          envFrom:
          - configMapRef:
              name: environment-config
          - configMapRef:
              name: ledger-db-config
          image: gcr.io/bank-of-anthos-ci/transactionhistory:v0.5.10
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthy
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          name: transactionhistory
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /healthy
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/.ssh
            name: publickey
            readOnly: true
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 5
        volumes:
        - name: publickey
          secret:
            defaultMode: 420
            items:
            - key: jwtRS256.key.pub
              path: publickey
            secretName: jwt-key
        - emptyDir: {}
          name: tmp
  status:
    conditions:
    - lastTransitionTime: "2023-03-19T11:07:22Z"
      lastUpdateTime: "2023-03-19T11:07:22Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2023-03-19T11:05:41Z"
      lastUpdateTime: "2023-03-20T15:42:05Z"
      message: ReplicaSet "transactionhistory-6c966846d7" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"userservice","namespace":"bank-of-anthos"},"spec":{"selector":{"matchLabels":{"app":"userservice"}},"template":{"metadata":{"labels":{"app":"userservice"}},"spec":{"containers":[{"env":[{"name":"VERSION","value":"v0.5.10"},{"name":"PORT","value":"8080"},{"name":"ENABLE_TRACING","value":"false"},{"name":"TOKEN_EXPIRY_SECONDS","value":"3600"},{"name":"PRIV_KEY_PATH","value":"/tmp/.ssh/privatekey"},{"name":"LOG_LEVEL","value":"info"}],"envFrom":[{"configMapRef":{"name":"environment-config"}},{"configMapRef":{"name":"accounts-db-config"}}],"image":"gcr.io/bank-of-anthos-ci/userservice:v0.5.10","name":"userservice","ports":[{"containerPort":8080,"name":"http-server"}],"readinessProbe":{"httpGet":{"path":"/ready","port":8080},"initialDelaySeconds":10,"periodSeconds":5,"timeoutSeconds":10},"resources":{"limits":{"cpu":"500m","memory":"256Mi"},"requests":{"cpu":"300m","memory":"128Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]},"privileged":false,"readOnlyRootFilesystem":true},"volumeMounts":[{"mountPath":"/tmp/.ssh","name":"keys","readOnly":true},{"mountPath":"/tmp","name":"tmp"}]}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"default","terminationGracePeriodSeconds":5,"volumes":[{"name":"keys","secret":{"items":[{"key":"jwtRS256.key","path":"privatekey"},{"key":"jwtRS256.key.pub","path":"publickey"}],"secretName":"jwt-key"}},{"emptyDir":{},"name":"tmp"}]}}}}
    creationTimestamp: "2023-03-19T10:57:11Z"
    generation: 3
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kubectl.kubernetes.io/restartedAt: {}
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"userservice"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"ENABLE_TRACING"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LOG_LEVEL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"PRIV_KEY_PATH"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TOKEN_EXPIRY_SECONDS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp/.ssh"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"keys"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:secretName: {}
                k:{"name":"tmp"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kubectl
      operation: Update
      time: "2023-03-20T15:40:14Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-22T11:58:29Z"
    name: userservice
    namespace: bank-of-anthos
    resourceVersion: "777773"
    uid: 3c69c0f9-e9ea-43ad-9a47-95ac06cea866
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: userservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2023-03-20T16:40:14+01:00"
        creationTimestamp: null
        labels:
          app: userservice
      spec:
        containers:
        - env:
          - name: VERSION
            value: v0.5.10
          - name: PORT
            value: "8080"
          - name: ENABLE_TRACING
            value: "false"
          - name: TOKEN_EXPIRY_SECONDS
            value: "3600"
          - name: PRIV_KEY_PATH
            value: /tmp/.ssh/privatekey
          - name: LOG_LEVEL
            value: info
          envFrom:
          - configMapRef:
              name: environment-config
          - configMapRef:
              name: accounts-db-config
          image: gcr.io/bank-of-anthos-ci/userservice:v0.5.10
          imagePullPolicy: IfNotPresent
          name: userservice
          ports:
          - containerPort: 8080
            name: http-server
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 300m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/.ssh
            name: keys
            readOnly: true
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 5
        volumes:
        - name: keys
          secret:
            defaultMode: 420
            items:
            - key: jwtRS256.key
              path: privatekey
            - key: jwtRS256.key.pub
              path: publickey
            secretName: jwt-key
        - emptyDir: {}
          name: tmp
  status:
    conditions:
    - lastTransitionTime: "2023-03-19T10:57:26Z"
      lastUpdateTime: "2023-03-19T10:57:26Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2023-03-19T10:57:11Z"
      lastUpdateTime: "2023-03-20T15:40:35Z"
      message: ReplicaSet "userservice-6586dfdd5d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-19T10:57:10Z"
    generation: 1
    labels:
      ibm-cloud-provider-ip: 158-177-65-42
      ibm-cloud-provider-lb-app: keepalived
      ibm-cloud-provider-lb-name: a3ae8d4f4434849469c226c5e824584f
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:ibm-cloud-provider-ip: {}
            f:ibm-cloud-provider-lb-app: {}
            f:ibm-cloud-provider-lb-name: {}
        f:spec:
          f:minReadySeconds: {}
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:ibm-cloud-provider-ip: {}
                f:ibm-cloud-provider-lb-app: {}
                f:ibm-cloud-provider-lb-name: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:nodeAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"ibm-cloud-provider-ip-158-177-65-42"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"FEATURES"}:
                      .: {}
                      f:name: {}
                    k:{"name":"VIRTUAL_IP"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:capabilities:
                      .: {}
                      f:add: {}
                    f:privileged: {}
                    f:runAsGroup: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/status"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:hostNetwork: {}
              f:initContainers:
                .: {}
                k:{"name":"ibm-cloud-provider-ip-keepalived-init"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:runAsGroup: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/status"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"keepalived-status"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
      manager: ibm-cloud-controller-manager
      operation: Update
      time: "2023-03-19T10:57:10Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-26T18:22:25Z"
    name: ibm-cloud-provider-ip-158-177-65-42
    namespace: ibm-system
    resourceVersion: "1449634"
    uid: c5d1cc46-d1b4-4c69-bd81-e75560d5eda5
  spec:
    minReadySeconds: 90
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 1
    selector:
      matchLabels:
        ibm-cloud-provider-ip: 158-177-65-42
        ibm-cloud-provider-lb-name: a3ae8d4f4434849469c226c5e824584f
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          ibm-cloud-provider-ip: 158-177-65-42
          ibm-cloud-provider-lb-app: keepalived
          ibm-cloud-provider-lb-name: a3ae8d4f4434849469c226c5e824584f
        name: ibm-cloud-provider-ip-158-177-65-42
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: publicVLAN
                  operator: In
                  values:
                  - "3319718"
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: ibm-cloud-provider-lb-app
                    operator: In
                    values:
                    - keepalived
                topologyKey: kubernetes.io/hostname
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  ibm-cloud-provider-ip: 158-177-65-42
                  ibm-cloud-provider-lb-name: a3ae8d4f4434849469c226c5e824584f
              topologyKey: kubernetes.io/hostname
        containers:
        - env:
          - name: VIRTUAL_IP
            value: 158.177.65.42
          - name: FEATURES
          image: de.icr.io/armada-master/keepalived:2383
          imagePullPolicy: IfNotPresent
          name: ibm-cloud-provider-ip-158-177-65-42
          resources:
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
            privileged: false
            runAsGroup: 2000
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /status
            name: keepalived-status
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /usr/local/bin/hostDirPerms
          image: de.icr.io/armada-master/keepalived:2383
          imagePullPolicy: IfNotPresent
          name: ibm-cloud-provider-ip-keepalived-init
          resources:
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            runAsGroup: 0
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /status
            name: keepalived-status
        priorityClassName: ibm-app-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: dedicated
          value: gateway
        - key: dedicated
          value: edge
        volumes:
        - hostPath:
            path: /tmp/keepalived
            type: ""
          name: keepalived-status
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2023-03-19T10:58:43Z"
      lastUpdateTime: "2023-03-19T10:58:43Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2023-03-19T10:57:10Z"
      lastUpdateTime: "2023-03-19T11:00:13Z"
      message: ReplicaSet "ibm-cloud-provider-ip-158-177-65-42-dfbfcd5fd" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-15T09:41:05Z"
    generation: 1
    labels:
      ibm-cloud-provider-ip: 158-177-65-46
      ibm-cloud-provider-lb-app: keepalived
      ibm-cloud-provider-lb-name: a95e34b653e7249dc986e6d973eec8c0
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:ibm-cloud-provider-ip: {}
            f:ibm-cloud-provider-lb-app: {}
            f:ibm-cloud-provider-lb-name: {}
        f:spec:
          f:minReadySeconds: {}
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:ibm-cloud-provider-ip: {}
                f:ibm-cloud-provider-lb-app: {}
                f:ibm-cloud-provider-lb-name: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:nodeAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"ibm-cloud-provider-ip-158-177-65-46"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"FEATURES"}:
                      .: {}
                      f:name: {}
                    k:{"name":"VIRTUAL_IP"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:capabilities:
                      .: {}
                      f:add: {}
                    f:privileged: {}
                    f:runAsGroup: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/status"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:hostNetwork: {}
              f:initContainers:
                .: {}
                k:{"name":"ibm-cloud-provider-ip-keepalived-init"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:runAsGroup: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/status"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"keepalived-status"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
      manager: ibm-cloud-controller-manager
      operation: Update
      time: "2023-03-15T09:41:05Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-15T09:42:46Z"
    name: ibm-cloud-provider-ip-158-177-65-46
    namespace: ibm-system
    resourceVersion: "3045"
    uid: 6b606b2f-87ab-4da4-82d0-0c836bbd5c60
  spec:
    minReadySeconds: 90
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 1
    selector:
      matchLabels:
        ibm-cloud-provider-ip: 158-177-65-46
        ibm-cloud-provider-lb-name: a95e34b653e7249dc986e6d973eec8c0
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          ibm-cloud-provider-ip: 158-177-65-46
          ibm-cloud-provider-lb-app: keepalived
          ibm-cloud-provider-lb-name: a95e34b653e7249dc986e6d973eec8c0
        name: ibm-cloud-provider-ip-158-177-65-46
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: publicVLAN
                  operator: In
                  values:
                  - "3319718"
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: ibm-cloud-provider-lb-app
                    operator: In
                    values:
                    - keepalived
                topologyKey: kubernetes.io/hostname
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  ibm-cloud-provider-ip: 158-177-65-46
                  ibm-cloud-provider-lb-name: a95e34b653e7249dc986e6d973eec8c0
              topologyKey: kubernetes.io/hostname
        containers:
        - env:
          - name: VIRTUAL_IP
            value: 158.177.65.46
          - name: FEATURES
          image: de.icr.io/armada-master/keepalived:2383
          imagePullPolicy: IfNotPresent
          name: ibm-cloud-provider-ip-158-177-65-46
          resources:
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
            privileged: false
            runAsGroup: 2000
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /status
            name: keepalived-status
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /usr/local/bin/hostDirPerms
          image: de.icr.io/armada-master/keepalived:2383
          imagePullPolicy: IfNotPresent
          name: ibm-cloud-provider-ip-keepalived-init
          resources:
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            runAsGroup: 0
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /status
            name: keepalived-status
        priorityClassName: ibm-app-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: dedicated
          value: gateway
        - key: dedicated
          value: edge
        volumes:
        - hostPath:
            path: /tmp/keepalived
            type: ""
          name: keepalived-status
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2023-03-15T09:42:46Z"
      lastUpdateTime: "2023-03-15T09:42:46Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2023-03-15T09:41:05Z"
      lastUpdateTime: "2023-03-15T09:42:46Z"
      message: ReplicaSet "ibm-cloud-provider-ip-158-177-65-46-5f65d64758" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"k8s-app":"calico-kube-controllers"},"name":"calico-kube-controllers","namespace":"kube-system"},"spec":{"replicas":1,"revisionHistoryLimit":5,"selector":{"matchLabels":{"k8s-app":"calico-kube-controllers"}},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"k8s-app":"calico-kube-controllers"},"name":"calico-kube-controllers","namespace":"kube-system"},"spec":{"containers":[{"env":[{"name":"ENABLED_CONTROLLERS","value":"node"},{"name":"DATASTORE_TYPE","value":"kubernetes"}],"image":"de.icr.io/armada-master/calico/kube-controllers:v3.24.5","imagePullPolicy":"IfNotPresent","livenessProbe":{"exec":{"command":["/usr/bin/check-status","-l"]},"failureThreshold":6,"initialDelaySeconds":10,"periodSeconds":10,"timeoutSeconds":10},"name":"calico-kube-controllers","readinessProbe":{"exec":{"command":["/usr/bin/check-status","-r"]},"periodSeconds":10},"resources":{"limits":{"memory":"3Gi"},"requests":{"cpu":"10m","memory":"25Mi"}}}],"priorityClassName":"system-cluster-critical","serviceAccountName":"calico-kube-controllers","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"}]}}}}
    creationTimestamp: "2023-03-15T09:19:32Z"
    generation: 1
    labels:
      k8s-app: calico-kube-controllers
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:k8s-app: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:k8s-app: {}
              f:name: {}
              f:namespace: {}
            f:spec:
              f:containers:
                k:{"name":"calico-kube-controllers"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"DATASTORE_TYPE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ENABLED_CONTROLLERS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2023-03-15T09:19:32Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:12Z"
    name: calico-kube-controllers
    namespace: kube-system
    resourceVersion: "1449392"
    uid: d9f3d2f3-a42e-43cb-927a-5165b3d01e32
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 5
    selector:
      matchLabels:
        k8s-app: calico-kube-controllers
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: calico-kube-controllers
        name: calico-kube-controllers
        namespace: kube-system
      spec:
        containers:
        - env:
          - name: ENABLED_CONTROLLERS
            value: node
          - name: DATASTORE_TYPE
            value: kubernetes
          image: de.icr.io/armada-master/calico/kube-controllers:v3.24.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /usr/bin/check-status
              - -l
            failureThreshold: 6
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: calico-kube-controllers
          readinessProbe:
            exec:
              command:
              - /usr/bin/check-status
              - -r
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 3Gi
            requests:
              cpu: 10m
              memory: 25Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: calico-kube-controllers
        serviceAccountName: calico-kube-controllers
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-03-15T09:19:32Z"
      lastUpdateTime: "2023-03-15T09:26:31Z"
      message: ReplicaSet "calico-kube-controllers-68c88d7549" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-03-26T18:21:12Z"
      lastUpdateTime: "2023-03-26T18:21:12Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"k8s-app":"calico-typha"},"name":"calico-typha","namespace":"kube-system"},"spec":{"minReadySeconds":15,"replicas":3,"revisionHistoryLimit":2,"selector":{"matchLabels":{"k8s-app":"calico-typha"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":2},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"cluster-autoscaler.kubernetes.io/safe-to-evict":"true"},"labels":{"k8s-app":"calico-typha"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"k8s-app","operator":"In","values":["calico-typha"]}]},"topologyKey":"topology.kubernetes.io/zone"},"weight":100}],"requiredDuringSchedulingIgnoredDuringExecution":[{"labelSelector":{"matchExpressions":[{"key":"k8s-app","operator":"In","values":["calico-typha"]}]},"topologyKey":"kubernetes.io/hostname"}]}},"containers":[{"env":[{"name":"TYPHA_LOGSEVERITYSCREEN","value":"info"},{"name":"TYPHA_LOGFILEPATH","value":"none"},{"name":"TYPHA_LOGSEVERITYSYS","value":"none"},{"name":"TYPHA_CONNECTIONREBALANCINGMODE","value":"kubernetes"},{"name":"TYPHA_DATASTORETYPE","value":"kubernetes"},{"name":"TYPHA_HEALTHENABLED","value":"true"}],"envFrom":[{"configMapRef":{"name":"kubernetes-services-endpoint","optional":true}}],"image":"de.icr.io/armada-master/calico/typha:v3.24.5","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"host":"localhost","path":"/liveness","port":9098},"initialDelaySeconds":30,"periodSeconds":30,"timeoutSeconds":10},"name":"calico-typha","ports":[{"containerPort":5473,"name":"calico-typha","protocol":"TCP"}],"readinessProbe":{"httpGet":{"host":"localhost","path":"/readiness","port":9098},"periodSeconds":10,"timeoutSeconds":10},"resources":{"requests":{"cpu":"250m","memory":"80Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"runAsNonRoot":true}}],"hostNetwork":true,"priorityClassName":"system-cluster-critical","securityContext":{"fsGroup":65534},"serviceAccountName":"calico-node","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"}],"topologySpreadConstraints":[{"labelSelector":{"matchLabels":{"k8s-app":"calico-typha"}},"maxSkew":1,"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}]}}}}
    creationTimestamp: "2023-03-15T09:19:32Z"
    generation: 1
    labels:
      k8s-app: calico-typha
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:k8s-app: {}
        f:spec:
          f:minReadySeconds: {}
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:cluster-autoscaler.kubernetes.io/safe-to-evict: {}
              f:labels:
                .: {}
                f:k8s-app: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"calico-typha"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"TYPHA_CONNECTIONREBALANCINGMODE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TYPHA_DATASTORETYPE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TYPHA_HEALTHENABLED"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TYPHA_LOGFILEPATH"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TYPHA_LOGSEVERITYSCREEN"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TYPHA_LOGSEVERITYSYS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:host: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":5473,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:hostPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:host: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:runAsNonRoot: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:hostNetwork: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:topologySpreadConstraints:
                .: {}
                k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
                  .: {}
                  f:labelSelector: {}
                  f:maxSkew: {}
                  f:topologyKey: {}
                  f:whenUnsatisfiable: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2023-03-15T09:19:32Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:unavailableReplicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-26T18:20:51Z"
    name: calico-typha
    namespace: kube-system
    resourceVersion: "1448926"
    uid: 3be5ea63-f56c-4b29-ac6b-dedc8b4cb1dc
  spec:
    minReadySeconds: 15
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        k8s-app: calico-typha
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 2
      type: RollingUpdate
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        creationTimestamp: null
        labels:
          k8s-app: calico-typha
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - calico-typha
                topologyKey: topology.kubernetes.io/zone
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: k8s-app
                  operator: In
                  values:
                  - calico-typha
              topologyKey: kubernetes.io/hostname
        containers:
        - env:
          - name: TYPHA_LOGSEVERITYSCREEN
            value: info
          - name: TYPHA_LOGFILEPATH
            value: none
          - name: TYPHA_LOGSEVERITYSYS
            value: none
          - name: TYPHA_CONNECTIONREBALANCINGMODE
            value: kubernetes
          - name: TYPHA_DATASTORETYPE
            value: kubernetes
          - name: TYPHA_HEALTHENABLED
            value: "true"
          envFrom:
          - configMapRef:
              name: kubernetes-services-endpoint
              optional: true
          image: de.icr.io/armada-master/calico/typha:v3.24.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: localhost
              path: /liveness
              port: 9098
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          name: calico-typha
          ports:
          - containerPort: 5473
            hostPort: 5473
            name: calico-typha
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: localhost
              path: /readiness
              port: 9098
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 250m
              memory: 80Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
        serviceAccount: calico-node
        serviceAccountName: calico-node
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              k8s-app: calico-typha
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2023-03-15T09:26:15Z"
      lastUpdateTime: "2023-03-15T09:26:15Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2023-03-15T09:19:32Z"
      lastUpdateTime: "2023-03-15T09:28:25Z"
      message: ReplicaSet "calico-typha-7d8459ddf6" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 2
    replicas: 3
    unavailableReplicas: 1
    updatedReplicas: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      armada-service: cruiser-kube-addons
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"armada-service":"cruiser-kube-addons","version":"1.25.6_1534"},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kube-dns","kubernetes.io/cluster-service":"true","kubernetes.io/name":"CoreDNS"},"name":"coredns","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"kube-dns"}},"strategy":{"rollingUpdate":{"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"k8s-app":"kube-dns"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"k8s-app","operator":"In","values":["kube-dns"]}]},"topologyKey":"topology.kubernetes.io/zone"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"k8s-app","operator":"In","values":["kube-dns"]}]},"topologyKey":"kubernetes.io/hostname"},"weight":100}]}},"containers":[{"args":["-conf","/etc/coredns/Corefile"],"image":"de.icr.io/armada-master/coredns:1.10.0","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":60,"successThreshold":1,"timeoutSeconds":5},"name":"coredns","ports":[{"containerPort":53,"name":"dns","protocol":"UDP"},{"containerPort":53,"name":"dns-tcp","protocol":"TCP"},{"containerPort":9153,"name":"metrics","protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/ready","port":8181,"scheme":"HTTP"}},"resources":{"limits":{"memory":"400Mi"},"requests":{"cpu":"100m","memory":"70Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"add":["NET_BIND_SERVICE"],"drop":["all"]},"readOnlyRootFilesystem":true,"runAsUser":0,"seccompProfile":{"type":"RuntimeDefault"}},"volumeMounts":[{"mountPath":"/etc/coredns","name":"config-volume","readOnly":true}]}],"dnsPolicy":"Default","priorityClassName":"system-cluster-critical","serviceAccountName":"coredns","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"key":"dedicated","value":"gpu-task"}],"topologySpreadConstraints":[{"labelSelector":{"matchLabels":{"k8s-app":"kube-dns"}},"maxSkew":1,"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"},{"labelSelector":{"matchLabels":{"k8s-app":"kube-dns"}},"maxSkew":1,"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}],"volumes":[{"configMap":{"items":[],"name":"coredns"},"name":"config-volume"}]}}}}
      version: 1.25.6_1534
    creationTimestamp: "2023-03-15T09:19:49Z"
    generation: 3
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:replicas: {}
      manager: cluster-proportional-autoscaler
      operation: Update
      subresource: scale
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:armada-service: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
            f:version: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:k8s-app: {}
            f:kubernetes.io/cluster-service: {}
            f:kubernetes.io/name: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:k8s-app: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"coredns"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":53,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":53,"protocol":"UDP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":9153,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:add: {}
                      f:drop: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsUser: {}
                    f:seccompProfile:
                      .: {}
                      f:type: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/coredns"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:topologySpreadConstraints:
                .: {}
                k:{"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}:
                  .: {}
                  f:labelSelector: {}
                  f:maxSkew: {}
                  f:topologyKey: {}
                  f:whenUnsatisfiable: {}
                k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
                  .: {}
                  f:labelSelector: {}
                  f:maxSkew: {}
                  f:topologyKey: {}
                  f:whenUnsatisfiable: {}
              f:volumes:
                .: {}
                k:{"name":"config-volume"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2023-03-15T09:22:56Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:16Z"
    name: coredns
    namespace: kube-system
    resourceVersion: "1449446"
    uid: dbf84334-8404-46a6-91ed-f229e5179b06
  spec:
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: topology.kubernetes.io/zone
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: de.icr.io/armada-master/coredns:1.10.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 400Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: dedicated
          value: gpu-task
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              k8s-app: kube-dns
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        - labelSelector:
            matchLabels:
              k8s-app: kube-dns
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
        volumes:
        - configMap:
            defaultMode: 420
            name: coredns
          name: config-volume
  status:
    availableReplicas: 3
    conditions:
    - lastTransitionTime: "2023-03-15T09:19:49Z"
      lastUpdateTime: "2023-03-15T09:26:19Z"
      message: ReplicaSet "coredns-599d67449d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-03-26T18:21:16Z"
      lastUpdateTime: "2023-03-26T18:21:16Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 3
    readyReplicas: 3
    replicas: 3
    updatedReplicas: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      armada-service: cruiser-kube-addons
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"armada-service":"cruiser-kube-addons","version":"1.25.6_1534"},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"coredns-autoscaler","kubernetes.io/cluster-service":"true"},"name":"coredns-autoscaler","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"coredns-autoscaler"}},"template":{"metadata":{"labels":{"k8s-app":"coredns-autoscaler"}},"spec":{"containers":[{"command":["/cluster-proportional-autoscaler","--namespace=kube-system","--configmap=coredns-autoscaler","--target=Deployment/coredns","--default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true,\"min\":3,\"includeUnschedulableNodes\":true}}","--logtostderr=true","--v=2"],"image":"de.icr.io/armada-master/cluster-proportional-autoscaler:1.8.6","name":"autoscaler","resources":{"requests":{"cpu":"1m","memory":"5Mi"}}}],"priorityClassName":"system-cluster-critical","securityContext":{"fsGroup":65534,"runAsGroup":65532,"runAsUser":65532,"seccompProfile":{"type":"RuntimeDefault"},"supplementalGroups":[65534]},"serviceAccountName":"coredns-autoscaler","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"}]}}}}
      version: 1.25.6_1534
    creationTimestamp: "2023-03-15T09:19:50Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: coredns-autoscaler
      kubernetes.io/cluster-service: "true"
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:armada-service: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
            f:version: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:k8s-app: {}
            f:kubernetes.io/cluster-service: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:k8s-app: {}
            f:spec:
              f:containers:
                k:{"name":"autoscaler"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsUser: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
                f:supplementalGroups: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2023-03-15T09:22:56Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:06Z"
    name: coredns-autoscaler
    namespace: kube-system
    resourceVersion: "1449330"
    uid: 98df2359-8c3e-4c3a-a0e3-ff71e91ed87c
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: coredns-autoscaler
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: coredns-autoscaler
      spec:
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=coredns-autoscaler
          - --target=Deployment/coredns
          - --default-params={"linear":{"coresPerReplica":256,"nodesPerReplica":16,"preventSinglePointFailure":true,"min":3,"includeUnschedulableNodes":true}}
          - --logtostderr=true
          - --v=2
          image: de.icr.io/armada-master/cluster-proportional-autoscaler:1.8.6
          imagePullPolicy: IfNotPresent
          name: autoscaler
          resources:
            requests:
              cpu: 1m
              memory: 5Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65532
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
          supplementalGroups:
          - 65534
        serviceAccount: coredns-autoscaler
        serviceAccountName: coredns-autoscaler
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-03-15T09:19:50Z"
      lastUpdateTime: "2023-03-15T09:26:15Z"
      message: ReplicaSet "coredns-autoscaler-5b84849d77" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-03-26T18:21:06Z"
      lastUpdateTime: "2023-03-26T18:21:06Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"dashboard-metrics-scraper"},"name":"dashboard-metrics-scraper","namespace":"kube-system"},"spec":{"revisionHistoryLimit":10,"selector":{"matchLabels":{"k8s-app":"dashboard-metrics-scraper"}},"template":{"metadata":{"labels":{"k8s-app":"dashboard-metrics-scraper"}},"spec":{"containers":[{"image":"de.icr.io/armada-master/kubernetesui-metrics-scraper:v1.0.8","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/","port":8000,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":30},"name":"dashboard-metrics-scraper","ports":[{"containerPort":8000,"protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/","port":8000,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":30},"resources":{"requests":{"cpu":"1m","memory":"10Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true,"runAsGroup":2001,"runAsUser":1001,"seccompProfile":{"type":"RuntimeDefault"}},"volumeMounts":[{"mountPath":"/tmp","name":"tmp-volume"}]}],"priorityClassName":"system-cluster-critical","serviceAccountName":"kubernetes-dashboard","tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"}],"volumes":[{"emptyDir":{},"name":"tmp-volume"}]}}}}
    creationTimestamp: "2023-03-15T09:22:45Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: dashboard-metrics-scraper
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:k8s-app: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:k8s-app: {}
            f:spec:
              f:containers:
                k:{"name":"dashboard-metrics-scraper"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8000,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsGroup: {}
                    f:runAsUser: {}
                    f:seccompProfile:
                      .: {}
                      f:type: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"tmp-volume"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2023-03-15T09:22:45Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:42Z"
    name: dashboard-metrics-scraper
    namespace: kube-system
    resourceVersion: "1449525"
    uid: aae5ba97-0751-4414-8861-5b0245a47af3
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: dashboard-metrics-scraper
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: dashboard-metrics-scraper
      spec:
        containers:
        - image: de.icr.io/armada-master/kubernetesui-metrics-scraper:v1.0.8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: dashboard-metrics-scraper
          ports:
          - containerPort: 8000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          resources:
            requests:
              cpu: 1m
              memory: 10Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-03-15T09:22:45Z"
      lastUpdateTime: "2023-03-15T09:27:05Z"
      message: ReplicaSet "dashboard-metrics-scraper-c69fc9c89" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-03-26T18:21:42Z"
      lastUpdateTime: "2023-03-26T18:21:42Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      armada-service: cruiser-kube-addons
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"armada-service":"cruiser-kube-addons","version":"1.25.6_1534"},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","app":"ibm-file-plugin","kubernetes.io/cluster-service":"true"},"name":"ibm-file-plugin","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"ibm-file-plugin"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"ibm-file-plugin","tier":"frontend"}},"spec":{"containers":[{"args":["-provisioner=ibm.io/ibmc-file"],"env":[{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"PLUGIN_IMAGE","value":"de.icr.io/armada-master/storage-file-plugin:427"},{"name":"CLUSTER_ID","value":"cg8om62f01beu8rudp30"},{"name":"CM_SUBNET","value":"subnet-config"},{"name":"WATCHER","value":"false"},{"name":"STORAGE_CONFIG_PATH","value":"/etc/storage_ibmc"},{"name":"CRN_CONFIGMAP_PATH","value":"/etc/ibm_crn_info"}],"image":"de.icr.io/armada-master/storage-file-plugin:427","imagePullPolicy":"IfNotPresent","name":"ibm-file-plugin-container","resources":{"limits":{"cpu":"200m","memory":"200Mi"},"requests":{"cpu":"50m","memory":"100Mi"}},"securityContext":{"privileged":true,"runAsNonRoot":false,"runAsUser":0},"volumeMounts":[{"mountPath":"/etc/storage_ibmc","name":"storage-plugin-secret"},{"mountPath":"/etc/ibm_crn_info","name":"crn-info-ibmc"}]}],"priorityClassName":"system-cluster-critical","serviceAccountName":"ibm-file-plugin","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"}],"volumes":[{"name":"storage-plugin-secret","secret":{"secretName":"storage-secret-store"}},{"configMap":{"name":"crn-info-ibmc"},"name":"crn-info-ibmc"}]}}}}
      version: 1.25.6_1534
    creationTimestamp: "2023-03-15T09:20:41Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-file-plugin
      kubernetes.io/cluster-service: "true"
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:armada-service: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
            f:version: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:app: {}
            f:kubernetes.io/cluster-service: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:tier: {}
            f:spec:
              f:containers:
                k:{"name":"ibm-file-plugin-container"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"CLUSTER_ID"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CM_SUBNET"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CRN_CONFIGMAP_PATH"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"PLUGIN_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"STORAGE_CONFIG_PATH"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"WATCHER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/ibm_crn_info"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/storage_ibmc"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"crn-info-ibmc"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"storage-plugin-secret"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2023-03-15T09:22:56Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:11Z"
    name: ibm-file-plugin
    namespace: kube-system
    resourceVersion: "1449383"
    uid: 5bf946aa-20e4-4f48-8939-458c1a591341
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ibm-file-plugin
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ibm-file-plugin
          tier: frontend
      spec:
        containers:
        - args:
          - -provisioner=ibm.io/ibmc-file
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: PLUGIN_IMAGE
            value: de.icr.io/armada-master/storage-file-plugin:427
          - name: CLUSTER_ID
            value: cg8om62f01beu8rudp30
          - name: CM_SUBNET
            value: subnet-config
          - name: WATCHER
            value: "false"
          - name: STORAGE_CONFIG_PATH
            value: /etc/storage_ibmc
          - name: CRN_CONFIGMAP_PATH
            value: /etc/ibm_crn_info
          image: de.icr.io/armada-master/storage-file-plugin:427
          imagePullPolicy: IfNotPresent
          name: ibm-file-plugin-container
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            privileged: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/storage_ibmc
            name: storage-plugin-secret
          - mountPath: /etc/ibm_crn_info
            name: crn-info-ibmc
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ibm-file-plugin
        serviceAccountName: ibm-file-plugin
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - name: storage-plugin-secret
          secret:
            defaultMode: 420
            secretName: storage-secret-store
        - configMap:
            defaultMode: 420
            name: crn-info-ibmc
          name: crn-info-ibmc
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-03-15T09:20:41Z"
      lastUpdateTime: "2023-03-15T09:26:30Z"
      message: ReplicaSet "ibm-file-plugin-746759ffb4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-03-26T18:21:11Z"
      lastUpdateTime: "2023-03-26T18:21:11Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      armada-service: cruiser-kube-addons
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"armada-service":"cruiser-kube-addons","version":"1.25.6_1534"},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","app":"ibm-file-plugin","kubernetes.io/cluster-service":"true"},"name":"ibm-storage-watcher","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"ibm-storage-watcher"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"ibm-storage-watcher","tier":"frontend"}},"spec":{"containers":[{"args":["-provisioner=ibm.io/ibmc-file"],"env":[{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"CLUSTER_ID","value":"cg8om62f01beu8rudp30"},{"name":"CM_SUBNET","value":"subnet-config"},{"name":"WATCHER","value":"true"},{"name":"STORAGE_CONFIG_PATH","value":"/etc/storage_ibmc"},{"name":"CRN_CONFIGMAP_PATH","value":"/etc/ibm_crn_info"}],"image":"de.icr.io/armada-master/storage-file-plugin:427","imagePullPolicy":"IfNotPresent","name":"ibm-storage-watcher-container","resources":{"limits":{"cpu":"200m","memory":"200Mi"},"requests":{"cpu":"50m","memory":"100Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"privileged":false,"runAsNonRoot":true,"runAsUser":2000},"volumeMounts":[{"mountPath":"/etc/storage_ibmc","name":"storage-plugin-secret"},{"mountPath":"/etc/ibm_crn_info","name":"crn-info-ibmc"}]}],"priorityClassName":"system-cluster-critical","serviceAccountName":"ibm-file-plugin","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"}],"volumes":[{"name":"storage-plugin-secret","secret":{"secretName":"storage-secret-store"}},{"configMap":{"name":"crn-info-ibmc"},"name":"crn-info-ibmc"}]}}}}
      version: 1.25.6_1534
    creationTimestamp: "2023-03-15T09:20:42Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-file-plugin
      kubernetes.io/cluster-service: "true"
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:armada-service: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
            f:version: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:app: {}
            f:kubernetes.io/cluster-service: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:tier: {}
            f:spec:
              f:containers:
                k:{"name":"ibm-storage-watcher-container"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"CLUSTER_ID"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CM_SUBNET"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CRN_CONFIGMAP_PATH"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"STORAGE_CONFIG_PATH"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"WATCHER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:privileged: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/ibm_crn_info"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/storage_ibmc"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"crn-info-ibmc"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"storage-plugin-secret"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2023-03-15T09:22:57Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:11Z"
    name: ibm-storage-watcher
    namespace: kube-system
    resourceVersion: "1449385"
    uid: 98af3c48-3c56-41de-9930-6b6cfe85b0ed
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ibm-storage-watcher
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ibm-storage-watcher
          tier: frontend
      spec:
        containers:
        - args:
          - -provisioner=ibm.io/ibmc-file
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CLUSTER_ID
            value: cg8om62f01beu8rudp30
          - name: CM_SUBNET
            value: subnet-config
          - name: WATCHER
            value: "true"
          - name: STORAGE_CONFIG_PATH
            value: /etc/storage_ibmc
          - name: CRN_CONFIGMAP_PATH
            value: /etc/ibm_crn_info
          image: de.icr.io/armada-master/storage-file-plugin:427
          imagePullPolicy: IfNotPresent
          name: ibm-storage-watcher-container
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            runAsNonRoot: true
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/storage_ibmc
            name: storage-plugin-secret
          - mountPath: /etc/ibm_crn_info
            name: crn-info-ibmc
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ibm-file-plugin
        serviceAccountName: ibm-file-plugin
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - name: storage-plugin-secret
          secret:
            defaultMode: 420
            secretName: storage-secret-store
        - configMap:
            defaultMode: 420
            name: crn-info-ibmc
          name: crn-info-ibmc
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-03-15T09:20:42Z"
      lastUpdateTime: "2023-03-15T09:26:30Z"
      message: ReplicaSet "ibm-storage-watcher-7fdf48b55d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-03-26T18:21:11Z"
      lastUpdateTime: "2023-03-26T18:21:11Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      armada-service: cruiser-kube-addons
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"armada-service":"cruiser-kube-addons","version":"1.25.6_1534"},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","app":"ibmcloud-block-storage-plugin","kubernetes.io/cluster-service":"true","release":"ibmc-block"},"name":"ibmcloud-block-storage-plugin","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"ibmcloud-block-storage-plugin","release":"ibmc-block"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"ibmcloud-block-storage-plugin","release":"ibmc-block"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"ibm-cloud.kubernetes.io/iaas-provider","operator":"In","values":["softlayer"]},{"key":"kubernetes.io/arch","operator":"In","values":["amd64"]}]}]}}},"containers":[{"args":["--provisioner=ibm.io/ibmc-block"],"env":[{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"PLUGIN_IMAGE","value":"de.icr.io/armada-master/ibmcloud-block-storage-plugin:v2.3.7"},{"name":"DEBUG_TRACE","value":"false"},{"name":"STORAGE_CONFIG_PATH","value":"/etc/storage_ibmc"},{"name":"IBMC_FEATURE_GATES","value":"KeyManagementBYOK=true"}],"image":"de.icr.io/armada-master/ibmcloud-block-storage-plugin:v2.3.7","imagePullPolicy":"IfNotPresent","livenessProbe":{"exec":{"command":["ls","/etc/storage_ibmc"]},"failureThreshold":3,"initialDelaySeconds":30,"periodSeconds":60,"timeoutSeconds":5},"name":"ibmcloud-block-storage-plugin-container","resources":{"limits":{"cpu":"300m","memory":"300Mi"},"requests":{"cpu":"50m","memory":"100Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"privileged":false,"runAsNonRoot":true,"runAsUser":2000},"volumeMounts":[{"mountPath":"/etc/storage_ibmc","name":"customer-auth"}]}],"priorityClassName":"system-cluster-critical","serviceAccountName":"ibmcloud-block-storage-plugin","volumes":[{"name":"customer-auth","secret":{"secretName":"storage-secret-store"}}]}}}}
      version: 1.25.6_1534
    creationTimestamp: "2023-03-15T09:20:55Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibmcloud-block-storage-plugin
      kubernetes.io/cluster-service: "true"
      release: ibmc-block
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:armada-service: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
            f:version: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:app: {}
            f:kubernetes.io/cluster-service: {}
            f:release: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:release: {}
            f:spec:
              f:affinity:
                .: {}
                f:nodeAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"ibmcloud-block-storage-plugin-container"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"DEBUG_TRACE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"IBMC_FEATURE_GATES"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"PLUGIN_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"STORAGE_CONFIG_PATH"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:privileged: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/storage_ibmc"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"customer-auth"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2023-03-15T09:22:56Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:09Z"
    name: ibmcloud-block-storage-plugin
    namespace: kube-system
    resourceVersion: "1449363"
    uid: 3c69c1ac-5650-44a2-8a17-433474de94ba
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ibmcloud-block-storage-plugin
        release: ibmc-block
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ibmcloud-block-storage-plugin
          release: ibmc-block
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: ibm-cloud.kubernetes.io/iaas-provider
                  operator: In
                  values:
                  - softlayer
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
        containers:
        - args:
          - --provisioner=ibm.io/ibmc-block
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: PLUGIN_IMAGE
            value: de.icr.io/armada-master/ibmcloud-block-storage-plugin:v2.3.7
          - name: DEBUG_TRACE
            value: "false"
          - name: STORAGE_CONFIG_PATH
            value: /etc/storage_ibmc
          - name: IBMC_FEATURE_GATES
            value: KeyManagementBYOK=true
          image: de.icr.io/armada-master/ibmcloud-block-storage-plugin:v2.3.7
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - ls
              - /etc/storage_ibmc
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          name: ibmcloud-block-storage-plugin-container
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            runAsNonRoot: true
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/storage_ibmc
            name: customer-auth
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ibmcloud-block-storage-plugin
        serviceAccountName: ibmcloud-block-storage-plugin
        terminationGracePeriodSeconds: 30
        volumes:
        - name: customer-auth
          secret:
            defaultMode: 420
            secretName: storage-secret-store
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-03-15T09:20:55Z"
      lastUpdateTime: "2023-03-15T09:26:21Z"
      message: ReplicaSet "ibmcloud-block-storage-plugin-74dc98bc8" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-03-26T18:21:09Z"
      lastUpdateTime: "2023-03-26T18:21:09Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      razee.io/build-url: https://travis.ibm.com/alchemy-containers/armada-ingress-microservice/builds/87269293
      razee.io/source-url: https://github.ibm.com/alchemy-containers/armada-ingress-microservice/commit/6c850dc1996a468700d2bf02ec4a933a52d54130
    creationTimestamp: "2023-03-24T15:07:04Z"
    generation: 1
    labels:
      app: ingress-cluster-healthcheck
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:razee.io/build-url: {}
            f:razee.io/source-url: {}
          f:labels:
            .: {}
            f:app: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:razee.io/build-url: {}
                f:razee.io/source-url: {}
              f:labels:
                .: {}
                f:app: {}
                f:appVersion: {}
            f:spec:
              f:containers:
                k:{"name":"ingress-cluster-healthcheck"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsGroup: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:runAsGroup: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: armada-ingress-microservice
      operation: Update
      time: "2023-03-24T15:07:04Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-24T15:07:07Z"
    name: ingress-cluster-healthcheck
    namespace: kube-system
    resourceVersion: "1084366"
    uid: 16fcbdca-da5f-4e24-9b34-f67f2241bfb1
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: ingress-cluster-healthcheck
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          razee.io/build-url: https://travis.ibm.com/alchemy-containers/armada-ingress-microservice/builds/87269293
          razee.io/source-url: https://github.ibm.com/alchemy-containers/armada-ingress-microservice/commit/6c850dc1996a468700d2bf02ec4a933a52d54130
        creationTimestamp: null
        labels:
          app: ingress-cluster-healthcheck
          appVersion: 1.0.0_402
      spec:
        containers:
        - image: us.icr.io/armada-master/armada-ingress-cluster-healthcheck:1.0.0_402
          imagePullPolicy: Always
          name: ingress-cluster-healthcheck
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 2000
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 2000
          runAsUser: 2000
        serviceAccount: ibm-k8s-ingress
        serviceAccountName: ibm-k8s-ingress
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-03-24T15:07:07Z"
      lastUpdateTime: "2023-03-24T15:07:07Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2023-03-24T15:07:04Z"
      lastUpdateTime: "2023-03-24T15:07:07Z"
      message: ReplicaSet "ingress-cluster-healthcheck-7997bfb4c5" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kubernetes-dashboard","kubernetes.io/cluster-service":"true"},"name":"kubernetes-dashboard","namespace":"kube-system"},"spec":{"revisionHistoryLimit":10,"selector":{"matchLabels":{"k8s-app":"kubernetes-dashboard"}},"template":{"metadata":{"labels":{"k8s-app":"kubernetes-dashboard"}},"spec":{"containers":[{"args":["--auto-generate-certificates","--namespace=kube-system"],"image":"de.icr.io/armada-master/kubernetesui-dashboard:v2.7.0","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/","port":8443,"scheme":"HTTPS"},"initialDelaySeconds":30,"timeoutSeconds":30},"name":"kubernetes-dashboard","ports":[{"containerPort":8443,"protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/","port":8443,"scheme":"HTTPS"},"initialDelaySeconds":10,"timeoutSeconds":30},"resources":{"requests":{"cpu":"50m","memory":"100Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true,"runAsGroup":2001,"runAsUser":1001,"seccompProfile":{"type":"RuntimeDefault"}},"volumeMounts":[{"mountPath":"/certs","name":"kubernetes-dashboard-certs"},{"mountPath":"/tmp","name":"tmp-volume"}]}],"priorityClassName":"system-cluster-critical","serviceAccountName":"kubernetes-dashboard","tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"}],"volumes":[{"name":"kubernetes-dashboard-certs","secret":{"secretName":"kubernetes-dashboard-certs"}},{"emptyDir":{},"name":"tmp-volume"}]}}}}
    creationTimestamp: "2023-03-15T09:22:45Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kubernetes-dashboard
      kubernetes.io/cluster-service: "true"
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:k8s-app: {}
            f:kubernetes.io/cluster-service: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:k8s-app: {}
            f:spec:
              f:containers:
                k:{"name":"kubernetes-dashboard"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsGroup: {}
                    f:runAsUser: {}
                    f:seccompProfile:
                      .: {}
                      f:type: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/certs"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"kubernetes-dashboard-certs"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"tmp-volume"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2023-03-15T09:22:45Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:42Z"
    name: kubernetes-dashboard
    namespace: kube-system
    resourceVersion: "1449533"
    uid: df6272ec-d08e-4d9f-885d-61e4147907f7
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kubernetes-dashboard
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kubernetes-dashboard
      spec:
        containers:
        - args:
          - --auto-generate-certificates
          - --namespace=kube-system
          image: de.icr.io/armada-master/kubernetesui-dashboard:v2.7.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: kubernetes-dashboard
          ports:
          - containerPort: 8443
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: kubernetes-dashboard-certs
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - name: kubernetes-dashboard-certs
          secret:
            defaultMode: 420
            secretName: kubernetes-dashboard-certs
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-03-15T09:22:45Z"
      lastUpdateTime: "2023-03-15T09:26:45Z"
      message: ReplicaSet "kubernetes-dashboard-7bd7565fc7" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-03-26T18:21:42Z"
      lastUpdateTime: "2023-03-26T18:21:42Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","cert-checksum":"a500499f6893d6fdb488b3664775ddcc09a4d728","k8s-app":"metrics-server","kubernetes.io/cluster-service":"true","version":"v0.6.0"},"name":"metrics-server","namespace":"kube-system"},"spec":{"replicas":2,"selector":{"matchLabels":{"k8s-app":"metrics-server"}},"strategy":{"rollingUpdate":{"maxUnavailable":1}},"template":{"metadata":{"labels":{"cert-checksum":"a500499f6893d6fdb488b3664775ddcc09a4d728","k8s-app":"metrics-server","version":"v0.6.0"},"name":"metrics-server"},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"k8s-app","operator":"In","values":["metrics-server"]}]},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"k8s-app","operator":"In","values":["metrics-server"]}]},"topologyKey":"topology.kubernetes.io/zone"},"weight":100}]}},"containers":[{"command":["/metrics-server","--metric-resolution=45s","--secure-port=4443","--tls-cert-file=/etc/metrics-server-certs/tls.crt","--tls-private-key-file=/etc/metrics-server-certs/tls.key"],"image":"de.icr.io/armada-master/metrics-server:v0.6.0","livenessProbe":{"failureThreshold":10,"httpGet":{"path":"/livez","port":"https","scheme":"HTTPS"},"initialDelaySeconds":60,"periodSeconds":30,"successThreshold":1,"timeoutSeconds":15},"name":"metrics-server","ports":[{"containerPort":4443,"name":"https","protocol":"TCP"}],"readinessProbe":{"failureThreshold":6,"httpGet":{"path":"/readyz","port":"https","scheme":"HTTPS"},"initialDelaySeconds":30,"periodSeconds":30,"successThreshold":1,"timeoutSeconds":15},"securityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":1000},"volumeMounts":[{"mountPath":"/etc/metrics-server-certs","name":"metrics-server-certs"},{"mountPath":"/tmp","name":"tmp-dir"}]},{"command":["/pod_nanny","--config-dir=/etc/config","--cpu=100m","--extra-cpu=1m","--memory=40Mi","--extra-memory=6Mi","--threshold=5","--deployment=metrics-server","--container=metrics-server","--poll-period=30000","--estimator=exponential","--use-metrics=true"],"env":[{"name":"MY_POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"MY_POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"de.icr.io/armada-master/addon-resizer:1.8.15","name":"metrics-server-nanny","resources":{"limits":{"cpu":"100m","memory":"300Mi"},"requests":{"cpu":"5m","memory":"50Mi"}},"securityContext":{"runAsNonRoot":true,"runAsUser":1000},"volumeMounts":[{"mountPath":"/etc/config","name":"metrics-server-config-volume"}]},{"command":["bash","-c","old_sum=$(md5sum /etc/config/NannyConfiguration)\nwhile true; do\n  sleep 60\n  new_sum=$(md5sum /etc/config/NannyConfiguration)\n  if [[ \"$new_sum\" != \"$old_sum\" ]]; then\n    kill $(grep -l ^/pod_nanny /proc/*/cmdline | awk -F/ '{print $3}')\n    exit\n  fi\ndone\n"],"image":"de.icr.io/armada-master/ubi-dns-tools:v1.0.2","name":"config-watcher","resources":{"limits":{"cpu":"50m","memory":"100Mi"},"requests":{"cpu":"5m","memory":"5Mi"}},"securityContext":{"runAsNonRoot":true,"runAsUser":1000},"volumeMounts":[{"mountPath":"/etc/config","name":"metrics-server-config-volume"}]}],"priorityClassName":"system-cluster-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"metrics-server","shareProcessNamespace":true,"tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"}],"volumes":[{"configMap":{"name":"metrics-server-config"},"name":"metrics-server-config-volume"},{"name":"metrics-server-certs","secret":{"secretName":"metrics-server-certs"}},{"emptyDir":{},"name":"tmp-dir"}]}}}}
    creationTimestamp: "2023-03-15T09:22:45Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      cert-checksum: a500499f6893d6fdb488b3664775ddcc09a4d728
      k8s-app: metrics-server
      kubernetes.io/cluster-service: "true"
      version: v0.6.0
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:cert-checksum: {}
            f:k8s-app: {}
            f:kubernetes.io/cluster-service: {}
            f:version: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:cert-checksum: {}
                f:k8s-app: {}
                f:version: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"config-watcher"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"metrics-server"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":4443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/metrics-server-certs"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"metrics-server-nanny"}:
                  .: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"MY_POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"MY_POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:shareProcessNamespace: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"metrics-server-certs"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"metrics-server-config-volume"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"tmp-dir"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2023-03-15T09:22:45Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:template:
            f:spec:
              f:containers:
                k:{"name":"metrics-server"}:
                  f:resources:
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
      manager: pod_nanny
      operation: Update
      time: "2023-03-15T09:26:22Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:52Z"
    name: metrics-server
    namespace: kube-system
    resourceVersion: "1449565"
    uid: 257b7f82-3c2a-42fa-88f2-f326a2bf3234
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: metrics-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          cert-checksum: a500499f6893d6fdb488b3664775ddcc09a4d728
          k8s-app: metrics-server
          version: v0.6.0
        name: metrics-server
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: topology.kubernetes.io/zone
              weight: 100
        containers:
        - command:
          - /metrics-server
          - --metric-resolution=45s
          - --secure-port=4443
          - --tls-cert-file=/etc/metrics-server-certs/tls.crt
          - --tls-private-key-file=/etc/metrics-server-certs/tls.key
          image: de.icr.io/armada-master/metrics-server:v0.6.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            initialDelaySeconds: 60
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 15
          name: metrics-server
          ports:
          - containerPort: 4443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 15
          resources:
            limits:
              cpu: 116m
              memory: 136Mi
            requests:
              cpu: 116m
              memory: 136Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/metrics-server-certs
            name: metrics-server-certs
          - mountPath: /tmp
            name: tmp-dir
        - command:
          - /pod_nanny
          - --config-dir=/etc/config
          - --cpu=100m
          - --extra-cpu=1m
          - --memory=40Mi
          - --extra-memory=6Mi
          - --threshold=5
          - --deployment=metrics-server
          - --container=metrics-server
          - --poll-period=30000
          - --estimator=exponential
          - --use-metrics=true
          env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: de.icr.io/armada-master/addon-resizer:1.8.15
          imagePullPolicy: IfNotPresent
          name: metrics-server-nanny
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 5m
              memory: 50Mi
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: metrics-server-config-volume
        - command:
          - bash
          - -c
          - |
            old_sum=$(md5sum /etc/config/NannyConfiguration)
            while true; do
              sleep 60
              new_sum=$(md5sum /etc/config/NannyConfiguration)
              if [[ "$new_sum" != "$old_sum" ]]; then
                kill $(grep -l ^/pod_nanny /proc/*/cmdline | awk -F/ '{print $3}')
                exit
              fi
            done
          image: de.icr.io/armada-master/ubi-dns-tools:v1.0.2
          imagePullPolicy: IfNotPresent
          name: config-watcher
          resources:
            limits:
              cpu: 50m
              memory: 100Mi
            requests:
              cpu: 5m
              memory: 5Mi
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: metrics-server-config-volume
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        shareProcessNamespace: true
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: metrics-server-config
          name: metrics-server-config-volume
        - name: metrics-server-certs
          secret:
            defaultMode: 420
            secretName: metrics-server-certs
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2023-03-15T09:22:45Z"
      lastUpdateTime: "2023-03-15T09:27:23Z"
      message: ReplicaSet "metrics-server-577c74c6d5" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-03-26T18:21:51Z"
      lastUpdateTime: "2023-03-26T18:21:51Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "3"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"razee.io/build-url":"https://travis.ibm.com/alchemy-containers/armada-ingress-microservice/builds/87269293","razee.io/source-url":"https://github.ibm.com/alchemy-containers/armada-ingress-microservice/commit/6c850dc1996a468700d2bf02ec4a933a52d54130"},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","app":"public-crcg8om62f01beu8rudp30-alb1","kubernetes.io/cluster-service":"true"},"name":"public-crcg8om62f01beu8rudp30-alb1","namespace":"kube-system"},"spec":{"minReadySeconds":60,"replicas":2,"revisionHistoryLimit":2,"selector":{"matchLabels":{"app":"public-crcg8om62f01beu8rudp30-alb1"}},"strategy":{"rollingUpdate":{"maxSurge":"33%","maxUnavailable":"50%"},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"prometheus.io/path":"/metrics","prometheus.io/port":"10254","prometheus.io/scrape":"true","razee.io/build-url":"https://travis.ibm.com/alchemy-containers/armada-ingress-microservice/builds/87269293","razee.io/source-url":"https://github.ibm.com/alchemy-containers/armada-ingress-microservice/commit/6c850dc1996a468700d2bf02ec4a933a52d54130"},"labels":{"alb-image-type":"community","app":"public-crcg8om62f01beu8rudp30-alb1","appVersion":"1.6.4_3898_iks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"dedicated","operator":"NotIn","values":["internal"]}]}]}},"podAntiAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":[{"labelSelector":{"matchExpressions":[{"key":"app","operator":"In","values":["public-crcg8om62f01beu8rudp30-alb1"]},{"key":"appVersion","operator":"In","values":["1.6.4_3898_iks"]}]},"topologyKey":"kubernetes.io/hostname"}]}},"containers":[{"args":["/nginx-ingress-controller","--configmap=kube-system/ibm-k8s-controller-config","--annotations-prefix=nginx.ingress.kubernetes.io","--default-ssl-certificate=default/mycluster-fra02-b3-521938-df8e297a5c60fae963c289eec4135c3b-0000","--ingress-class=public-iks-k8s-nginx","--ingress-class-by-name","--controller-class=cloud.ibm.com/public-iks-k8s-nginx","--election-id=ingress-controller-leader-public-iks-k8s-nginx","--http-port=80","--https-port=443","--healthz-port=10254","--default-backend-service=kube-system/ibm-k8s-controller-default-backend","--publish-service=kube-system/public-crcg8om62f01beu8rudp30-alb1"],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"ARMADA_CLUSTER_ID","value":"cg8om62f01beu8rudp30"},{"name":"ALB_ID","value":"public-crcg8om62f01beu8rudp30-alb1"},{"name":"ALB_ID_LB","value":"public-crcg8om62f01beu8rudp30-alb1"},{"name":"SECURED_NAMESPACE","value":"ibm-cert-store"},{"name":"INGRESS_IMAGE","value":"de.icr.io/armada-master/ingress-community:1.6.4_3898_iks"}],"image":"de.icr.io/armada-master/ingress-community:1.6.4_3898_iks","imagePullPolicy":"Always","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":10254,"scheme":"HTTP"},"initialDelaySeconds":300,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"name":"nginx-ingress","ports":[{"containerPort":80,"protocol":"TCP"},{"containerPort":443,"protocol":"TCP"}],"resources":{"requests":{"cpu":"20m","memory":"115Mi"}}}],"initContainers":[{"command":["sh","-c","sysctl -e -w net.core.rmem_max=16777216; sysctl -e -w net.core.wmem_max=16777216; sysctl -e -w net.core.rmem_default=12582912; sysctl -e -w net.core.wmem_default=12582912; sysctl -e -w net.core.optmem_max=25165824; sysctl -e -w net.core.netdev_max_backlog=262144; sysctl -e -w net.core.somaxconn=32768; sysctl -e -w net.core.rps_sock_flow_entries=32768; sysctl -e -w net.ipv4.ip_local_port_range=\"1025 65535\"; sysctl -e -w net.ipv4.ip_local_reserved_ports=\"2040-2041,4194,4500,5473,8080,9085-9110,9253,9353,10000-10300,11000-11200,12000-12100,30000-32767\"; sysctl -e -w net.ipv4.tcp_rmem=\"8192 262144 16777216\"; sysctl -e -w net.ipv4.tcp_wmem=\"8192 262144 16777216\"; sysctl -e -w net.ipv4.udp_rmem_min=16384; sysctl -e -w net.ipv4.udp_wmem_min=16384; sysctl -e -w net.ipv4.ip_no_pmtu_disc=0; sysctl -e -w net.ipv4.route.flush=1; sysctl -e -w net.ipv4.tcp_dsack=1; sysctl -e -w net.ipv4.tcp_sack=1; sysctl -e -w net.ipv4.tcp_fack=1; sysctl -e -w net.ipv4.tcp_max_tw_buckets=1440000; sysctl -e -w net.ipv4.tcp_tw_recycle=0; sysctl -e -w net.ipv4.tcp_tw_reuse=1; sysctl -e -w net.ipv4.tcp_frto=0; sysctl -e -w net.ipv4.tcp_syncookies=1; sysctl -e -w net.ipv4.tcp_max_syn_backlog=32768; sysctl -e -w net.ipv4.tcp_synack_retries=2; sysctl -e -w net.ipv4.tcp_syn_retries=3; sysctl -e -w net.ipv4.tcp_fin_timeout=5; sysctl -e -w net.ipv4.tcp_retries2=5; sysctl -e -w net.ipv4.tcp_no_metrics_save=1; sysctl -e -w net.ipv4.tcp_moderate_rcvbuf=1; sysctl -e -w net.ipv4.tcp_timestamps=1; sysctl -e -w net.ipv4.tcp_keepalive_time=40; sysctl -e -w net.ipv4.tcp_keepalive_intvl=15; sysctl -e -w net.ipv4.tcp_keepalive_probes=6; sysctl -e -w net.ipv4.tcp_slow_start_after_idle=0; sysctl -e -w net.ipv4.tcp_window_scaling=1; sysctl -e -w net.ipv4.tcp_low_latency=1; sysctl -e -w net.ipv4.tcp_max_orphans=262144; sysctl -e -w net.nf_conntrack_max=9145728; sysctl -e -w net.netfilter.nf_conntrack_max=9145728; sysctl -e -w net.netfilter.nf_conntrack_tcp_timeout_time_wait=10; sysctl -e -w net.netfilter.nf_conntrack_tcp_timeout_fin_wait=10; sysctl -e -w net.netfilter.nf_conntrack_tcp_timeout_close_wait=30; sysctl -e -w net.netfilter.nf_conntrack_tcp_loose=1; sysctl -e -w net.ipv4.tcp_rfc1337=1; exit 0"],"image":"de.icr.io/armada-master/ingress-alpine:3.16_14810","imagePullPolicy":"Always","name":"sysctl","resources":{},"securityContext":{"privileged":true}}],"nodeSelector":{"publicVLAN":"3319718"},"priorityClassName":"ibm-app-cluster-critical","restartPolicy":"Always","schedulerName":"default-scheduler","serviceAccountName":"ibm-k8s-ingress","tolerations":null}}}}
      razee.io/build-url: https://travis.ibm.com/alchemy-containers/armada-ingress-microservice/builds/87269293
      razee.io/source-url: https://github.ibm.com/alchemy-containers/armada-ingress-microservice/commit/6c850dc1996a468700d2bf02ec4a933a52d54130
    creationTimestamp: "2023-03-15T09:42:12Z"
    generation: 3
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: public-crcg8om62f01beu8rudp30-alb1
      kubernetes.io/cluster-service: "true"
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
            f:razee.io/build-url: {}
            f:razee.io/source-url: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:app: {}
            f:kubernetes.io/cluster-service: {}
        f:spec:
          f:minReadySeconds: {}
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:prometheus.io/path: {}
                f:prometheus.io/port: {}
                f:prometheus.io/scrape: {}
                f:razee.io/build-url: {}
                f:razee.io/source-url: {}
              f:labels:
                .: {}
                f:alb-image-type: {}
                f:app: {}
                f:appVersion: {}
            f:spec:
              f:affinity:
                .: {}
                f:nodeAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"nginx-ingress"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"ALB_ID"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ALB_ID_LB"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ARMADA_CLUSTER_ID"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"INGRESS_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"SECURED_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":80,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                    k:{"containerPort":443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:initContainers:
                .: {}
                k:{"name":"sysctl"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2023-03-24T15:11:01Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-24T15:12:11Z"
    name: public-crcg8om62f01beu8rudp30-alb1
    namespace: kube-system
    resourceVersion: "1085103"
    uid: 16855e78-7cf3-45e3-a969-b3da8f79e042
  spec:
    minReadySeconds: 60
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: public-crcg8om62f01beu8rudp30-alb1
    strategy:
      rollingUpdate:
        maxSurge: 33%
        maxUnavailable: 50%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "10254"
          prometheus.io/scrape: "true"
          razee.io/build-url: https://travis.ibm.com/alchemy-containers/armada-ingress-microservice/builds/87269293
          razee.io/source-url: https://github.ibm.com/alchemy-containers/armada-ingress-microservice/commit/6c850dc1996a468700d2bf02ec4a933a52d54130
        creationTimestamp: null
        labels:
          alb-image-type: community
          app: public-crcg8om62f01beu8rudp30-alb1
          appVersion: 1.6.4_3898_iks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: dedicated
                  operator: NotIn
                  values:
                  - internal
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - public-crcg8om62f01beu8rudp30-alb1
                - key: appVersion
                  operator: In
                  values:
                  - 1.6.4_3898_iks
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - /nginx-ingress-controller
          - --configmap=kube-system/ibm-k8s-controller-config
          - --annotations-prefix=nginx.ingress.kubernetes.io
          - --default-ssl-certificate=default/mycluster-fra02-b3-521938-df8e297a5c60fae963c289eec4135c3b-0000
          - --ingress-class=public-iks-k8s-nginx
          - --ingress-class-by-name
          - --controller-class=cloud.ibm.com/public-iks-k8s-nginx
          - --election-id=ingress-controller-leader-public-iks-k8s-nginx
          - --http-port=80
          - --https-port=443
          - --healthz-port=10254
          - --default-backend-service=kube-system/ibm-k8s-controller-default-backend
          - --publish-service=kube-system/public-crcg8om62f01beu8rudp30-alb1
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: ARMADA_CLUSTER_ID
            value: cg8om62f01beu8rudp30
          - name: ALB_ID
            value: public-crcg8om62f01beu8rudp30-alb1
          - name: ALB_ID_LB
            value: public-crcg8om62f01beu8rudp30-alb1
          - name: SECURED_NAMESPACE
            value: ibm-cert-store
          - name: INGRESS_IMAGE
            value: de.icr.io/armada-master/ingress-community:1.6.4_3898_iks
          image: de.icr.io/armada-master/ingress-community:1.6.4_3898_iks
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: nginx-ingress
          ports:
          - containerPort: 80
            protocol: TCP
          - containerPort: 443
            protocol: TCP
          resources:
            requests:
              cpu: 20m
              memory: 115Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - sh
          - -c
          - sysctl -e -w net.core.rmem_max=16777216; sysctl -e -w net.core.wmem_max=16777216;
            sysctl -e -w net.core.rmem_default=12582912; sysctl -e -w net.core.wmem_default=12582912;
            sysctl -e -w net.core.optmem_max=25165824; sysctl -e -w net.core.netdev_max_backlog=262144;
            sysctl -e -w net.core.somaxconn=32768; sysctl -e -w net.core.rps_sock_flow_entries=32768;
            sysctl -e -w net.ipv4.ip_local_port_range="1025 65535"; sysctl -e -w net.ipv4.ip_local_reserved_ports="2040-2041,4194,4500,5473,8080,9085-9110,9253,9353,10000-10300,11000-11200,12000-12100,30000-32767";
            sysctl -e -w net.ipv4.tcp_rmem="8192 262144 16777216"; sysctl -e -w net.ipv4.tcp_wmem="8192
            262144 16777216"; sysctl -e -w net.ipv4.udp_rmem_min=16384; sysctl -e
            -w net.ipv4.udp_wmem_min=16384; sysctl -e -w net.ipv4.ip_no_pmtu_disc=0;
            sysctl -e -w net.ipv4.route.flush=1; sysctl -e -w net.ipv4.tcp_dsack=1;
            sysctl -e -w net.ipv4.tcp_sack=1; sysctl -e -w net.ipv4.tcp_fack=1; sysctl
            -e -w net.ipv4.tcp_max_tw_buckets=1440000; sysctl -e -w net.ipv4.tcp_tw_recycle=0;
            sysctl -e -w net.ipv4.tcp_tw_reuse=1; sysctl -e -w net.ipv4.tcp_frto=0;
            sysctl -e -w net.ipv4.tcp_syncookies=1; sysctl -e -w net.ipv4.tcp_max_syn_backlog=32768;
            sysctl -e -w net.ipv4.tcp_synack_retries=2; sysctl -e -w net.ipv4.tcp_syn_retries=3;
            sysctl -e -w net.ipv4.tcp_fin_timeout=5; sysctl -e -w net.ipv4.tcp_retries2=5;
            sysctl -e -w net.ipv4.tcp_no_metrics_save=1; sysctl -e -w net.ipv4.tcp_moderate_rcvbuf=1;
            sysctl -e -w net.ipv4.tcp_timestamps=1; sysctl -e -w net.ipv4.tcp_keepalive_time=40;
            sysctl -e -w net.ipv4.tcp_keepalive_intvl=15; sysctl -e -w net.ipv4.tcp_keepalive_probes=6;
            sysctl -e -w net.ipv4.tcp_slow_start_after_idle=0; sysctl -e -w net.ipv4.tcp_window_scaling=1;
            sysctl -e -w net.ipv4.tcp_low_latency=1; sysctl -e -w net.ipv4.tcp_max_orphans=262144;
            sysctl -e -w net.nf_conntrack_max=9145728; sysctl -e -w net.netfilter.nf_conntrack_max=9145728;
            sysctl -e -w net.netfilter.nf_conntrack_tcp_timeout_time_wait=10; sysctl
            -e -w net.netfilter.nf_conntrack_tcp_timeout_fin_wait=10; sysctl -e -w
            net.netfilter.nf_conntrack_tcp_timeout_close_wait=30; sysctl -e -w net.netfilter.nf_conntrack_tcp_loose=1;
            sysctl -e -w net.ipv4.tcp_rfc1337=1; exit 0
          image: de.icr.io/armada-master/ingress-alpine:3.16_14810
          imagePullPolicy: Always
          name: sysctl
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        nodeSelector:
          publicVLAN: "3319718"
        priorityClassName: ibm-app-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ibm-k8s-ingress
        serviceAccountName: ibm-k8s-ingress
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2023-03-15T09:43:30Z"
      lastUpdateTime: "2023-03-15T09:43:30Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2023-03-15T09:42:12Z"
      lastUpdateTime: "2023-03-24T15:12:11Z"
      message: ReplicaSet "public-crcg8om62f01beu8rudp30-alb1-845d96d8b8" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 3
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      armada-service: cruiser-kube-addons
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"armada-service":"cruiser-kube-addons","version":"1.25.6_1534"},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","app":"snapshot-controller"},"name":"snapshot-controller","namespace":"kube-system"},"spec":{"minReadySeconds":30,"replicas":3,"selector":{"matchLabels":{"app":"snapshot-controller"}},"strategy":{"rollingUpdate":{"maxSurge":0,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"snapshot-controller"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"app","operator":"In","values":["snapshot-controller"]}]},"topologyKey":"topology.kubernetes.io/zone"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"app","operator":"In","values":["snapshot-controller"]}]},"topologyKey":"kubernetes.io/hostname"},"weight":100}]}},"containers":[{"args":["--v=3","--leader-election=true","--http-endpoint=:9878","--leader-election-lease-duration=137s","--leader-election-renew-deadline=107s","--leader-election-retry-period=26s"],"image":"de.icr.io/armada-master/snapshot-controller:v6.0.1","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz/leader-election","port":9878},"initialDelaySeconds":15,"periodSeconds":20,"timeoutSeconds":5},"name":"snapshot-controller","resources":{"requests":{"cpu":"10m","memory":"50Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"privileged":false,"runAsNonRoot":true,"runAsUser":2121}}],"priorityClassName":"system-cluster-critical","serviceAccountName":"snapshot-controller"}}}}
      version: 1.25.6_1534
    creationTimestamp: "2023-03-15T09:20:21Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: snapshot-controller
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:armada-service: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
            f:version: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:app: {}
        f:spec:
          f:minReadySeconds: {}
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"snapshot-controller"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:privileged: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2023-03-15T09:22:57Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-26T18:22:08Z"
    name: snapshot-controller
    namespace: kube-system
    resourceVersion: "1449601"
    uid: 08fa8f43-123f-4b36-bc36-095baae4ce49
  spec:
    minReadySeconds: 30
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: snapshot-controller
    strategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: snapshot-controller
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - snapshot-controller
                topologyKey: topology.kubernetes.io/zone
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - snapshot-controller
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - --v=3
          - --leader-election=true
          - --http-endpoint=:9878
          - --leader-election-lease-duration=137s
          - --leader-election-renew-deadline=107s
          - --leader-election-retry-period=26s
          image: de.icr.io/armada-master/snapshot-controller:v6.0.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz/leader-election
              port: 9878
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          name: snapshot-controller
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            runAsNonRoot: true
            runAsUser: 2121
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: snapshot-controller
        serviceAccountName: snapshot-controller
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 3
    conditions:
    - lastTransitionTime: "2023-03-15T09:20:21Z"
      lastUpdateTime: "2023-03-15T09:27:27Z"
      message: ReplicaSet "snapshot-controller-75975d56b6" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-03-26T18:22:08Z"
      lastUpdateTime: "2023-03-26T18:22:08Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 2
    readyReplicas: 3
    replicas: 3
    updatedReplicas: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-20T09:46:37Z"
    generation: 5
    labels:
      app: chaos-exporter
      release: prometheus-stack
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:release: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:release: {}
            f:spec:
              f:containers:
                k:{"name":"chaos-exporter"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"TSDB_SCRAPE_INTERVAL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: server
      operation: Update
      time: "2023-03-20T09:46:37Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:54Z"
    name: chaos-exporter
    namespace: litmus
    resourceVersion: "863025"
    uid: 48e97e94-3ff4-4f7c-9820-62f3c452960a
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: chaos-exporter
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: chaos-exporter
          release: prometheus-stack
      spec:
        containers:
        - env:
          - name: TSDB_SCRAPE_INTERVAL
            value: "10"
          image: litmuschaos/chaos-exporter:2.14.0
          imagePullPolicy: Always
          name: chaos-exporter
          ports:
          - containerPort: 8080
            name: tcp
            protocol: TCP
          resources:
            limits:
              cpu: 225m
              ephemeral-storage: 1Gi
              memory: 500Mi
            requests:
              cpu: 125m
              ephemeral-storage: 500Mi
              memory: 300Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: litmus-cluster-scope
        serviceAccountName: litmus-cluster-scope
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-03-20T09:46:37Z"
      lastUpdateTime: "2023-03-20T09:46:46Z"
      message: ReplicaSet "chaos-exporter-6c9b5988c4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-03-23T08:16:54Z"
      lastUpdateTime: "2023-03-23T08:16:54Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: chaos
      meta.helm.sh/release-namespace: litmus
    creationTimestamp: "2023-03-19T14:17:35Z"
    generation: 5
    labels:
      app.kubernetes.io/component: litmus-auth-server
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: litmus
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: 2.15.10
      helm.sh/chart: litmus-2.15.10
      litmuschaos.io/version: 2.14.0
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:litmuschaos.io/version: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:helm.sh/chart: {}
                f:litmuschaos.io/version: {}
            f:spec:
              f:automountServiceAccountToken: {}
              f:containers:
                k:{"name":"auth-server"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"DB_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"DB_USER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_GQL_GRPC_ENDPOINT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_GQL_GRPC_PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":3000,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":3030,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:initContainers:
                .: {}
                k:{"name":"wait-for-mongodb"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: helm
      operation: Update
      time: "2023-03-19T14:17:35Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:17:27Z"
    name: chaos-litmus-auth-server
    namespace: litmus
    resourceVersion: "863128"
    uid: d58ac3a9-feb6-4ace-a8b0-40a6af98ee36
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: litmus-auth-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: litmus-auth-server
          app.kubernetes.io/instance: chaos
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: litmus
          app.kubernetes.io/part-of: litmus
          app.kubernetes.io/version: 2.15.10
          helm.sh/chart: litmus-2.15.10
          litmuschaos.io/version: 2.14.0
      spec:
        automountServiceAccountToken: false
        containers:
        - env:
          - name: DB_PASSWORD
            value: superhardpassword
          - name: DB_USER
            value: root
          - name: LITMUS_GQL_GRPC_ENDPOINT
            value: chaos-litmus-server-service
          - name: LITMUS_GQL_GRPC_PORT
            value: :8000
          envFrom:
          - secretRef:
              name: chaos-litmus-admin-secret
          - configMapRef:
              name: chaos-litmus-admin-config
          image: litmuschaos/litmusportal-auth-server:2.14.0
          imagePullPolicy: Always
          name: auth-server
          ports:
          - containerPort: 3030
            name: auth-server
            protocol: TCP
          - containerPort: 3000
            name: auth-rpc-server
            protocol: TCP
          resources:
            limits:
              cpu: 550m
              ephemeral-storage: 1Gi
              memory: 712Mi
            requests:
              cpu: 225m
              ephemeral-storage: 500Mi
              memory: 250Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - while [[ $(curl -sw '%{http_code}' http://chaos-mongodb:27017 -o /dev/null)
            -ne 200 ]]; do sleep 5; echo 'Waiting for the MongoDB to be ready...';
            done; echo 'Connection with MongoDB established'
          command:
          - /bin/sh
          - -c
          image: litmuschaos/curl:2.14.0
          imagePullPolicy: Always
          name: wait-for-mongodb
          resources:
            limits:
              cpu: 250m
              ephemeral-storage: 1Gi
              memory: 512Mi
            requests:
              cpu: 25m
              ephemeral-storage: 500Mi
              memory: 150Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: litmus-server-account
        serviceAccountName: litmus-server-account
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-03-20T09:37:10Z"
      lastUpdateTime: "2023-03-20T09:37:10Z"
      message: ReplicaSet "chaos-litmus-auth-server-b8dcdf66b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-03-23T08:17:26Z"
      lastUpdateTime: "2023-03-23T08:17:26Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: chaos
      meta.helm.sh/release-namespace: litmus
    creationTimestamp: "2023-03-19T14:17:35Z"
    generation: 5
    labels:
      app.kubernetes.io/component: litmus-frontend
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: litmus
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: 2.15.10
      helm.sh/chart: litmus-2.15.10
      litmuschaos.io/version: 2.14.0
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:litmuschaos.io/version: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:helm.sh/chart: {}
                f:litmuschaos.io/version: {}
            f:spec:
              f:automountServiceAccountToken: {}
              f:containers:
                k:{"name":"litmusportal-frontend"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/nginx/conf.d/default.conf"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:subPath: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"nginx-config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
      manager: helm
      operation: Update
      time: "2023-03-19T14:17:35Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:17:00Z"
    name: chaos-litmus-frontend
    namespace: litmus
    resourceVersion: "863053"
    uid: 8afe133f-a565-423d-8b39-87e0f01f7bf9
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: litmus-frontend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: litmus-frontend
          app.kubernetes.io/instance: chaos
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: litmus
          app.kubernetes.io/part-of: litmus
          app.kubernetes.io/version: 2.15.10
          helm.sh/chart: litmus-2.15.10
          litmuschaos.io/version: 2.14.0
      spec:
        automountServiceAccountToken: false
        containers:
        - image: litmuschaos/litmusportal-frontend:2.14.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: litmusportal-frontend
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 550m
              ephemeral-storage: 1Gi
              memory: 512Mi
            requests:
              cpu: 125m
              ephemeral-storage: 500Mi
              memory: 150Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/nginx/conf.d/default.conf
            name: nginx-config
            subPath: default.conf
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: chaos-litmus-frontend-nginx-configuration
          name: nginx-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-03-19T14:17:35Z"
      lastUpdateTime: "2023-03-19T14:17:56Z"
      message: ReplicaSet "chaos-litmus-frontend-6ffc95c884" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-03-23T08:17:00Z"
      lastUpdateTime: "2023-03-23T08:17:00Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: chaos
      meta.helm.sh/release-namespace: litmus
    creationTimestamp: "2023-03-19T14:17:35Z"
    generation: 5
    labels:
      app.kubernetes.io/component: litmus-server
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: litmus
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: 2.15.10
      helm.sh/chart: litmus-2.15.10
      litmuschaos.io/version: 2.14.0
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:litmuschaos.io/version: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:helm.sh/chart: {}
                f:litmuschaos.io/version: {}
            f:spec:
              f:containers:
                k:{"name":"graphql-server"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"AGENT_DEPLOYMENTS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ARGO_WORKFLOW_CONTROLLER_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ARGO_WORKFLOW_EXECUTOR_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOS_CENTER_SCOPE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOS_CENTER_UI_ENDPOINT"}:
                      .: {}
                      f:name: {}
                    k:{"name":"CONTAINER_RUNTIME_EXECUTOR"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"DB_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"DB_USER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"EVENT_TRACKER_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"HUB_BRANCH_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"INGRESS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"INGRESS_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_AUTH_GRPC_ENDPOINT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_AUTH_GRPC_PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_CHAOS_EXPORTER_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_CHAOS_OPERATOR_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_CHAOS_RUNNER_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_PORTAL_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"NODE_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"REMOTE_HUB_MAX_SIZE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SELF_AGENT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SELF_AGENT_NODE_SELECTOR"}:
                      .: {}
                      f:name: {}
                    k:{"name":"SELF_AGENT_TOLERATIONS"}:
                      .: {}
                      f:name: {}
                    k:{"name":"SERVER_SERVICE_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SUBSCRIBER_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TLS_CERT_64"}:
                      .: {}
                      f:name: {}
                    k:{"name":"TLS_SECRET_NAME"}:
                      .: {}
                      f:name: {}
                    k:{"name":"WORKFLOW_HELPER_IMAGE_VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8000,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/tmp/"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp/version"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:initContainers:
                .: {}
                k:{"name":"wait-for-mongodb"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"gitops-storage"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
                k:{"name":"hub-storage"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: helm
      operation: Update
      time: "2023-03-19T14:17:35Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:17:40Z"
    name: chaos-litmus-server
    namespace: litmus
    resourceVersion: "863172"
    uid: ce145649-c0f8-47eb-af46-efc3e38ec4a0
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: litmus-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: litmus-server
          app.kubernetes.io/instance: chaos
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: litmus
          app.kubernetes.io/part-of: litmus
          app.kubernetes.io/version: 2.15.10
          helm.sh/chart: litmus-2.15.10
          litmuschaos.io/version: 2.14.0
      spec:
        containers:
        - env:
          - name: DB_PASSWORD
            value: superhardpassword
          - name: DB_USER
            value: root
          - name: LITMUS_PORTAL_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CHAOS_CENTER_SCOPE
            value: cluster
          - name: SERVER_SERVICE_NAME
            value: chaos-litmus-server-service
          - name: INGRESS
            value: "false"
          - name: INGRESS_NAME
            value: litmus-ingress
          - name: LITMUS_AUTH_GRPC_ENDPOINT
            value: chaos-litmus-auth-server-service
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: ARGO_WORKFLOW_CONTROLLER_IMAGE
            value: litmuschaos/workflow-controller:v3.3.1
          - name: ARGO_WORKFLOW_EXECUTOR_IMAGE
            value: litmuschaos/argoexec:v3.3.1
          - name: EVENT_TRACKER_IMAGE
            value: litmuschaos/litmusportal-event-tracker:2.14.0
          - name: LITMUS_CHAOS_EXPORTER_IMAGE
            value: litmuschaos/chaos-exporter:2.14.0
          - name: LITMUS_CHAOS_OPERATOR_IMAGE
            value: litmuschaos/chaos-operator:2.14.0
          - name: LITMUS_CHAOS_RUNNER_IMAGE
            value: litmuschaos/chaos-runner:2.14.0
          - name: SUBSCRIBER_IMAGE
            value: litmuschaos/litmusportal-subscriber:2.14.0
          - name: AGENT_DEPLOYMENTS
            value: '["app=chaos-exporter", "name=chaos-operator", "app=event-tracker",
              "app=workflow-controller"]'
          - name: CHAOS_CENTER_UI_ENDPOINT
          - name: CONTAINER_RUNTIME_EXECUTOR
            value: k8sapi
          - name: HUB_BRANCH_NAME
            value: v2.14.x
          - name: LITMUS_AUTH_GRPC_PORT
            value: :3030
          - name: REMOTE_HUB_MAX_SIZE
            value: "5000000"
          - name: SELF_AGENT
            value: "true"
          - name: SELF_AGENT_NODE_SELECTOR
          - name: SELF_AGENT_TOLERATIONS
          - name: TLS_CERT_64
          - name: TLS_SECRET_NAME
          - name: WORKFLOW_HELPER_IMAGE_VERSION
            value: 2.14.0
          envFrom:
          - secretRef:
              name: chaos-litmus-admin-secret
          - configMapRef:
              name: chaos-litmus-admin-config
          image: litmuschaos/litmusportal-server:2.14.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: gql-server
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: graphql-server
          ports:
          - containerPort: 8080
            name: gql-server
            protocol: TCP
          - containerPort: 8000
            name: gql-rpc-server
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: gql-server
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 550m
              ephemeral-storage: 1Gi
              memory: 712Mi
            requests:
              cpu: 225m
              ephemeral-storage: 500Mi
              memory: 250Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/
            name: gitops-storage
          - mountPath: /tmp/version
            name: hub-storage
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - while [[ $(curl -sw '%{http_code}' http://chaos-mongodb:27017 -o /dev/null)
            -ne 200 ]]; do sleep 5; echo 'Waiting for the MongoDB to be ready...';
            done; echo 'Connection with MongoDB established'
          command:
          - /bin/sh
          - -c
          image: litmuschaos/curl:2.14.0
          imagePullPolicy: Always
          name: wait-for-mongodb
          resources:
            limits:
              cpu: 250m
              ephemeral-storage: 1Gi
              memory: 512Mi
            requests:
              cpu: 25m
              ephemeral-storage: 500Mi
              memory: 150Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: litmus-server-account
        serviceAccountName: litmus-server-account
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: gitops-storage
        - emptyDir: {}
          name: hub-storage
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-03-20T09:37:26Z"
      lastUpdateTime: "2023-03-20T09:37:26Z"
      message: ReplicaSet "chaos-litmus-server-585786dd9c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-03-23T08:17:40Z"
      lastUpdateTime: "2023-03-23T08:17:40Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: chaos
      meta.helm.sh/release-namespace: litmus
    creationTimestamp: "2023-03-19T14:17:35Z"
    generation: 8
    labels:
      app.kubernetes.io/component: mongodb
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: mongodb
      helm.sh/chart: mongodb-12.1.11
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:helm.sh/chart: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"mongodb"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"ALLOW_EMPTY_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"BITNAMI_DEBUG"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_DISABLE_JAVASCRIPT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_DISABLE_SYSTEM_LOG"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_ENABLE_DIRECTORY_PER_DB"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_ENABLE_IPV6"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_ENABLE_JOURNAL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_PORT_NUMBER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_ROOT_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                    k:{"name":"MONGODB_ROOT_USER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_SYSTEM_LOG_VERBOSITY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":27017,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/bitnami/mongodb"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/bitnami/scripts"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"common-scripts"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"datadir"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
      manager: helm
      operation: Update
      time: "2023-03-19T14:17:35Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kubectl.kubernetes.io/restartedAt: {}
      manager: kubectl
      operation: Update
      time: "2023-03-20T09:36:03Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:replicas: {}
          f:unavailableReplicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-28T21:49:46Z"
    name: chaos-mongodb
    namespace: litmus
    resourceVersion: "1800493"
    uid: 00150774-1755-4c92-896f-7b5e9f6077d8
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: mongodb
        app.kubernetes.io/instance: chaos
        app.kubernetes.io/name: mongodb
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2023-03-20T10:36:03+01:00"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: mongodb
          app.kubernetes.io/instance: chaos
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: mongodb
          helm.sh/chart: mongodb-12.1.11
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: mongodb
                    app.kubernetes.io/instance: chaos
                    app.kubernetes.io/name: mongodb
                namespaces:
                - litmus
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: MONGODB_ROOT_USER
            value: root
          - name: MONGODB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: mongodb-root-password
                name: chaos-mongodb
          - name: ALLOW_EMPTY_PASSWORD
            value: "no"
          - name: MONGODB_SYSTEM_LOG_VERBOSITY
            value: "0"
          - name: MONGODB_DISABLE_SYSTEM_LOG
            value: "no"
          - name: MONGODB_DISABLE_JAVASCRIPT
            value: "no"
          - name: MONGODB_ENABLE_JOURNAL
            value: "yes"
          - name: MONGODB_PORT_NUMBER
            value: "27017"
          - name: MONGODB_ENABLE_IPV6
            value: "no"
          - name: MONGODB_ENABLE_DIRECTORY_PER_DB
            value: "no"
          image: docker.io/bitnami/mongodb:5.0.8-debian-10-r24
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bitnami/scripts/ping-mongodb.sh
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 10
          name: mongodb
          ports:
          - containerPort: 27017
            name: mongodb
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bitnami/scripts/readiness-probe.sh
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /bitnami/mongodb
            name: datadir
          - mountPath: /bitnami/scripts
            name: common-scripts
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
        serviceAccount: chaos-mongodb
        serviceAccountName: chaos-mongodb
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 360
            name: chaos-mongodb-common-scripts
          name: common-scripts
        - name: datadir
          persistentVolumeClaim:
            claimName: chaos-mongodb
  status:
    conditions:
    - lastTransitionTime: "2023-03-20T09:36:03Z"
      lastUpdateTime: "2023-03-20T09:43:27Z"
      message: ReplicaSet "chaos-mongodb-7fcb7c857f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-03-28T21:49:46Z"
      lastUpdateTime: "2023-03-28T21:49:46Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    observedGeneration: 8
    replicas: 1
    unavailableReplicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-20T09:46:37Z"
    generation: 5
    labels:
      app.kubernetes.io/component: operator
      app.kubernetes.io/managed-by: kubectl
      app.kubernetes.io/name: litmus
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: v2.0.0
      name: litmus
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:name: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:name: {}
            f:spec:
              f:containers:
                k:{"name":"chaos-operator"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"CHAOS_RUNNER_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"OPERATOR_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"WATCH_NAMESPACE"}:
                      .: {}
                      f:name: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: server
      operation: Update
      time: "2023-03-20T09:46:37Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:55Z"
    name: chaos-operator-ce
    namespace: litmus
    resourceVersion: "863032"
    uid: 1aee712b-6f7b-4582-9915-7087af79d071
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        name: chaos-operator
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: operator
          app.kubernetes.io/managed-by: kubectl
          app.kubernetes.io/name: litmus
          app.kubernetes.io/part-of: litmus
          app.kubernetes.io/version: latest
          name: chaos-operator
      spec:
        containers:
        - args:
          - -leader-elect=true
          command:
          - chaos-operator
          env:
          - name: CHAOS_RUNNER_IMAGE
            value: litmuschaos/chaos-runner:2.14.0
          - name: WATCH_NAMESPACE
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: OPERATOR_NAME
            value: chaos-operator
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: litmuschaos/chaos-operator:2.14.0
          imagePullPolicy: Always
          name: chaos-operator
          resources:
            limits:
              cpu: 225m
              ephemeral-storage: 1Gi
              memory: 500Mi
            requests:
              cpu: 125m
              ephemeral-storage: 500Mi
              memory: 300Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: litmus-cluster-scope
        serviceAccountName: litmus-cluster-scope
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-03-20T09:46:37Z"
      lastUpdateTime: "2023-03-20T09:46:44Z"
      message: ReplicaSet "chaos-operator-ce-84bc885775" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-03-23T08:16:55Z"
      lastUpdateTime: "2023-03-23T08:16:55Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "5"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"debug-pod","namespace":"litmus"},"spec":{"selector":{"matchLabels":{"app":"debug-pod"}},"template":{"metadata":{"labels":{"app":"debug-pod"}},"spec":{"containers":[{"args":["-ec","while :; do echo .; sleep 5;done"],"command":["/bin/sh"],"image":"centos:latest","name":"debug-pod","volumeMounts":[{"mountPath":"/bitnami/mongodb","name":"datadir"}]}],"securityContext":{"fsGroup":1001,"runAsGroup":1001,"runAsNonRoot":true,"runAsUser":1001},"volumes":[{"name":"datadir","persistentVolumeClaim":{"claimName":"chaos-mongodb"}}]}}}}
    creationTimestamp: "2023-03-20T09:21:07Z"
    generation: 9
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"debug-pod"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/bitnami/mongodb"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"datadir"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
      manager: kubectl
      operation: Update
      time: "2023-03-20T09:34:39Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:17:06Z"
    name: debug-pod
    namespace: litmus
    resourceVersion: "863070"
    uid: c8586ef1-792f-4351-a747-f599e7e516ec
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: debug-pod
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: debug-pod
      spec:
        containers:
        - args:
          - -ec
          - while :; do echo .; sleep 5;done
          command:
          - /bin/sh
          image: centos:latest
          imagePullPolicy: Always
          name: debug-pod
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /bitnami/mongodb
            name: datadir
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          runAsGroup: 1001
          runAsNonRoot: true
          runAsUser: 1001
        terminationGracePeriodSeconds: 30
        volumes:
        - name: datadir
          persistentVolumeClaim:
            claimName: chaos-mongodb
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-03-20T09:21:07Z"
      lastUpdateTime: "2023-03-20T09:34:42Z"
      message: ReplicaSet "debug-pod-55c9b84fb9" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-03-23T08:17:06Z"
      lastUpdateTime: "2023-03-23T08:17:06Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 9
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-20T09:46:36Z"
    generation: 5
    labels:
      app: event-tracker
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"litmus-event-tracker"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"AGENT_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: server
      operation: Update
      time: "2023-03-20T09:46:36Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:58Z"
    name: event-tracker
    namespace: litmus
    resourceVersion: "863044"
    uid: 334358e7-8bfa-4c8f-b695-ade2269ab713
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: event-tracker
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: event-tracker
      spec:
        containers:
        - env:
          - name: AGENT_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          envFrom:
          - configMapRef:
              name: agent-config
          - secretRef:
              name: agent-secret
          image: litmuschaos/litmusportal-event-tracker:2.14.0
          imagePullPolicy: Always
          name: litmus-event-tracker
          resources:
            limits:
              cpu: 225m
              ephemeral-storage: 1Gi
              memory: 500Mi
            requests:
              cpu: 125m
              ephemeral-storage: 500Mi
              memory: 300Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: event-tracker-sa
        serviceAccountName: event-tracker-sa
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-03-20T09:46:36Z"
      lastUpdateTime: "2023-03-20T09:46:52Z"
      message: ReplicaSet "event-tracker-744b6fd8cf" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-03-23T08:16:58Z"
      lastUpdateTime: "2023-03-23T08:16:58Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-20T09:46:36Z"
    generation: 5
    labels:
      app: subscriber
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"subscriber"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"AGENT_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: server
      operation: Update
      time: "2023-03-20T09:46:36Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:17:49Z"
    name: subscriber
    namespace: litmus
    resourceVersion: "863198"
    uid: 771ca635-bc70-4045-bacf-0d8f9b7ebfb4
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: subscriber
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: subscriber
      spec:
        containers:
        - env:
          - name: AGENT_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          envFrom:
          - configMapRef:
              name: agent-config
          - secretRef:
              name: agent-secret
          image: litmuschaos/litmusportal-subscriber:2.14.0
          imagePullPolicy: Always
          name: subscriber
          resources:
            limits:
              cpu: 225m
              ephemeral-storage: 1Gi
              memory: 500Mi
            requests:
              cpu: 125m
              ephemeral-storage: 500Mi
              memory: 300Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: litmus
        serviceAccountName: litmus
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-03-20T09:46:36Z"
      lastUpdateTime: "2023-03-20T09:46:42Z"
      message: ReplicaSet "subscriber-686d9b8dd9" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-03-23T08:17:49Z"
      lastUpdateTime: "2023-03-23T08:17:49Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-20T09:46:40Z"
    generation: 5
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"workflow-controller"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"LEADER_ELECTION_DISABLE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: server
      operation: Update
      time: "2023-03-20T09:46:40Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:53Z"
    name: workflow-controller
    namespace: litmus
    resourceVersion: "863012"
    uid: e872a24c-04a6-4d72-8771-4df1f6e9c194
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: workflow-controller
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: workflow-controller
      spec:
        containers:
        - args:
          - --configmap
          - workflow-controller-configmap
          - --executor-image
          - litmuschaos/argoexec:v3.3.1
          - --container-runtime-executor
          - k8sapi
          command:
          - workflow-controller
          env:
          - name: LEADER_ELECTION_DISABLE
            value: "true"
          image: litmuschaos/workflow-controller:v3.3.1
          imagePullPolicy: IfNotPresent
          name: workflow-controller
          resources:
            limits:
              cpu: 225m
              ephemeral-storage: 1Gi
              memory: 500Mi
            requests:
              cpu: 125m
              ephemeral-storage: 500Mi
              memory: 300Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argo
        serviceAccountName: argo
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-03-20T09:46:40Z"
      lastUpdateTime: "2023-03-20T09:46:49Z"
      message: ReplicaSet "workflow-controller-768f7d94dc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-03-23T08:16:53Z"
      lastUpdateTime: "2023-03-23T08:16:53Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2023-03-20T15:40:14Z"
    generation: 2
    labels:
      app: balancereader
      pod-template-hash: 6b4679f6fc
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"1a654446-c2cd-4b7f-966f-bfd454cc6d14"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kubectl.kubernetes.io/restartedAt: {}
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"balancereader"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"CACHE_SIZE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ENABLE_METRICS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ENABLE_TRACING"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"JVM_OPTS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LOG_LEVEL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POLL_MS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp/.ssh"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"publickey"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:secretName: {}
                k:{"name":"tmp"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-22T11:58:29Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-22T11:58:29Z"
    name: balancereader-6b4679f6fc
    namespace: bank-of-anthos
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: balancereader
      uid: 1a654446-c2cd-4b7f-966f-bfd454cc6d14
    resourceVersion: "777726"
    uid: b327ee1c-9f13-4342-bd62-b43518323254
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: balancereader
        pod-template-hash: 6b4679f6fc
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2023-03-20T16:40:14+01:00"
        creationTimestamp: null
        labels:
          app: balancereader
          pod-template-hash: 6b4679f6fc
      spec:
        containers:
        - env:
          - name: VERSION
            value: v0.5.10
          - name: PORT
            value: "8080"
          - name: ENABLE_TRACING
            value: "false"
          - name: ENABLE_METRICS
            value: "false"
          - name: POLL_MS
            value: "100"
          - name: CACHE_SIZE
            value: "1000000"
          - name: JVM_OPTS
            value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap
              -Xms256m -Xmx512m
          - name: LOG_LEVEL
            value: info
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          envFrom:
          - configMapRef:
              name: environment-config
          - configMapRef:
              name: ledger-db-config
          image: gcr.io/bank-of-anthos-ci/balancereader:v0.5.10
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthy
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          name: balancereader
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /healthy
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/.ssh
            name: publickey
            readOnly: true
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 5
        volumes:
        - name: publickey
          secret:
            defaultMode: 420
            items:
            - key: jwtRS256.key.pub
              path: publickey
            secretName: jwt-key
        - emptyDir: {}
          name: tmp
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-19T10:57:08Z"
    generation: 2
    labels:
      app: balancereader
      pod-template-hash: 6fdff5b968
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"1a654446-c2cd-4b7f-966f-bfd454cc6d14"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"balancereader"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"CACHE_SIZE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ENABLE_METRICS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ENABLE_TRACING"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"JVM_OPTS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LOG_LEVEL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POLL_MS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp/.ssh"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"publickey"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:secretName: {}
                k:{"name":"tmp"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-20T15:42:05Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-20T15:42:05Z"
    name: balancereader-6fdff5b968
    namespace: bank-of-anthos
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: balancereader
      uid: 1a654446-c2cd-4b7f-966f-bfd454cc6d14
    resourceVersion: "468861"
    uid: 82db9b86-bf47-409a-9592-33172837775a
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: balancereader
        pod-template-hash: 6fdff5b968
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: balancereader
          pod-template-hash: 6fdff5b968
      spec:
        containers:
        - env:
          - name: VERSION
            value: v0.5.10
          - name: PORT
            value: "8080"
          - name: ENABLE_TRACING
            value: "false"
          - name: ENABLE_METRICS
            value: "false"
          - name: POLL_MS
            value: "100"
          - name: CACHE_SIZE
            value: "1000000"
          - name: JVM_OPTS
            value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap
              -Xms256m -Xmx512m
          - name: LOG_LEVEL
            value: info
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          envFrom:
          - configMapRef:
              name: environment-config
          - configMapRef:
              name: ledger-db-config
          image: gcr.io/bank-of-anthos-ci/balancereader:v0.5.10
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthy
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          name: balancereader
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /healthy
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/.ssh
            name: publickey
            readOnly: true
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 5
        volumes:
        - name: publickey
          secret:
            defaultMode: 420
            items:
            - key: jwtRS256.key.pub
              path: publickey
            secretName: jwt-key
        - emptyDir: {}
          name: tmp
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-19T10:57:09Z"
    generation: 2
    labels:
      app: contacts
      pod-template-hash: 65b7f4bdb
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8fab55a7-d710-418f-b62c-a22913ec76ed"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"contacts"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"ENABLE_TRACING"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LOG_LEVEL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp/.ssh"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"publickey"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:secretName: {}
                k:{"name":"tmp"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-20T15:40:30Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-20T15:40:30Z"
    name: contacts-65b7f4bdb
    namespace: bank-of-anthos
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: contacts
      uid: 8fab55a7-d710-418f-b62c-a22913ec76ed
    resourceVersion: "468553"
    uid: 29f22a8b-73d8-4827-8326-2877fde01cde
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: contacts
        pod-template-hash: 65b7f4bdb
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: contacts
          pod-template-hash: 65b7f4bdb
      spec:
        containers:
        - env:
          - name: VERSION
            value: v0.5.10
          - name: PORT
            value: "8080"
          - name: ENABLE_TRACING
            value: "false"
          - name: LOG_LEVEL
            value: info
          envFrom:
          - configMapRef:
              name: environment-config
          - configMapRef:
              name: accounts-db-config
          image: gcr.io/bank-of-anthos-ci/contacts:v0.5.10
          imagePullPolicy: IfNotPresent
          name: contacts
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 250m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/.ssh
            name: publickey
            readOnly: true
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 5
        volumes:
        - name: publickey
          secret:
            defaultMode: 420
            items:
            - key: jwtRS256.key.pub
              path: publickey
            secretName: jwt-key
        - emptyDir: {}
          name: tmp
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2023-03-20T15:40:14Z"
    generation: 2
    labels:
      app: contacts
      pod-template-hash: 7f6d8556dc
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8fab55a7-d710-418f-b62c-a22913ec76ed"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kubectl.kubernetes.io/restartedAt: {}
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"contacts"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"ENABLE_TRACING"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LOG_LEVEL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp/.ssh"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"publickey"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:secretName: {}
                k:{"name":"tmp"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-22T11:58:29Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-22T11:58:29Z"
    name: contacts-7f6d8556dc
    namespace: bank-of-anthos
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: contacts
      uid: 8fab55a7-d710-418f-b62c-a22913ec76ed
    resourceVersion: "777735"
    uid: 48b584c0-bf54-44b9-b332-82825b66ed23
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: contacts
        pod-template-hash: 7f6d8556dc
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2023-03-20T16:40:14+01:00"
        creationTimestamp: null
        labels:
          app: contacts
          pod-template-hash: 7f6d8556dc
      spec:
        containers:
        - env:
          - name: VERSION
            value: v0.5.10
          - name: PORT
            value: "8080"
          - name: ENABLE_TRACING
            value: "false"
          - name: LOG_LEVEL
            value: info
          envFrom:
          - configMapRef:
              name: environment-config
          - configMapRef:
              name: accounts-db-config
          image: gcr.io/bank-of-anthos-ci/contacts:v0.5.10
          imagePullPolicy: IfNotPresent
          name: contacts
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 250m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/.ssh
            name: publickey
            readOnly: true
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 5
        volumes:
        - name: publickey
          secret:
            defaultMode: 420
            items:
            - key: jwtRS256.key.pub
              path: publickey
            secretName: jwt-key
        - emptyDir: {}
          name: tmp
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2023-03-20T15:40:14Z"
    generation: 2
    labels:
      app: frontend
      pod-template-hash: 59c84b5f46
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"68cf3c77-5526-4068-91f6-b516ac2739e0"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kubectl.kubernetes.io/restartedAt: {}
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"frontend"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"ALLOWED_OAUTH_REDIRECT_URI"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:configMapKeyRef: {}
                    k:{"name":"CLUSTER_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"DEFAULT_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:configMapKeyRef: {}
                    k:{"name":"DEFAULT_USERNAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:configMapKeyRef: {}
                    k:{"name":"ENABLE_TRACING"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LOG_LEVEL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"REGISTERED_OAUTH_CLIENT_ID"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:configMapKeyRef: {}
                    k:{"name":"SCHEME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp/.ssh"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"publickey"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:secretName: {}
                k:{"name":"tmp"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-22T11:58:29Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-22T11:58:29Z"
    name: frontend-59c84b5f46
    namespace: bank-of-anthos
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: frontend
      uid: 68cf3c77-5526-4068-91f6-b516ac2739e0
    resourceVersion: "777730"
    uid: 3551dfda-4ab8-4b21-9c02-afc9ef73b6c9
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: frontend
        pod-template-hash: 59c84b5f46
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2023-03-20T16:40:14+01:00"
        creationTimestamp: null
        labels:
          app: frontend
          pod-template-hash: 59c84b5f46
      spec:
        containers:
        - env:
          - name: VERSION
            value: v0.5.10
          - name: PORT
            value: "8080"
          - name: ENABLE_TRACING
            value: "false"
          - name: SCHEME
            value: http
          - name: LOG_LEVEL
            value: info
          - name: CLUSTER_NAME
            value: mycluster-fra02-b3c.4x16
          - name: DEFAULT_USERNAME
            valueFrom:
              configMapKeyRef:
                key: DEMO_LOGIN_USERNAME
                name: demo-data-config
          - name: DEFAULT_PASSWORD
            valueFrom:
              configMapKeyRef:
                key: DEMO_LOGIN_PASSWORD
                name: demo-data-config
          - name: REGISTERED_OAUTH_CLIENT_ID
            valueFrom:
              configMapKeyRef:
                key: DEMO_OAUTH_CLIENT_ID
                name: oauth-config
                optional: true
          - name: ALLOWED_OAUTH_REDIRECT_URI
            valueFrom:
              configMapKeyRef:
                key: DEMO_OAUTH_REDIRECT_URI
                name: oauth-config
                optional: true
          envFrom:
          - configMapRef:
              name: environment-config
          - configMapRef:
              name: service-api-config
          image: gcr.io/bank-of-anthos-ci/frontend:v0.5.10
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 30
          name: frontend
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 250m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/.ssh
            name: publickey
            readOnly: true
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 5
        volumes:
        - name: publickey
          secret:
            defaultMode: 420
            items:
            - key: jwtRS256.key.pub
              path: publickey
            secretName: jwt-key
        - emptyDir: {}
          name: tmp
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-19T10:57:09Z"
    generation: 2
    labels:
      app: frontend
      pod-template-hash: 74fffb99d7
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"68cf3c77-5526-4068-91f6-b516ac2739e0"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"frontend"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"ALLOWED_OAUTH_REDIRECT_URI"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:configMapKeyRef: {}
                    k:{"name":"CLUSTER_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"DEFAULT_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:configMapKeyRef: {}
                    k:{"name":"DEFAULT_USERNAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:configMapKeyRef: {}
                    k:{"name":"ENABLE_TRACING"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LOG_LEVEL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"REGISTERED_OAUTH_CLIENT_ID"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:configMapKeyRef: {}
                    k:{"name":"SCHEME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp/.ssh"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"publickey"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:secretName: {}
                k:{"name":"tmp"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-20T15:40:30Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-20T15:40:30Z"
    name: frontend-74fffb99d7
    namespace: bank-of-anthos
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: frontend
      uid: 68cf3c77-5526-4068-91f6-b516ac2739e0
    resourceVersion: "468569"
    uid: 812de758-1077-46e5-878b-369c3389de7c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: frontend
        pod-template-hash: 74fffb99d7
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: frontend
          pod-template-hash: 74fffb99d7
      spec:
        containers:
        - env:
          - name: VERSION
            value: v0.5.10
          - name: PORT
            value: "8080"
          - name: ENABLE_TRACING
            value: "false"
          - name: SCHEME
            value: http
          - name: LOG_LEVEL
            value: info
          - name: CLUSTER_NAME
            value: mycluster-fra02-b3c.4x16
          - name: DEFAULT_USERNAME
            valueFrom:
              configMapKeyRef:
                key: DEMO_LOGIN_USERNAME
                name: demo-data-config
          - name: DEFAULT_PASSWORD
            valueFrom:
              configMapKeyRef:
                key: DEMO_LOGIN_PASSWORD
                name: demo-data-config
          - name: REGISTERED_OAUTH_CLIENT_ID
            valueFrom:
              configMapKeyRef:
                key: DEMO_OAUTH_CLIENT_ID
                name: oauth-config
                optional: true
          - name: ALLOWED_OAUTH_REDIRECT_URI
            valueFrom:
              configMapKeyRef:
                key: DEMO_OAUTH_REDIRECT_URI
                name: oauth-config
                optional: true
          envFrom:
          - configMapRef:
              name: environment-config
          - configMapRef:
              name: service-api-config
          image: gcr.io/bank-of-anthos-ci/frontend:v0.5.10
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 30
          name: frontend
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 250m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/.ssh
            name: publickey
            readOnly: true
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 5
        volumes:
        - name: publickey
          secret:
            defaultMode: 420
            items:
            - key: jwtRS256.key.pub
              path: publickey
            secretName: jwt-key
        - emptyDir: {}
          name: tmp
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2023-03-20T15:40:14Z"
    generation: 2
    labels:
      app: ledgerwriter
      pod-template-hash: 675c9df465
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b894d443-2cb2-429e-990f-8b135415e99d"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kubectl.kubernetes.io/restartedAt: {}
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"ledgerwriter"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"ENABLE_METRICS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ENABLE_TRACING"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"JVM_OPTS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LOG_LEVEL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp/.ssh"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"publickey"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:secretName: {}
                k:{"name":"tmp"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-22T11:58:29Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-22T11:58:29Z"
    name: ledgerwriter-675c9df465
    namespace: bank-of-anthos
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ledgerwriter
      uid: b894d443-2cb2-429e-990f-8b135415e99d
    resourceVersion: "777754"
    uid: 55ff6721-a374-4113-b512-a32b77fc6e2f
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ledgerwriter
        pod-template-hash: 675c9df465
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2023-03-20T16:40:14+01:00"
        creationTimestamp: null
        labels:
          app: ledgerwriter
          pod-template-hash: 675c9df465
      spec:
        containers:
        - env:
          - name: VERSION
            value: v0.5.10
          - name: PORT
            value: "8080"
          - name: ENABLE_TRACING
            value: "false"
          - name: ENABLE_METRICS
            value: "false"
          - name: JVM_OPTS
            value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap
              -Xms256m -Xmx512m
          - name: LOG_LEVEL
            value: info
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          envFrom:
          - configMapRef:
              name: environment-config
          - configMapRef:
              name: service-api-config
          - configMapRef:
              name: ledger-db-config
          image: gcr.io/bank-of-anthos-ci/ledgerwriter:v0.5.10
          imagePullPolicy: IfNotPresent
          name: ledgerwriter
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/.ssh
            name: publickey
            readOnly: true
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 5
        volumes:
        - name: publickey
          secret:
            defaultMode: 420
            items:
            - key: jwtRS256.key.pub
              path: publickey
            secretName: jwt-key
        - emptyDir: {}
          name: tmp
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-19T10:57:10Z"
    generation: 2
    labels:
      app: ledgerwriter
      pod-template-hash: 6cbd58ff96
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b894d443-2cb2-429e-990f-8b135415e99d"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"ledgerwriter"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"ENABLE_METRICS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ENABLE_TRACING"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"JVM_OPTS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LOG_LEVEL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp/.ssh"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"publickey"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:secretName: {}
                k:{"name":"tmp"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-20T15:41:20Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-20T15:41:20Z"
    name: ledgerwriter-6cbd58ff96
    namespace: bank-of-anthos
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ledgerwriter
      uid: b894d443-2cb2-429e-990f-8b135415e99d
    resourceVersion: "468737"
    uid: a146d583-b1c3-4b39-9d97-963a7c410aea
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ledgerwriter
        pod-template-hash: 6cbd58ff96
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ledgerwriter
          pod-template-hash: 6cbd58ff96
      spec:
        containers:
        - env:
          - name: VERSION
            value: v0.5.10
          - name: PORT
            value: "8080"
          - name: ENABLE_TRACING
            value: "false"
          - name: ENABLE_METRICS
            value: "false"
          - name: JVM_OPTS
            value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap
              -Xms256m -Xmx512m
          - name: LOG_LEVEL
            value: info
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          envFrom:
          - configMapRef:
              name: environment-config
          - configMapRef:
              name: service-api-config
          - configMapRef:
              name: ledger-db-config
          image: gcr.io/bank-of-anthos-ci/ledgerwriter:v0.5.10
          imagePullPolicy: IfNotPresent
          name: ledgerwriter
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/.ssh
            name: publickey
            readOnly: true
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 5
        volumes:
        - name: publickey
          secret:
            defaultMode: 420
            items:
            - key: jwtRS256.key.pub
              path: publickey
            secretName: jwt-key
        - emptyDir: {}
          name: tmp
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-19T10:57:10Z"
    generation: 2
    labels:
      app: loadgenerator
      pod-template-hash: 687478857d
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ac5db93c-5ca4-47d9-a01c-ae3f7c0e1841"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:sidecar.istio.io/rewriteAppHTTPProbers: {}
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"loadgenerator"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"FRONTEND_ADDR"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LOG_LEVEL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"USERS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-19T11:07:41Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-19T11:07:41Z"
    name: loadgenerator-687478857d
    namespace: bank-of-anthos
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: loadgenerator
      uid: ac5db93c-5ca4-47d9-a01c-ae3f7c0e1841
    resourceVersion: "346520"
    uid: cd1560d3-3cbc-4a7e-b5a8-4cdea9568261
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: loadgenerator
        pod-template-hash: 687478857d
    template:
      metadata:
        annotations:
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: loadgenerator
          pod-template-hash: 687478857d
      spec:
        containers:
        - env:
          - name: FRONTEND_ADDR
            value: frontend:80
          - name: USERS
            value: "5"
          - name: LOG_LEVEL
            value: error
          image: gcr.io/bank-of-anthos-ci/loadgenerator:v0.5.10
          imagePullPolicy: IfNotPresent
          name: loadgenerator
          resources:
            limits:
              cpu: 250m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2023-03-20T15:40:14Z"
    generation: 1
    labels:
      app: loadgenerator
      pod-template-hash: 79554754b
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ac5db93c-5ca4-47d9-a01c-ae3f7c0e1841"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kubectl.kubernetes.io/restartedAt: {}
                f:sidecar.istio.io/rewriteAppHTTPProbers: {}
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"loadgenerator"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"FRONTEND_ADDR"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LOG_LEVEL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"USERS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-20T15:40:14Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-20T15:40:14Z"
    name: loadgenerator-79554754b
    namespace: bank-of-anthos
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: loadgenerator
      uid: ac5db93c-5ca4-47d9-a01c-ae3f7c0e1841
    resourceVersion: "468413"
    uid: 8a86cc54-09f2-40e6-9874-45ab9b98b67a
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: loadgenerator
        pod-template-hash: 79554754b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2023-03-20T16:40:14+01:00"
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: loadgenerator
          pod-template-hash: 79554754b
      spec:
        containers:
        - env:
          - name: FRONTEND_ADDR
            value: frontend:80
          - name: USERS
            value: "5"
          - name: LOG_LEVEL
            value: error
          image: gcr.io/bank-of-anthos-ci/loadgenerator:v0.5.10
          imagePullPolicy: IfNotPresent
          name: loadgenerator
          resources:
            limits:
              cpu: 250m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 1
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-19T11:05:41Z"
    generation: 2
    labels:
      app: transactionhistory
      pod-template-hash: 694d9899cb
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"97bded56-d3c8-48f1-9033-8f9e9b81ff8f"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"transactionhistory"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"CACHE_MINUTES"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CACHE_SIZE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ENABLE_METRICS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ENABLE_TRACING"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"HISTORY_LIMIT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"JVM_OPTS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LOG_LEVEL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POLL_MS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp/.ssh"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"publickey"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:secretName: {}
                k:{"name":"tmp"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-20T15:42:05Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-20T15:42:05Z"
    name: transactionhistory-694d9899cb
    namespace: bank-of-anthos
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: transactionhistory
      uid: 97bded56-d3c8-48f1-9033-8f9e9b81ff8f
    resourceVersion: "468873"
    uid: 9df76f9e-88bb-422d-889b-1f9fe2a47818
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: transactionhistory
        pod-template-hash: 694d9899cb
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: transactionhistory
          pod-template-hash: 694d9899cb
      spec:
        containers:
        - env:
          - name: VERSION
            value: v0.5.10
          - name: PORT
            value: "8080"
          - name: ENABLE_TRACING
            value: "false"
          - name: ENABLE_METRICS
            value: "false"
          - name: POLL_MS
            value: "100"
          - name: CACHE_SIZE
            value: "1000"
          - name: CACHE_MINUTES
            value: "60"
          - name: HISTORY_LIMIT
            value: "100"
          - name: JVM_OPTS
            value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap
              -Xms256m -Xmx512m
          - name: LOG_LEVEL
            value: info
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          envFrom:
          - configMapRef:
              name: environment-config
          - configMapRef:
              name: ledger-db-config
          image: gcr.io/bank-of-anthos-ci/transactionhistory:v0.5.10
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthy
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          name: transactionhistory
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /healthy
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/.ssh
            name: publickey
            readOnly: true
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 5
        volumes:
        - name: publickey
          secret:
            defaultMode: 420
            items:
            - key: jwtRS256.key.pub
              path: publickey
            secretName: jwt-key
        - emptyDir: {}
          name: tmp
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2023-03-20T15:40:14Z"
    generation: 2
    labels:
      app: transactionhistory
      pod-template-hash: 6c966846d7
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"97bded56-d3c8-48f1-9033-8f9e9b81ff8f"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kubectl.kubernetes.io/restartedAt: {}
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"transactionhistory"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"CACHE_MINUTES"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CACHE_SIZE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ENABLE_METRICS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ENABLE_TRACING"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"HISTORY_LIMIT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"JVM_OPTS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LOG_LEVEL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POLL_MS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp/.ssh"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"publickey"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:secretName: {}
                k:{"name":"tmp"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-22T11:58:29Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-22T11:58:29Z"
    name: transactionhistory-6c966846d7
    namespace: bank-of-anthos
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: transactionhistory
      uid: 97bded56-d3c8-48f1-9033-8f9e9b81ff8f
    resourceVersion: "777759"
    uid: 5cc27227-7685-4b26-b5c4-56a8947e7347
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: transactionhistory
        pod-template-hash: 6c966846d7
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2023-03-20T16:40:14+01:00"
        creationTimestamp: null
        labels:
          app: transactionhistory
          pod-template-hash: 6c966846d7
      spec:
        containers:
        - env:
          - name: VERSION
            value: v0.5.10
          - name: PORT
            value: "8080"
          - name: ENABLE_TRACING
            value: "false"
          - name: ENABLE_METRICS
            value: "false"
          - name: POLL_MS
            value: "100"
          - name: CACHE_SIZE
            value: "1000"
          - name: CACHE_MINUTES
            value: "60"
          - name: HISTORY_LIMIT
            value: "100"
          - name: JVM_OPTS
            value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap
              -Xms256m -Xmx512m
          - name: LOG_LEVEL
            value: info
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          envFrom:
          - configMapRef:
              name: environment-config
          - configMapRef:
              name: ledger-db-config
          image: gcr.io/bank-of-anthos-ci/transactionhistory:v0.5.10
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthy
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          name: transactionhistory
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /healthy
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/.ssh
            name: publickey
            readOnly: true
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 5
        volumes:
        - name: publickey
          secret:
            defaultMode: 420
            items:
            - key: jwtRS256.key.pub
              path: publickey
            secretName: jwt-key
        - emptyDir: {}
          name: tmp
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2023-03-20T15:40:14Z"
    generation: 2
    labels:
      app: userservice
      pod-template-hash: 6586dfdd5d
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"3c69c0f9-e9ea-43ad-9a47-95ac06cea866"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kubectl.kubernetes.io/restartedAt: {}
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"userservice"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"ENABLE_TRACING"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LOG_LEVEL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"PRIV_KEY_PATH"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TOKEN_EXPIRY_SECONDS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp/.ssh"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"keys"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:secretName: {}
                k:{"name":"tmp"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-22T11:58:29Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-22T11:58:29Z"
    name: userservice-6586dfdd5d
    namespace: bank-of-anthos
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: userservice
      uid: 3c69c0f9-e9ea-43ad-9a47-95ac06cea866
    resourceVersion: "777772"
    uid: 7e21cee2-0020-4464-8837-ae7d94d19934
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: userservice
        pod-template-hash: 6586dfdd5d
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2023-03-20T16:40:14+01:00"
        creationTimestamp: null
        labels:
          app: userservice
          pod-template-hash: 6586dfdd5d
      spec:
        containers:
        - env:
          - name: VERSION
            value: v0.5.10
          - name: PORT
            value: "8080"
          - name: ENABLE_TRACING
            value: "false"
          - name: TOKEN_EXPIRY_SECONDS
            value: "3600"
          - name: PRIV_KEY_PATH
            value: /tmp/.ssh/privatekey
          - name: LOG_LEVEL
            value: info
          envFrom:
          - configMapRef:
              name: environment-config
          - configMapRef:
              name: accounts-db-config
          image: gcr.io/bank-of-anthos-ci/userservice:v0.5.10
          imagePullPolicy: IfNotPresent
          name: userservice
          ports:
          - containerPort: 8080
            name: http-server
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 300m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/.ssh
            name: keys
            readOnly: true
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 5
        volumes:
        - name: keys
          secret:
            defaultMode: 420
            items:
            - key: jwtRS256.key
              path: privatekey
            - key: jwtRS256.key.pub
              path: publickey
            secretName: jwt-key
        - emptyDir: {}
          name: tmp
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-19T10:57:11Z"
    generation: 2
    labels:
      app: userservice
      pod-template-hash: 8cdcdbf87
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"3c69c0f9-e9ea-43ad-9a47-95ac06cea866"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"userservice"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"ENABLE_TRACING"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LOG_LEVEL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"PRIV_KEY_PATH"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TOKEN_EXPIRY_SECONDS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp/.ssh"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"keys"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:secretName: {}
                k:{"name":"tmp"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-20T15:40:35Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-20T15:40:35Z"
    name: userservice-8cdcdbf87
    namespace: bank-of-anthos
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: userservice
      uid: 3c69c0f9-e9ea-43ad-9a47-95ac06cea866
    resourceVersion: "468595"
    uid: 7062ba0f-8031-48f6-9346-8bf96c62b2b5
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: userservice
        pod-template-hash: 8cdcdbf87
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: userservice
          pod-template-hash: 8cdcdbf87
      spec:
        containers:
        - env:
          - name: VERSION
            value: v0.5.10
          - name: PORT
            value: "8080"
          - name: ENABLE_TRACING
            value: "false"
          - name: TOKEN_EXPIRY_SECONDS
            value: "3600"
          - name: PRIV_KEY_PATH
            value: /tmp/.ssh/privatekey
          - name: LOG_LEVEL
            value: info
          envFrom:
          - configMapRef:
              name: environment-config
          - configMapRef:
              name: accounts-db-config
          image: gcr.io/bank-of-anthos-ci/userservice:v0.5.10
          imagePullPolicy: IfNotPresent
          name: userservice
          ports:
          - containerPort: 8080
            name: http-server
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 300m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/.ssh
            name: keys
            readOnly: true
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 5
        volumes:
        - name: keys
          secret:
            defaultMode: 420
            items:
            - key: jwtRS256.key
              path: privatekey
            - key: jwtRS256.key.pub
              path: publickey
            secretName: jwt-key
        - emptyDir: {}
          name: tmp
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-19T10:57:10Z"
    generation: 1
    labels:
      ibm-cloud-provider-ip: 158-177-65-42
      ibm-cloud-provider-lb-app: keepalived
      ibm-cloud-provider-lb-name: a3ae8d4f4434849469c226c5e824584f
      pod-template-hash: dfbfcd5fd
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:ibm-cloud-provider-ip: {}
            f:ibm-cloud-provider-lb-app: {}
            f:ibm-cloud-provider-lb-name: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c5d1cc46-d1b4-4c69-bd81-e75560d5eda5"}: {}
        f:spec:
          f:minReadySeconds: {}
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:ibm-cloud-provider-ip: {}
                f:ibm-cloud-provider-lb-app: {}
                f:ibm-cloud-provider-lb-name: {}
                f:pod-template-hash: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:nodeAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"ibm-cloud-provider-ip-158-177-65-42"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"FEATURES"}:
                      .: {}
                      f:name: {}
                    k:{"name":"VIRTUAL_IP"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:capabilities:
                      .: {}
                      f:add: {}
                    f:privileged: {}
                    f:runAsGroup: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/status"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:hostNetwork: {}
              f:initContainers:
                .: {}
                k:{"name":"ibm-cloud-provider-ip-keepalived-init"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:runAsGroup: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/status"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"keepalived-status"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-19T10:57:10Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-26T18:22:25Z"
    name: ibm-cloud-provider-ip-158-177-65-42-dfbfcd5fd
    namespace: ibm-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ibm-cloud-provider-ip-158-177-65-42
      uid: c5d1cc46-d1b4-4c69-bd81-e75560d5eda5
    resourceVersion: "1449633"
    uid: 7eb1745f-3a93-40a9-a7a9-b413680e8c6e
  spec:
    minReadySeconds: 90
    replicas: 2
    selector:
      matchLabels:
        ibm-cloud-provider-ip: 158-177-65-42
        ibm-cloud-provider-lb-name: a3ae8d4f4434849469c226c5e824584f
        pod-template-hash: dfbfcd5fd
    template:
      metadata:
        creationTimestamp: null
        labels:
          ibm-cloud-provider-ip: 158-177-65-42
          ibm-cloud-provider-lb-app: keepalived
          ibm-cloud-provider-lb-name: a3ae8d4f4434849469c226c5e824584f
          pod-template-hash: dfbfcd5fd
        name: ibm-cloud-provider-ip-158-177-65-42
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: publicVLAN
                  operator: In
                  values:
                  - "3319718"
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: ibm-cloud-provider-lb-app
                    operator: In
                    values:
                    - keepalived
                topologyKey: kubernetes.io/hostname
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  ibm-cloud-provider-ip: 158-177-65-42
                  ibm-cloud-provider-lb-name: a3ae8d4f4434849469c226c5e824584f
              topologyKey: kubernetes.io/hostname
        containers:
        - env:
          - name: VIRTUAL_IP
            value: 158.177.65.42
          - name: FEATURES
          image: de.icr.io/armada-master/keepalived:2383
          imagePullPolicy: IfNotPresent
          name: ibm-cloud-provider-ip-158-177-65-42
          resources:
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
            privileged: false
            runAsGroup: 2000
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /status
            name: keepalived-status
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /usr/local/bin/hostDirPerms
          image: de.icr.io/armada-master/keepalived:2383
          imagePullPolicy: IfNotPresent
          name: ibm-cloud-provider-ip-keepalived-init
          resources:
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            runAsGroup: 0
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /status
            name: keepalived-status
        priorityClassName: ibm-app-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: dedicated
          value: gateway
        - key: dedicated
          value: edge
        volumes:
        - hostPath:
            path: /tmp/keepalived
            type: ""
          name: keepalived-status
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-15T09:41:05Z"
    generation: 1
    labels:
      ibm-cloud-provider-ip: 158-177-65-46
      ibm-cloud-provider-lb-app: keepalived
      ibm-cloud-provider-lb-name: a95e34b653e7249dc986e6d973eec8c0
      pod-template-hash: 5f65d64758
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:ibm-cloud-provider-ip: {}
            f:ibm-cloud-provider-lb-app: {}
            f:ibm-cloud-provider-lb-name: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6b606b2f-87ab-4da4-82d0-0c836bbd5c60"}: {}
        f:spec:
          f:minReadySeconds: {}
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:ibm-cloud-provider-ip: {}
                f:ibm-cloud-provider-lb-app: {}
                f:ibm-cloud-provider-lb-name: {}
                f:pod-template-hash: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:nodeAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"ibm-cloud-provider-ip-158-177-65-46"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"FEATURES"}:
                      .: {}
                      f:name: {}
                    k:{"name":"VIRTUAL_IP"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:capabilities:
                      .: {}
                      f:add: {}
                    f:privileged: {}
                    f:runAsGroup: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/status"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:hostNetwork: {}
              f:initContainers:
                .: {}
                k:{"name":"ibm-cloud-provider-ip-keepalived-init"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:runAsGroup: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/status"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"keepalived-status"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-15T09:41:05Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-15T09:42:46Z"
    name: ibm-cloud-provider-ip-158-177-65-46-5f65d64758
    namespace: ibm-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ibm-cloud-provider-ip-158-177-65-46
      uid: 6b606b2f-87ab-4da4-82d0-0c836bbd5c60
    resourceVersion: "3044"
    uid: bbda97a1-1b0b-4d97-93a2-93982fce446f
  spec:
    minReadySeconds: 90
    replicas: 2
    selector:
      matchLabels:
        ibm-cloud-provider-ip: 158-177-65-46
        ibm-cloud-provider-lb-name: a95e34b653e7249dc986e6d973eec8c0
        pod-template-hash: 5f65d64758
    template:
      metadata:
        creationTimestamp: null
        labels:
          ibm-cloud-provider-ip: 158-177-65-46
          ibm-cloud-provider-lb-app: keepalived
          ibm-cloud-provider-lb-name: a95e34b653e7249dc986e6d973eec8c0
          pod-template-hash: 5f65d64758
        name: ibm-cloud-provider-ip-158-177-65-46
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: publicVLAN
                  operator: In
                  values:
                  - "3319718"
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: ibm-cloud-provider-lb-app
                    operator: In
                    values:
                    - keepalived
                topologyKey: kubernetes.io/hostname
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  ibm-cloud-provider-ip: 158-177-65-46
                  ibm-cloud-provider-lb-name: a95e34b653e7249dc986e6d973eec8c0
              topologyKey: kubernetes.io/hostname
        containers:
        - env:
          - name: VIRTUAL_IP
            value: 158.177.65.46
          - name: FEATURES
          image: de.icr.io/armada-master/keepalived:2383
          imagePullPolicy: IfNotPresent
          name: ibm-cloud-provider-ip-158-177-65-46
          resources:
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
            privileged: false
            runAsGroup: 2000
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /status
            name: keepalived-status
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /usr/local/bin/hostDirPerms
          image: de.icr.io/armada-master/keepalived:2383
          imagePullPolicy: IfNotPresent
          name: ibm-cloud-provider-ip-keepalived-init
          resources:
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            runAsGroup: 0
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /status
            name: keepalived-status
        priorityClassName: ibm-app-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: dedicated
          value: gateway
        - key: dedicated
          value: edge
        volumes:
        - hostPath:
            path: /tmp/keepalived
            type: ""
          name: keepalived-status
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-15T09:19:32Z"
    generation: 1
    labels:
      k8s-app: calico-kube-controllers
      pod-template-hash: 68c88d7549
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:k8s-app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d9f3d2f3-a42e-43cb-927a-5165b3d01e32"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:k8s-app: {}
                f:pod-template-hash: {}
              f:name: {}
              f:namespace: {}
            f:spec:
              f:containers:
                k:{"name":"calico-kube-controllers"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"DATASTORE_TYPE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ENABLED_CONTROLLERS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-15T09:19:32Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:12Z"
    name: calico-kube-controllers-68c88d7549
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: calico-kube-controllers
      uid: d9f3d2f3-a42e-43cb-927a-5165b3d01e32
    resourceVersion: "1449390"
    uid: ede4e14a-79ee-4d90-996c-18681519e738
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: calico-kube-controllers
        pod-template-hash: 68c88d7549
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: calico-kube-controllers
          pod-template-hash: 68c88d7549
        name: calico-kube-controllers
        namespace: kube-system
      spec:
        containers:
        - env:
          - name: ENABLED_CONTROLLERS
            value: node
          - name: DATASTORE_TYPE
            value: kubernetes
          image: de.icr.io/armada-master/calico/kube-controllers:v3.24.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /usr/bin/check-status
              - -l
            failureThreshold: 6
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: calico-kube-controllers
          readinessProbe:
            exec:
              command:
              - /usr/bin/check-status
              - -r
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 3Gi
            requests:
              cpu: 10m
              memory: 25Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: calico-kube-controllers
        serviceAccountName: calico-kube-controllers
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-15T09:19:32Z"
    generation: 1
    labels:
      k8s-app: calico-typha
      pod-template-hash: 7d8459ddf6
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:k8s-app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"3be5ea63-f56c-4b29-ac6b-dedc8b4cb1dc"}: {}
        f:spec:
          f:minReadySeconds: {}
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:cluster-autoscaler.kubernetes.io/safe-to-evict: {}
              f:labels:
                .: {}
                f:k8s-app: {}
                f:pod-template-hash: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"calico-typha"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"TYPHA_CONNECTIONREBALANCINGMODE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TYPHA_DATASTORETYPE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TYPHA_HEALTHENABLED"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TYPHA_LOGFILEPATH"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TYPHA_LOGSEVERITYSCREEN"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TYPHA_LOGSEVERITYSYS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:host: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":5473,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:hostPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:host: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:runAsNonRoot: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:hostNetwork: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:topologySpreadConstraints:
                .: {}
                k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
                  .: {}
                  f:labelSelector: {}
                  f:maxSkew: {}
                  f:topologyKey: {}
                  f:whenUnsatisfiable: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-15T09:19:32Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-26T18:20:51Z"
    name: calico-typha-7d8459ddf6
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: calico-typha
      uid: 3be5ea63-f56c-4b29-ac6b-dedc8b4cb1dc
    resourceVersion: "1448910"
    uid: fe93cdaa-2d61-41dc-9ccc-87a272f481aa
  spec:
    minReadySeconds: 15
    replicas: 3
    selector:
      matchLabels:
        k8s-app: calico-typha
        pod-template-hash: 7d8459ddf6
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        creationTimestamp: null
        labels:
          k8s-app: calico-typha
          pod-template-hash: 7d8459ddf6
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - calico-typha
                topologyKey: topology.kubernetes.io/zone
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: k8s-app
                  operator: In
                  values:
                  - calico-typha
              topologyKey: kubernetes.io/hostname
        containers:
        - env:
          - name: TYPHA_LOGSEVERITYSCREEN
            value: info
          - name: TYPHA_LOGFILEPATH
            value: none
          - name: TYPHA_LOGSEVERITYSYS
            value: none
          - name: TYPHA_CONNECTIONREBALANCINGMODE
            value: kubernetes
          - name: TYPHA_DATASTORETYPE
            value: kubernetes
          - name: TYPHA_HEALTHENABLED
            value: "true"
          envFrom:
          - configMapRef:
              name: kubernetes-services-endpoint
              optional: true
          image: de.icr.io/armada-master/calico/typha:v3.24.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: localhost
              path: /liveness
              port: 9098
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          name: calico-typha
          ports:
          - containerPort: 5473
            hostPort: 5473
            name: calico-typha
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: localhost
              path: /readiness
              port: 9098
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 250m
              memory: 80Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
        serviceAccount: calico-node
        serviceAccountName: calico-node
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              k8s-app: calico-typha
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 3
    observedGeneration: 1
    readyReplicas: 2
    replicas: 3
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      armada-service: cruiser-kube-addons
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "1"
      version: 1.25.6_1534
    creationTimestamp: "2023-03-15T09:19:49Z"
    generation: 2
    labels:
      k8s-app: kube-dns
      pod-template-hash: 599d67449d
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:armada-service: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:version: {}
          f:labels:
            .: {}
            f:k8s-app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"dbf84334-8404-46a6-91ed-f229e5179b06"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:k8s-app: {}
                f:pod-template-hash: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"coredns"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":53,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":53,"protocol":"UDP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":9153,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:add: {}
                      f:drop: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsUser: {}
                    f:seccompProfile:
                      .: {}
                      f:type: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/coredns"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:topologySpreadConstraints:
                .: {}
                k:{"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}:
                  .: {}
                  f:labelSelector: {}
                  f:maxSkew: {}
                  f:topologyKey: {}
                  f:whenUnsatisfiable: {}
                k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
                  .: {}
                  f:labelSelector: {}
                  f:maxSkew: {}
                  f:topologyKey: {}
                  f:whenUnsatisfiable: {}
              f:volumes:
                .: {}
                k:{"name":"config-volume"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-15T09:26:15Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:16Z"
    name: coredns-599d67449d
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: dbf84334-8404-46a6-91ed-f229e5179b06
    resourceVersion: "1449445"
    uid: e7dab542-795b-41d9-920c-95f9ac5b33a2
  spec:
    replicas: 3
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 599d67449d
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: 599d67449d
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: topology.kubernetes.io/zone
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: de.icr.io/armada-master/coredns:1.10.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 400Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: dedicated
          value: gpu-task
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              k8s-app: kube-dns
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        - labelSelector:
            matchLabels:
              k8s-app: kube-dns
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
        volumes:
        - configMap:
            defaultMode: 420
            name: coredns
          name: config-volume
  status:
    availableReplicas: 3
    fullyLabeledReplicas: 3
    observedGeneration: 2
    readyReplicas: 3
    replicas: 3
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      armada-service: cruiser-kube-addons
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      version: 1.25.6_1534
    creationTimestamp: "2023-03-15T09:19:50Z"
    generation: 1
    labels:
      k8s-app: coredns-autoscaler
      pod-template-hash: 5b84849d77
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:armada-service: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:version: {}
          f:labels:
            .: {}
            f:k8s-app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"98df2359-8c3e-4c3a-a0e3-ff71e91ed87c"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:k8s-app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"autoscaler"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsUser: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
                f:supplementalGroups: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-15T09:22:56Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:06Z"
    name: coredns-autoscaler-5b84849d77
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns-autoscaler
      uid: 98df2359-8c3e-4c3a-a0e3-ff71e91ed87c
    resourceVersion: "1449329"
    uid: 181d69c8-df91-442a-9dd7-9850d1c14318
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: coredns-autoscaler
        pod-template-hash: 5b84849d77
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: coredns-autoscaler
          pod-template-hash: 5b84849d77
      spec:
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=coredns-autoscaler
          - --target=Deployment/coredns
          - --default-params={"linear":{"coresPerReplica":256,"nodesPerReplica":16,"preventSinglePointFailure":true,"min":3,"includeUnschedulableNodes":true}}
          - --logtostderr=true
          - --v=2
          image: de.icr.io/armada-master/cluster-proportional-autoscaler:1.8.6
          imagePullPolicy: IfNotPresent
          name: autoscaler
          resources:
            requests:
              cpu: 1m
              memory: 5Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65532
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
          supplementalGroups:
          - 65534
        serviceAccount: coredns-autoscaler
        serviceAccountName: coredns-autoscaler
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-15T09:22:45Z"
    generation: 1
    labels:
      k8s-app: dashboard-metrics-scraper
      pod-template-hash: c69fc9c89
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:k8s-app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"aae5ba97-0751-4414-8861-5b0245a47af3"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:k8s-app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"dashboard-metrics-scraper"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8000,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsGroup: {}
                    f:runAsUser: {}
                    f:seccompProfile:
                      .: {}
                      f:type: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"tmp-volume"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-15T09:22:45Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:41Z"
    name: dashboard-metrics-scraper-c69fc9c89
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: dashboard-metrics-scraper
      uid: aae5ba97-0751-4414-8861-5b0245a47af3
    resourceVersion: "1449524"
    uid: 7cd7e73f-9d8e-48c1-8380-63f05264720c
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: dashboard-metrics-scraper
        pod-template-hash: c69fc9c89
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: dashboard-metrics-scraper
          pod-template-hash: c69fc9c89
      spec:
        containers:
        - image: de.icr.io/armada-master/kubernetesui-metrics-scraper:v1.0.8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: dashboard-metrics-scraper
          ports:
          - containerPort: 8000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          resources:
            requests:
              cpu: 1m
              memory: 10Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      armada-service: cruiser-kube-addons
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      version: 1.25.6_1534
    creationTimestamp: "2023-03-15T09:20:41Z"
    generation: 1
    labels:
      app: ibm-file-plugin
      pod-template-hash: 746759ffb4
      tier: frontend
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:armada-service: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:version: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
            f:tier: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5bf946aa-20e4-4f48-8939-458c1a591341"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
                f:tier: {}
            f:spec:
              f:containers:
                k:{"name":"ibm-file-plugin-container"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"CLUSTER_ID"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CM_SUBNET"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CRN_CONFIGMAP_PATH"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"PLUGIN_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"STORAGE_CONFIG_PATH"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"WATCHER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/ibm_crn_info"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/storage_ibmc"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"crn-info-ibmc"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"storage-plugin-secret"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-15T09:22:56Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:11Z"
    name: ibm-file-plugin-746759ffb4
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ibm-file-plugin
      uid: 5bf946aa-20e4-4f48-8939-458c1a591341
    resourceVersion: "1449381"
    uid: 079d635d-8f98-4874-ba8d-1717c25e3d11
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ibm-file-plugin
        pod-template-hash: 746759ffb4
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ibm-file-plugin
          pod-template-hash: 746759ffb4
          tier: frontend
      spec:
        containers:
        - args:
          - -provisioner=ibm.io/ibmc-file
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: PLUGIN_IMAGE
            value: de.icr.io/armada-master/storage-file-plugin:427
          - name: CLUSTER_ID
            value: cg8om62f01beu8rudp30
          - name: CM_SUBNET
            value: subnet-config
          - name: WATCHER
            value: "false"
          - name: STORAGE_CONFIG_PATH
            value: /etc/storage_ibmc
          - name: CRN_CONFIGMAP_PATH
            value: /etc/ibm_crn_info
          image: de.icr.io/armada-master/storage-file-plugin:427
          imagePullPolicy: IfNotPresent
          name: ibm-file-plugin-container
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            privileged: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/storage_ibmc
            name: storage-plugin-secret
          - mountPath: /etc/ibm_crn_info
            name: crn-info-ibmc
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ibm-file-plugin
        serviceAccountName: ibm-file-plugin
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - name: storage-plugin-secret
          secret:
            defaultMode: 420
            secretName: storage-secret-store
        - configMap:
            defaultMode: 420
            name: crn-info-ibmc
          name: crn-info-ibmc
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      armada-service: cruiser-kube-addons
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      version: 1.25.6_1534
    creationTimestamp: "2023-03-15T09:20:42Z"
    generation: 1
    labels:
      app: ibm-storage-watcher
      pod-template-hash: 7fdf48b55d
      tier: frontend
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:armada-service: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:version: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
            f:tier: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"98af3c48-3c56-41de-9930-6b6cfe85b0ed"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
                f:tier: {}
            f:spec:
              f:containers:
                k:{"name":"ibm-storage-watcher-container"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"CLUSTER_ID"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CM_SUBNET"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CRN_CONFIGMAP_PATH"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"STORAGE_CONFIG_PATH"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"WATCHER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:privileged: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/ibm_crn_info"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/storage_ibmc"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"crn-info-ibmc"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"storage-plugin-secret"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-15T09:22:57Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:11Z"
    name: ibm-storage-watcher-7fdf48b55d
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ibm-storage-watcher
      uid: 98af3c48-3c56-41de-9930-6b6cfe85b0ed
    resourceVersion: "1449384"
    uid: bee8b0fd-1494-44da-a8e7-d49e96f38320
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ibm-storage-watcher
        pod-template-hash: 7fdf48b55d
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ibm-storage-watcher
          pod-template-hash: 7fdf48b55d
          tier: frontend
      spec:
        containers:
        - args:
          - -provisioner=ibm.io/ibmc-file
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CLUSTER_ID
            value: cg8om62f01beu8rudp30
          - name: CM_SUBNET
            value: subnet-config
          - name: WATCHER
            value: "true"
          - name: STORAGE_CONFIG_PATH
            value: /etc/storage_ibmc
          - name: CRN_CONFIGMAP_PATH
            value: /etc/ibm_crn_info
          image: de.icr.io/armada-master/storage-file-plugin:427
          imagePullPolicy: IfNotPresent
          name: ibm-storage-watcher-container
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            runAsNonRoot: true
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/storage_ibmc
            name: storage-plugin-secret
          - mountPath: /etc/ibm_crn_info
            name: crn-info-ibmc
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ibm-file-plugin
        serviceAccountName: ibm-file-plugin
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - name: storage-plugin-secret
          secret:
            defaultMode: 420
            secretName: storage-secret-store
        - configMap:
            defaultMode: 420
            name: crn-info-ibmc
          name: crn-info-ibmc
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      armada-service: cruiser-kube-addons
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      version: 1.25.6_1534
    creationTimestamp: "2023-03-15T09:20:55Z"
    generation: 1
    labels:
      app: ibmcloud-block-storage-plugin
      pod-template-hash: 74dc98bc8
      release: ibmc-block
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:armada-service: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:version: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
            f:release: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"3c69c1ac-5650-44a2-8a17-433474de94ba"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
                f:release: {}
            f:spec:
              f:affinity:
                .: {}
                f:nodeAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"ibmcloud-block-storage-plugin-container"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"DEBUG_TRACE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"IBMC_FEATURE_GATES"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"PLUGIN_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"STORAGE_CONFIG_PATH"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:privileged: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/storage_ibmc"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"customer-auth"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-15T09:22:56Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:09Z"
    name: ibmcloud-block-storage-plugin-74dc98bc8
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ibmcloud-block-storage-plugin
      uid: 3c69c1ac-5650-44a2-8a17-433474de94ba
    resourceVersion: "1449362"
    uid: 3a196418-37de-4f2e-87a7-76f2829031c0
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ibmcloud-block-storage-plugin
        pod-template-hash: 74dc98bc8
        release: ibmc-block
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ibmcloud-block-storage-plugin
          pod-template-hash: 74dc98bc8
          release: ibmc-block
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: ibm-cloud.kubernetes.io/iaas-provider
                  operator: In
                  values:
                  - softlayer
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
        containers:
        - args:
          - --provisioner=ibm.io/ibmc-block
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: PLUGIN_IMAGE
            value: de.icr.io/armada-master/ibmcloud-block-storage-plugin:v2.3.7
          - name: DEBUG_TRACE
            value: "false"
          - name: STORAGE_CONFIG_PATH
            value: /etc/storage_ibmc
          - name: IBMC_FEATURE_GATES
            value: KeyManagementBYOK=true
          image: de.icr.io/armada-master/ibmcloud-block-storage-plugin:v2.3.7
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - ls
              - /etc/storage_ibmc
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          name: ibmcloud-block-storage-plugin-container
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            runAsNonRoot: true
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/storage_ibmc
            name: customer-auth
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ibmcloud-block-storage-plugin
        serviceAccountName: ibmcloud-block-storage-plugin
        terminationGracePeriodSeconds: 30
        volumes:
        - name: customer-auth
          secret:
            defaultMode: 420
            secretName: storage-secret-store
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      razee.io/build-url: https://travis.ibm.com/alchemy-containers/armada-ingress-microservice/builds/87269293
      razee.io/source-url: https://github.ibm.com/alchemy-containers/armada-ingress-microservice/commit/6c850dc1996a468700d2bf02ec4a933a52d54130
    creationTimestamp: "2023-03-24T15:07:04Z"
    generation: 1
    labels:
      app: ingress-cluster-healthcheck
      appVersion: 1.0.0_402
      pod-template-hash: 7997bfb4c5
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:razee.io/build-url: {}
            f:razee.io/source-url: {}
          f:labels:
            .: {}
            f:app: {}
            f:appVersion: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"16fcbdca-da5f-4e24-9b34-f67f2241bfb1"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:razee.io/build-url: {}
                f:razee.io/source-url: {}
              f:labels:
                .: {}
                f:app: {}
                f:appVersion: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"ingress-cluster-healthcheck"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsGroup: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:runAsGroup: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-24T15:07:04Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-24T15:07:07Z"
    name: ingress-cluster-healthcheck-7997bfb4c5
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ingress-cluster-healthcheck
      uid: 16fcbdca-da5f-4e24-9b34-f67f2241bfb1
    resourceVersion: "1084365"
    uid: 042008cf-0104-4d9c-bd09-c61455a09d98
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ingress-cluster-healthcheck
        pod-template-hash: 7997bfb4c5
    template:
      metadata:
        annotations:
          razee.io/build-url: https://travis.ibm.com/alchemy-containers/armada-ingress-microservice/builds/87269293
          razee.io/source-url: https://github.ibm.com/alchemy-containers/armada-ingress-microservice/commit/6c850dc1996a468700d2bf02ec4a933a52d54130
        creationTimestamp: null
        labels:
          app: ingress-cluster-healthcheck
          appVersion: 1.0.0_402
          pod-template-hash: 7997bfb4c5
      spec:
        containers:
        - image: us.icr.io/armada-master/armada-ingress-cluster-healthcheck:1.0.0_402
          imagePullPolicy: Always
          name: ingress-cluster-healthcheck
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 2000
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 2000
          runAsUser: 2000
        serviceAccount: ibm-k8s-ingress
        serviceAccountName: ibm-k8s-ingress
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-15T09:22:45Z"
    generation: 1
    labels:
      k8s-app: kubernetes-dashboard
      pod-template-hash: 7bd7565fc7
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:k8s-app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"df6272ec-d08e-4d9f-885d-61e4147907f7"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:k8s-app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"kubernetes-dashboard"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsGroup: {}
                    f:runAsUser: {}
                    f:seccompProfile:
                      .: {}
                      f:type: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/certs"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"kubernetes-dashboard-certs"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"tmp-volume"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-15T09:22:45Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:42Z"
    name: kubernetes-dashboard-7bd7565fc7
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kubernetes-dashboard
      uid: df6272ec-d08e-4d9f-885d-61e4147907f7
    resourceVersion: "1449532"
    uid: d4e78c3c-78e4-4525-ba2e-ca5eb260abc0
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kubernetes-dashboard
        pod-template-hash: 7bd7565fc7
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kubernetes-dashboard
          pod-template-hash: 7bd7565fc7
      spec:
        containers:
        - args:
          - --auto-generate-certificates
          - --namespace=kube-system
          image: de.icr.io/armada-master/kubernetesui-dashboard:v2.7.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: kubernetes-dashboard
          ports:
          - containerPort: 8443
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: kubernetes-dashboard-certs
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - name: kubernetes-dashboard-certs
          secret:
            defaultMode: 420
            secretName: kubernetes-dashboard-certs
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2023-03-15T09:26:22Z"
    generation: 2
    labels:
      cert-checksum: a500499f6893d6fdb488b3664775ddcc09a4d728
      k8s-app: metrics-server
      pod-template-hash: 577c74c6d5
      version: v0.6.0
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:cert-checksum: {}
            f:k8s-app: {}
            f:pod-template-hash: {}
            f:version: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"257b7f82-3c2a-42fa-88f2-f326a2bf3234"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:cert-checksum: {}
                f:k8s-app: {}
                f:pod-template-hash: {}
                f:version: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"config-watcher"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"metrics-server"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":4443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/metrics-server-certs"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"metrics-server-nanny"}:
                  .: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"MY_POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"MY_POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:shareProcessNamespace: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"metrics-server-certs"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"metrics-server-config-volume"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"tmp-dir"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-15T09:26:22Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-26T18:21:52Z"
    name: metrics-server-577c74c6d5
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server
      uid: 257b7f82-3c2a-42fa-88f2-f326a2bf3234
    resourceVersion: "1449564"
    uid: d082e870-4184-4c07-a8c7-97a264e663f5
  spec:
    replicas: 2
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 577c74c6d5
    template:
      metadata:
        creationTimestamp: null
        labels:
          cert-checksum: a500499f6893d6fdb488b3664775ddcc09a4d728
          k8s-app: metrics-server
          pod-template-hash: 577c74c6d5
          version: v0.6.0
        name: metrics-server
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: topology.kubernetes.io/zone
              weight: 100
        containers:
        - command:
          - /metrics-server
          - --metric-resolution=45s
          - --secure-port=4443
          - --tls-cert-file=/etc/metrics-server-certs/tls.crt
          - --tls-private-key-file=/etc/metrics-server-certs/tls.key
          image: de.icr.io/armada-master/metrics-server:v0.6.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            initialDelaySeconds: 60
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 15
          name: metrics-server
          ports:
          - containerPort: 4443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 15
          resources:
            limits:
              cpu: 116m
              memory: 136Mi
            requests:
              cpu: 116m
              memory: 136Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/metrics-server-certs
            name: metrics-server-certs
          - mountPath: /tmp
            name: tmp-dir
        - command:
          - /pod_nanny
          - --config-dir=/etc/config
          - --cpu=100m
          - --extra-cpu=1m
          - --memory=40Mi
          - --extra-memory=6Mi
          - --threshold=5
          - --deployment=metrics-server
          - --container=metrics-server
          - --poll-period=30000
          - --estimator=exponential
          - --use-metrics=true
          env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: de.icr.io/armada-master/addon-resizer:1.8.15
          imagePullPolicy: IfNotPresent
          name: metrics-server-nanny
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 5m
              memory: 50Mi
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: metrics-server-config-volume
        - command:
          - bash
          - -c
          - |
            old_sum=$(md5sum /etc/config/NannyConfiguration)
            while true; do
              sleep 60
              new_sum=$(md5sum /etc/config/NannyConfiguration)
              if [[ "$new_sum" != "$old_sum" ]]; then
                kill $(grep -l ^/pod_nanny /proc/*/cmdline | awk -F/ '{print $3}')
                exit
              fi
            done
          image: de.icr.io/armada-master/ubi-dns-tools:v1.0.2
          imagePullPolicy: IfNotPresent
          name: config-watcher
          resources:
            limits:
              cpu: 50m
              memory: 100Mi
            requests:
              cpu: 5m
              memory: 5Mi
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: metrics-server-config-volume
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        shareProcessNamespace: true
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: metrics-server-config
          name: metrics-server-config-volume
        - name: metrics-server-certs
          secret:
            defaultMode: 420
            secretName: metrics-server-certs
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-15T09:22:45Z"
    generation: 3
    labels:
      cert-checksum: a500499f6893d6fdb488b3664775ddcc09a4d728
      k8s-app: metrics-server
      pod-template-hash: 5f68c55f4f
      version: v0.6.0
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:cert-checksum: {}
            f:k8s-app: {}
            f:pod-template-hash: {}
            f:version: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"257b7f82-3c2a-42fa-88f2-f326a2bf3234"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:cert-checksum: {}
                f:k8s-app: {}
                f:pod-template-hash: {}
                f:version: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"config-watcher"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"metrics-server"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":4443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/metrics-server-certs"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"metrics-server-nanny"}:
                  .: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"MY_POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"MY_POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:shareProcessNamespace: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"metrics-server-certs"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"metrics-server-config-volume"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"tmp-dir"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-15T09:27:23Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-15T09:27:23Z"
    name: metrics-server-5f68c55f4f
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server
      uid: 257b7f82-3c2a-42fa-88f2-f326a2bf3234
    resourceVersion: "1650"
    uid: 287aed63-b5fe-4528-9ec8-38930baf319f
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 5f68c55f4f
    template:
      metadata:
        creationTimestamp: null
        labels:
          cert-checksum: a500499f6893d6fdb488b3664775ddcc09a4d728
          k8s-app: metrics-server
          pod-template-hash: 5f68c55f4f
          version: v0.6.0
        name: metrics-server
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: topology.kubernetes.io/zone
              weight: 100
        containers:
        - command:
          - /metrics-server
          - --metric-resolution=45s
          - --secure-port=4443
          - --tls-cert-file=/etc/metrics-server-certs/tls.crt
          - --tls-private-key-file=/etc/metrics-server-certs/tls.key
          image: de.icr.io/armada-master/metrics-server:v0.6.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            initialDelaySeconds: 60
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 15
          name: metrics-server
          ports:
          - containerPort: 4443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 15
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/metrics-server-certs
            name: metrics-server-certs
          - mountPath: /tmp
            name: tmp-dir
        - command:
          - /pod_nanny
          - --config-dir=/etc/config
          - --cpu=100m
          - --extra-cpu=1m
          - --memory=40Mi
          - --extra-memory=6Mi
          - --threshold=5
          - --deployment=metrics-server
          - --container=metrics-server
          - --poll-period=30000
          - --estimator=exponential
          - --use-metrics=true
          env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: de.icr.io/armada-master/addon-resizer:1.8.15
          imagePullPolicy: IfNotPresent
          name: metrics-server-nanny
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 5m
              memory: 50Mi
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: metrics-server-config-volume
        - command:
          - bash
          - -c
          - |
            old_sum=$(md5sum /etc/config/NannyConfiguration)
            while true; do
              sleep 60
              new_sum=$(md5sum /etc/config/NannyConfiguration)
              if [[ "$new_sum" != "$old_sum" ]]; then
                kill $(grep -l ^/pod_nanny /proc/*/cmdline | awk -F/ '{print $3}')
                exit
              fi
            done
          image: de.icr.io/armada-master/ubi-dns-tools:v1.0.2
          imagePullPolicy: IfNotPresent
          name: config-watcher
          resources:
            limits:
              cpu: 50m
              memory: 100Mi
            requests:
              cpu: 5m
              memory: 5Mi
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: metrics-server-config-volume
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        shareProcessNamespace: true
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: metrics-server-config
          name: metrics-server-config-volume
        - name: metrics-server-certs
          secret:
            defaultMode: 420
            secretName: metrics-server-certs
        - emptyDir: {}
          name: tmp-dir
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
      razee.io/build-url: https://travis.ibm.com/alchemy-containers/armada-ingress-microservice/builds/86588613
      razee.io/source-url: https://github.ibm.com/alchemy-containers/armada-ingress-microservice/commit/63c8acfe7100e32794d404a928e175e39c17e440
    creationTimestamp: "2023-03-15T09:42:12Z"
    generation: 3
    labels:
      alb-image-type: community
      app: public-crcg8om62f01beu8rudp30-alb1
      appVersion: 1.6.4_3864_iks
      pod-template-hash: 565976c744
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:razee.io/build-url: {}
            f:razee.io/source-url: {}
          f:labels:
            .: {}
            f:alb-image-type: {}
            f:app: {}
            f:appVersion: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"16855e78-7cf3-45e3-a969-b3da8f79e042"}: {}
        f:spec:
          f:minReadySeconds: {}
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:prometheus.io/path: {}
                f:prometheus.io/port: {}
                f:prometheus.io/scrape: {}
                f:razee.io/build-url: {}
                f:razee.io/source-url: {}
              f:labels:
                .: {}
                f:alb-image-type: {}
                f:app: {}
                f:appVersion: {}
                f:pod-template-hash: {}
            f:spec:
              f:affinity:
                .: {}
                f:nodeAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"nginx-ingress"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"ALB_ID"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ALB_ID_LB"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ARMADA_CLUSTER_ID"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"INGRESS_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"SECURED_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":80,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                    k:{"containerPort":443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:initContainers:
                .: {}
                k:{"name":"sysctl"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-20T14:47:23Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-20T14:47:23Z"
    name: public-crcg8om62f01beu8rudp30-alb1-565976c744
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: public-crcg8om62f01beu8rudp30-alb1
      uid: 16855e78-7cf3-45e3-a969-b3da8f79e042
    resourceVersion: "462250"
    uid: a8052260-b489-4b90-9997-2d7f60f8e488
  spec:
    minReadySeconds: 60
    replicas: 0
    selector:
      matchLabels:
        app: public-crcg8om62f01beu8rudp30-alb1
        pod-template-hash: 565976c744
    template:
      metadata:
        annotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "10254"
          prometheus.io/scrape: "true"
          razee.io/build-url: https://travis.ibm.com/alchemy-containers/armada-ingress-microservice/builds/86588613
          razee.io/source-url: https://github.ibm.com/alchemy-containers/armada-ingress-microservice/commit/63c8acfe7100e32794d404a928e175e39c17e440
        creationTimestamp: null
        labels:
          alb-image-type: community
          app: public-crcg8om62f01beu8rudp30-alb1
          appVersion: 1.6.4_3864_iks
          pod-template-hash: 565976c744
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: dedicated
                  operator: NotIn
                  values:
                  - internal
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - public-crcg8om62f01beu8rudp30-alb1
                - key: appVersion
                  operator: In
                  values:
                  - 1.6.4_3864_iks
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - /nginx-ingress-controller
          - --configmap=kube-system/ibm-k8s-controller-config
          - --annotations-prefix=nginx.ingress.kubernetes.io
          - --default-ssl-certificate=default/mycluster-fra02-b3-521938-df8e297a5c60fae963c289eec4135c3b-0000
          - --ingress-class=public-iks-k8s-nginx
          - --ingress-class-by-name
          - --controller-class=cloud.ibm.com/public-iks-k8s-nginx
          - --election-id=ingress-controller-leader-public-iks-k8s-nginx
          - --http-port=80
          - --https-port=443
          - --healthz-port=10254
          - --default-backend-service=kube-system/ibm-k8s-controller-default-backend
          - --publish-service=kube-system/public-crcg8om62f01beu8rudp30-alb1
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: ARMADA_CLUSTER_ID
            value: cg8om62f01beu8rudp30
          - name: ALB_ID
            value: public-crcg8om62f01beu8rudp30-alb1
          - name: ALB_ID_LB
            value: public-crcg8om62f01beu8rudp30-alb1
          - name: SECURED_NAMESPACE
            value: ibm-cert-store
          - name: INGRESS_IMAGE
            value: de.icr.io/armada-master/ingress-community:1.6.4_3864_iks
          image: de.icr.io/armada-master/ingress-community:1.6.4_3864_iks
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: nginx-ingress
          ports:
          - containerPort: 80
            protocol: TCP
          - containerPort: 443
            protocol: TCP
          resources:
            requests:
              cpu: 20m
              memory: 115Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - sh
          - -c
          - sysctl -e -w net.core.rmem_max=16777216; sysctl -e -w net.core.wmem_max=16777216;
            sysctl -e -w net.core.rmem_default=12582912; sysctl -e -w net.core.wmem_default=12582912;
            sysctl -e -w net.core.optmem_max=25165824; sysctl -e -w net.core.netdev_max_backlog=262144;
            sysctl -e -w net.core.somaxconn=32768; sysctl -e -w net.core.rps_sock_flow_entries=32768;
            sysctl -e -w net.ipv4.ip_local_port_range="1025 65535"; sysctl -e -w net.ipv4.ip_local_reserved_ports="2040-2041,4194,4500,5473,8080,9085-9110,9253,9353,10000-10300,11000-11200,12000-12100,30000-32767";
            sysctl -e -w net.ipv4.tcp_rmem="8192 262144 16777216"; sysctl -e -w net.ipv4.tcp_wmem="8192
            262144 16777216"; sysctl -e -w net.ipv4.udp_rmem_min=16384; sysctl -e
            -w net.ipv4.udp_wmem_min=16384; sysctl -e -w net.ipv4.ip_no_pmtu_disc=0;
            sysctl -e -w net.ipv4.route.flush=1; sysctl -e -w net.ipv4.tcp_dsack=1;
            sysctl -e -w net.ipv4.tcp_sack=1; sysctl -e -w net.ipv4.tcp_fack=1; sysctl
            -e -w net.ipv4.tcp_max_tw_buckets=1440000; sysctl -e -w net.ipv4.tcp_tw_recycle=0;
            sysctl -e -w net.ipv4.tcp_tw_reuse=1; sysctl -e -w net.ipv4.tcp_frto=0;
            sysctl -e -w net.ipv4.tcp_syncookies=1; sysctl -e -w net.ipv4.tcp_max_syn_backlog=32768;
            sysctl -e -w net.ipv4.tcp_synack_retries=2; sysctl -e -w net.ipv4.tcp_syn_retries=3;
            sysctl -e -w net.ipv4.tcp_fin_timeout=5; sysctl -e -w net.ipv4.tcp_retries2=5;
            sysctl -e -w net.ipv4.tcp_no_metrics_save=1; sysctl -e -w net.ipv4.tcp_moderate_rcvbuf=1;
            sysctl -e -w net.ipv4.tcp_timestamps=1; sysctl -e -w net.ipv4.tcp_keepalive_time=40;
            sysctl -e -w net.ipv4.tcp_keepalive_intvl=15; sysctl -e -w net.ipv4.tcp_keepalive_probes=6;
            sysctl -e -w net.ipv4.tcp_slow_start_after_idle=0; sysctl -e -w net.ipv4.tcp_window_scaling=1;
            sysctl -e -w net.ipv4.tcp_low_latency=1; sysctl -e -w net.ipv4.tcp_max_orphans=262144;
            sysctl -e -w net.nf_conntrack_max=9145728; sysctl -e -w net.netfilter.nf_conntrack_max=9145728;
            sysctl -e -w net.netfilter.nf_conntrack_tcp_timeout_time_wait=10; sysctl
            -e -w net.netfilter.nf_conntrack_tcp_timeout_fin_wait=10; sysctl -e -w
            net.netfilter.nf_conntrack_tcp_timeout_close_wait=30; sysctl -e -w net.netfilter.nf_conntrack_tcp_loose=1;
            sysctl -e -w net.ipv4.tcp_rfc1337=1; exit 0
          image: de.icr.io/armada-master/ingress-alpine:3.16_14810
          imagePullPolicy: Always
          name: sysctl
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        nodeSelector:
          publicVLAN: "3319718"
        priorityClassName: ibm-app-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ibm-k8s-ingress
        serviceAccountName: ibm-k8s-ingress
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "2"
      razee.io/build-url: https://travis.ibm.com/alchemy-containers/armada-ingress-microservice/builds/86872763
      razee.io/source-url: https://github.ibm.com/alchemy-containers/armada-ingress-microservice/commit/a1143164ae810d143cc8022b96162038b18a459c
    creationTimestamp: "2023-03-20T14:46:13Z"
    generation: 4
    labels:
      alb-image-type: community
      app: public-crcg8om62f01beu8rudp30-alb1
      appVersion: 1.6.4_3885_iks
      pod-template-hash: 7cb9c87b8d
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:razee.io/build-url: {}
            f:razee.io/source-url: {}
          f:labels:
            .: {}
            f:alb-image-type: {}
            f:app: {}
            f:appVersion: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"16855e78-7cf3-45e3-a969-b3da8f79e042"}: {}
        f:spec:
          f:minReadySeconds: {}
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:prometheus.io/path: {}
                f:prometheus.io/port: {}
                f:prometheus.io/scrape: {}
                f:razee.io/build-url: {}
                f:razee.io/source-url: {}
              f:labels:
                .: {}
                f:alb-image-type: {}
                f:app: {}
                f:appVersion: {}
                f:pod-template-hash: {}
            f:spec:
              f:affinity:
                .: {}
                f:nodeAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"nginx-ingress"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"ALB_ID"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ALB_ID_LB"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ARMADA_CLUSTER_ID"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"INGRESS_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"SECURED_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":80,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                    k:{"containerPort":443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:initContainers:
                .: {}
                k:{"name":"sysctl"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-24T15:12:11Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-24T15:12:11Z"
    name: public-crcg8om62f01beu8rudp30-alb1-7cb9c87b8d
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: public-crcg8om62f01beu8rudp30-alb1
      uid: 16855e78-7cf3-45e3-a969-b3da8f79e042
    resourceVersion: "1085101"
    uid: 00a65934-e067-4429-a70c-d506a5ad6123
  spec:
    minReadySeconds: 60
    replicas: 0
    selector:
      matchLabels:
        app: public-crcg8om62f01beu8rudp30-alb1
        pod-template-hash: 7cb9c87b8d
    template:
      metadata:
        annotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "10254"
          prometheus.io/scrape: "true"
          razee.io/build-url: https://travis.ibm.com/alchemy-containers/armada-ingress-microservice/builds/86872763
          razee.io/source-url: https://github.ibm.com/alchemy-containers/armada-ingress-microservice/commit/a1143164ae810d143cc8022b96162038b18a459c
        creationTimestamp: null
        labels:
          alb-image-type: community
          app: public-crcg8om62f01beu8rudp30-alb1
          appVersion: 1.6.4_3885_iks
          pod-template-hash: 7cb9c87b8d
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: dedicated
                  operator: NotIn
                  values:
                  - internal
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - public-crcg8om62f01beu8rudp30-alb1
                - key: appVersion
                  operator: In
                  values:
                  - 1.6.4_3885_iks
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - /nginx-ingress-controller
          - --configmap=kube-system/ibm-k8s-controller-config
          - --annotations-prefix=nginx.ingress.kubernetes.io
          - --default-ssl-certificate=default/mycluster-fra02-b3-521938-df8e297a5c60fae963c289eec4135c3b-0000
          - --ingress-class=public-iks-k8s-nginx
          - --ingress-class-by-name
          - --controller-class=cloud.ibm.com/public-iks-k8s-nginx
          - --election-id=ingress-controller-leader-public-iks-k8s-nginx
          - --http-port=80
          - --https-port=443
          - --healthz-port=10254
          - --default-backend-service=kube-system/ibm-k8s-controller-default-backend
          - --publish-service=kube-system/public-crcg8om62f01beu8rudp30-alb1
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: ARMADA_CLUSTER_ID
            value: cg8om62f01beu8rudp30
          - name: ALB_ID
            value: public-crcg8om62f01beu8rudp30-alb1
          - name: ALB_ID_LB
            value: public-crcg8om62f01beu8rudp30-alb1
          - name: SECURED_NAMESPACE
            value: ibm-cert-store
          - name: INGRESS_IMAGE
            value: de.icr.io/armada-master/ingress-community:1.6.4_3885_iks
          image: de.icr.io/armada-master/ingress-community:1.6.4_3885_iks
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: nginx-ingress
          ports:
          - containerPort: 80
            protocol: TCP
          - containerPort: 443
            protocol: TCP
          resources:
            requests:
              cpu: 20m
              memory: 115Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - sh
          - -c
          - sysctl -e -w net.core.rmem_max=16777216; sysctl -e -w net.core.wmem_max=16777216;
            sysctl -e -w net.core.rmem_default=12582912; sysctl -e -w net.core.wmem_default=12582912;
            sysctl -e -w net.core.optmem_max=25165824; sysctl -e -w net.core.netdev_max_backlog=262144;
            sysctl -e -w net.core.somaxconn=32768; sysctl -e -w net.core.rps_sock_flow_entries=32768;
            sysctl -e -w net.ipv4.ip_local_port_range="1025 65535"; sysctl -e -w net.ipv4.ip_local_reserved_ports="2040-2041,4194,4500,5473,8080,9085-9110,9253,9353,10000-10300,11000-11200,12000-12100,30000-32767";
            sysctl -e -w net.ipv4.tcp_rmem="8192 262144 16777216"; sysctl -e -w net.ipv4.tcp_wmem="8192
            262144 16777216"; sysctl -e -w net.ipv4.udp_rmem_min=16384; sysctl -e
            -w net.ipv4.udp_wmem_min=16384; sysctl -e -w net.ipv4.ip_no_pmtu_disc=0;
            sysctl -e -w net.ipv4.route.flush=1; sysctl -e -w net.ipv4.tcp_dsack=1;
            sysctl -e -w net.ipv4.tcp_sack=1; sysctl -e -w net.ipv4.tcp_fack=1; sysctl
            -e -w net.ipv4.tcp_max_tw_buckets=1440000; sysctl -e -w net.ipv4.tcp_tw_recycle=0;
            sysctl -e -w net.ipv4.tcp_tw_reuse=1; sysctl -e -w net.ipv4.tcp_frto=0;
            sysctl -e -w net.ipv4.tcp_syncookies=1; sysctl -e -w net.ipv4.tcp_max_syn_backlog=32768;
            sysctl -e -w net.ipv4.tcp_synack_retries=2; sysctl -e -w net.ipv4.tcp_syn_retries=3;
            sysctl -e -w net.ipv4.tcp_fin_timeout=5; sysctl -e -w net.ipv4.tcp_retries2=5;
            sysctl -e -w net.ipv4.tcp_no_metrics_save=1; sysctl -e -w net.ipv4.tcp_moderate_rcvbuf=1;
            sysctl -e -w net.ipv4.tcp_timestamps=1; sysctl -e -w net.ipv4.tcp_keepalive_time=40;
            sysctl -e -w net.ipv4.tcp_keepalive_intvl=15; sysctl -e -w net.ipv4.tcp_keepalive_probes=6;
            sysctl -e -w net.ipv4.tcp_slow_start_after_idle=0; sysctl -e -w net.ipv4.tcp_window_scaling=1;
            sysctl -e -w net.ipv4.tcp_low_latency=1; sysctl -e -w net.ipv4.tcp_max_orphans=262144;
            sysctl -e -w net.nf_conntrack_max=9145728; sysctl -e -w net.netfilter.nf_conntrack_max=9145728;
            sysctl -e -w net.netfilter.nf_conntrack_tcp_timeout_time_wait=10; sysctl
            -e -w net.netfilter.nf_conntrack_tcp_timeout_fin_wait=10; sysctl -e -w
            net.netfilter.nf_conntrack_tcp_timeout_close_wait=30; sysctl -e -w net.netfilter.nf_conntrack_tcp_loose=1;
            sysctl -e -w net.ipv4.tcp_rfc1337=1; exit 0
          image: de.icr.io/armada-master/ingress-alpine:3.16_14810
          imagePullPolicy: Always
          name: sysctl
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        nodeSelector:
          publicVLAN: "3319718"
        priorityClassName: ibm-app-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ibm-k8s-ingress
        serviceAccountName: ibm-k8s-ingress
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "3"
      razee.io/build-url: https://travis.ibm.com/alchemy-containers/armada-ingress-microservice/builds/87269293
      razee.io/source-url: https://github.ibm.com/alchemy-containers/armada-ingress-microservice/commit/6c850dc1996a468700d2bf02ec4a933a52d54130
    creationTimestamp: "2023-03-24T15:11:01Z"
    generation: 2
    labels:
      alb-image-type: community
      app: public-crcg8om62f01beu8rudp30-alb1
      appVersion: 1.6.4_3898_iks
      pod-template-hash: 845d96d8b8
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:razee.io/build-url: {}
            f:razee.io/source-url: {}
          f:labels:
            .: {}
            f:alb-image-type: {}
            f:app: {}
            f:appVersion: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"16855e78-7cf3-45e3-a969-b3da8f79e042"}: {}
        f:spec:
          f:minReadySeconds: {}
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:prometheus.io/path: {}
                f:prometheus.io/port: {}
                f:prometheus.io/scrape: {}
                f:razee.io/build-url: {}
                f:razee.io/source-url: {}
              f:labels:
                .: {}
                f:alb-image-type: {}
                f:app: {}
                f:appVersion: {}
                f:pod-template-hash: {}
            f:spec:
              f:affinity:
                .: {}
                f:nodeAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"nginx-ingress"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"ALB_ID"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ALB_ID_LB"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ARMADA_CLUSTER_ID"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"INGRESS_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"SECURED_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":80,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                    k:{"containerPort":443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:initContainers:
                .: {}
                k:{"name":"sysctl"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-24T15:11:01Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-24T15:12:11Z"
    name: public-crcg8om62f01beu8rudp30-alb1-845d96d8b8
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: public-crcg8om62f01beu8rudp30-alb1
      uid: 16855e78-7cf3-45e3-a969-b3da8f79e042
    resourceVersion: "1085086"
    uid: 90c09d83-26b4-41dc-81e7-50d53bed42ed
  spec:
    minReadySeconds: 60
    replicas: 2
    selector:
      matchLabels:
        app: public-crcg8om62f01beu8rudp30-alb1
        pod-template-hash: 845d96d8b8
    template:
      metadata:
        annotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "10254"
          prometheus.io/scrape: "true"
          razee.io/build-url: https://travis.ibm.com/alchemy-containers/armada-ingress-microservice/builds/87269293
          razee.io/source-url: https://github.ibm.com/alchemy-containers/armada-ingress-microservice/commit/6c850dc1996a468700d2bf02ec4a933a52d54130
        creationTimestamp: null
        labels:
          alb-image-type: community
          app: public-crcg8om62f01beu8rudp30-alb1
          appVersion: 1.6.4_3898_iks
          pod-template-hash: 845d96d8b8
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: dedicated
                  operator: NotIn
                  values:
                  - internal
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - public-crcg8om62f01beu8rudp30-alb1
                - key: appVersion
                  operator: In
                  values:
                  - 1.6.4_3898_iks
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - /nginx-ingress-controller
          - --configmap=kube-system/ibm-k8s-controller-config
          - --annotations-prefix=nginx.ingress.kubernetes.io
          - --default-ssl-certificate=default/mycluster-fra02-b3-521938-df8e297a5c60fae963c289eec4135c3b-0000
          - --ingress-class=public-iks-k8s-nginx
          - --ingress-class-by-name
          - --controller-class=cloud.ibm.com/public-iks-k8s-nginx
          - --election-id=ingress-controller-leader-public-iks-k8s-nginx
          - --http-port=80
          - --https-port=443
          - --healthz-port=10254
          - --default-backend-service=kube-system/ibm-k8s-controller-default-backend
          - --publish-service=kube-system/public-crcg8om62f01beu8rudp30-alb1
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: ARMADA_CLUSTER_ID
            value: cg8om62f01beu8rudp30
          - name: ALB_ID
            value: public-crcg8om62f01beu8rudp30-alb1
          - name: ALB_ID_LB
            value: public-crcg8om62f01beu8rudp30-alb1
          - name: SECURED_NAMESPACE
            value: ibm-cert-store
          - name: INGRESS_IMAGE
            value: de.icr.io/armada-master/ingress-community:1.6.4_3898_iks
          image: de.icr.io/armada-master/ingress-community:1.6.4_3898_iks
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: nginx-ingress
          ports:
          - containerPort: 80
            protocol: TCP
          - containerPort: 443
            protocol: TCP
          resources:
            requests:
              cpu: 20m
              memory: 115Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - sh
          - -c
          - sysctl -e -w net.core.rmem_max=16777216; sysctl -e -w net.core.wmem_max=16777216;
            sysctl -e -w net.core.rmem_default=12582912; sysctl -e -w net.core.wmem_default=12582912;
            sysctl -e -w net.core.optmem_max=25165824; sysctl -e -w net.core.netdev_max_backlog=262144;
            sysctl -e -w net.core.somaxconn=32768; sysctl -e -w net.core.rps_sock_flow_entries=32768;
            sysctl -e -w net.ipv4.ip_local_port_range="1025 65535"; sysctl -e -w net.ipv4.ip_local_reserved_ports="2040-2041,4194,4500,5473,8080,9085-9110,9253,9353,10000-10300,11000-11200,12000-12100,30000-32767";
            sysctl -e -w net.ipv4.tcp_rmem="8192 262144 16777216"; sysctl -e -w net.ipv4.tcp_wmem="8192
            262144 16777216"; sysctl -e -w net.ipv4.udp_rmem_min=16384; sysctl -e
            -w net.ipv4.udp_wmem_min=16384; sysctl -e -w net.ipv4.ip_no_pmtu_disc=0;
            sysctl -e -w net.ipv4.route.flush=1; sysctl -e -w net.ipv4.tcp_dsack=1;
            sysctl -e -w net.ipv4.tcp_sack=1; sysctl -e -w net.ipv4.tcp_fack=1; sysctl
            -e -w net.ipv4.tcp_max_tw_buckets=1440000; sysctl -e -w net.ipv4.tcp_tw_recycle=0;
            sysctl -e -w net.ipv4.tcp_tw_reuse=1; sysctl -e -w net.ipv4.tcp_frto=0;
            sysctl -e -w net.ipv4.tcp_syncookies=1; sysctl -e -w net.ipv4.tcp_max_syn_backlog=32768;
            sysctl -e -w net.ipv4.tcp_synack_retries=2; sysctl -e -w net.ipv4.tcp_syn_retries=3;
            sysctl -e -w net.ipv4.tcp_fin_timeout=5; sysctl -e -w net.ipv4.tcp_retries2=5;
            sysctl -e -w net.ipv4.tcp_no_metrics_save=1; sysctl -e -w net.ipv4.tcp_moderate_rcvbuf=1;
            sysctl -e -w net.ipv4.tcp_timestamps=1; sysctl -e -w net.ipv4.tcp_keepalive_time=40;
            sysctl -e -w net.ipv4.tcp_keepalive_intvl=15; sysctl -e -w net.ipv4.tcp_keepalive_probes=6;
            sysctl -e -w net.ipv4.tcp_slow_start_after_idle=0; sysctl -e -w net.ipv4.tcp_window_scaling=1;
            sysctl -e -w net.ipv4.tcp_low_latency=1; sysctl -e -w net.ipv4.tcp_max_orphans=262144;
            sysctl -e -w net.nf_conntrack_max=9145728; sysctl -e -w net.netfilter.nf_conntrack_max=9145728;
            sysctl -e -w net.netfilter.nf_conntrack_tcp_timeout_time_wait=10; sysctl
            -e -w net.netfilter.nf_conntrack_tcp_timeout_fin_wait=10; sysctl -e -w
            net.netfilter.nf_conntrack_tcp_timeout_close_wait=30; sysctl -e -w net.netfilter.nf_conntrack_tcp_loose=1;
            sysctl -e -w net.ipv4.tcp_rfc1337=1; exit 0
          image: de.icr.io/armada-master/ingress-alpine:3.16_14810
          imagePullPolicy: Always
          name: sysctl
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        nodeSelector:
          publicVLAN: "3319718"
        priorityClassName: ibm-app-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ibm-k8s-ingress
        serviceAccountName: ibm-k8s-ingress
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      armada-service: cruiser-kube-addons
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
      version: 1.25.6_1534
    creationTimestamp: "2023-03-15T09:20:21Z"
    generation: 1
    labels:
      app: snapshot-controller
      pod-template-hash: 75975d56b6
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:armada-service: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:version: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"08fa8f43-123f-4b36-bc36-095baae4ce49"}: {}
        f:spec:
          f:minReadySeconds: {}
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"snapshot-controller"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:privileged: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-15T09:22:57Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-26T18:22:08Z"
    name: snapshot-controller-75975d56b6
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: snapshot-controller
      uid: 08fa8f43-123f-4b36-bc36-095baae4ce49
    resourceVersion: "1449600"
    uid: de448a2f-c2f4-4a28-ba0d-371628dd2af6
  spec:
    minReadySeconds: 30
    replicas: 3
    selector:
      matchLabels:
        app: snapshot-controller
        pod-template-hash: 75975d56b6
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: snapshot-controller
          pod-template-hash: 75975d56b6
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - snapshot-controller
                topologyKey: topology.kubernetes.io/zone
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - snapshot-controller
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - --v=3
          - --leader-election=true
          - --http-endpoint=:9878
          - --leader-election-lease-duration=137s
          - --leader-election-renew-deadline=107s
          - --leader-election-retry-period=26s
          image: de.icr.io/armada-master/snapshot-controller:v6.0.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz/leader-election
              port: 9878
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          name: snapshot-controller
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            runAsNonRoot: true
            runAsUser: 2121
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: snapshot-controller
        serviceAccountName: snapshot-controller
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 3
    fullyLabeledReplicas: 3
    observedGeneration: 1
    readyReplicas: 3
    replicas: 3
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-20T09:46:37Z"
    generation: 5
    labels:
      app: chaos-exporter
      pod-template-hash: 6c9b5988c4
      release: prometheus-stack
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
            f:release: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"48e97e94-3ff4-4f7c-9820-62f3c452960a"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
                f:release: {}
            f:spec:
              f:containers:
                k:{"name":"chaos-exporter"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"TSDB_SCRAPE_INTERVAL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:49Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:54Z"
    name: chaos-exporter-6c9b5988c4
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: chaos-exporter
      uid: 48e97e94-3ff4-4f7c-9820-62f3c452960a
    resourceVersion: "863024"
    uid: 7f1b8e92-2d8a-465c-8b96-a28912c7b173
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: chaos-exporter
        pod-template-hash: 6c9b5988c4
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: chaos-exporter
          pod-template-hash: 6c9b5988c4
          release: prometheus-stack
      spec:
        containers:
        - env:
          - name: TSDB_SCRAPE_INTERVAL
            value: "10"
          image: litmuschaos/chaos-exporter:2.14.0
          imagePullPolicy: Always
          name: chaos-exporter
          ports:
          - containerPort: 8080
            name: tcp
            protocol: TCP
          resources:
            limits:
              cpu: 225m
              ephemeral-storage: 1Gi
              memory: 500Mi
            requests:
              cpu: 125m
              ephemeral-storage: 500Mi
              memory: 300Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: litmus-cluster-scope
        serviceAccountName: litmus-cluster-scope
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: chaos
      meta.helm.sh/release-namespace: litmus
    creationTimestamp: "2023-03-19T14:17:35Z"
    generation: 5
    labels:
      app.kubernetes.io/component: litmus-auth-server
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: litmus
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: 2.15.10
      helm.sh/chart: litmus-2.15.10
      litmuschaos.io/version: 2.14.0
      pod-template-hash: b8dcdf66b
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:litmuschaos.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d58ac3a9-feb6-4ace-a8b0-40a6af98ee36"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:helm.sh/chart: {}
                f:litmuschaos.io/version: {}
                f:pod-template-hash: {}
            f:spec:
              f:automountServiceAccountToken: {}
              f:containers:
                k:{"name":"auth-server"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"DB_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"DB_USER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_GQL_GRPC_ENDPOINT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_GQL_GRPC_PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":3000,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":3030,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:initContainers:
                .: {}
                k:{"name":"wait-for-mongodb"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:49Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:17:26Z"
    name: chaos-litmus-auth-server-b8dcdf66b
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: chaos-litmus-auth-server
      uid: d58ac3a9-feb6-4ace-a8b0-40a6af98ee36
    resourceVersion: "863126"
    uid: dd754b6f-d49e-46e8-9026-2882d2c135b8
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: litmus-auth-server
        pod-template-hash: b8dcdf66b
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: litmus-auth-server
          app.kubernetes.io/instance: chaos
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: litmus
          app.kubernetes.io/part-of: litmus
          app.kubernetes.io/version: 2.15.10
          helm.sh/chart: litmus-2.15.10
          litmuschaos.io/version: 2.14.0
          pod-template-hash: b8dcdf66b
      spec:
        automountServiceAccountToken: false
        containers:
        - env:
          - name: DB_PASSWORD
            value: superhardpassword
          - name: DB_USER
            value: root
          - name: LITMUS_GQL_GRPC_ENDPOINT
            value: chaos-litmus-server-service
          - name: LITMUS_GQL_GRPC_PORT
            value: :8000
          envFrom:
          - secretRef:
              name: chaos-litmus-admin-secret
          - configMapRef:
              name: chaos-litmus-admin-config
          image: litmuschaos/litmusportal-auth-server:2.14.0
          imagePullPolicy: Always
          name: auth-server
          ports:
          - containerPort: 3030
            name: auth-server
            protocol: TCP
          - containerPort: 3000
            name: auth-rpc-server
            protocol: TCP
          resources:
            limits:
              cpu: 550m
              ephemeral-storage: 1Gi
              memory: 712Mi
            requests:
              cpu: 225m
              ephemeral-storage: 500Mi
              memory: 250Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - while [[ $(curl -sw '%{http_code}' http://chaos-mongodb:27017 -o /dev/null)
            -ne 200 ]]; do sleep 5; echo 'Waiting for the MongoDB to be ready...';
            done; echo 'Connection with MongoDB established'
          command:
          - /bin/sh
          - -c
          image: litmuschaos/curl:2.14.0
          imagePullPolicy: Always
          name: wait-for-mongodb
          resources:
            limits:
              cpu: 250m
              ephemeral-storage: 1Gi
              memory: 512Mi
            requests:
              cpu: 25m
              ephemeral-storage: 500Mi
              memory: 150Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: litmus-server-account
        serviceAccountName: litmus-server-account
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: chaos
      meta.helm.sh/release-namespace: litmus
    creationTimestamp: "2023-03-19T14:17:35Z"
    generation: 5
    labels:
      app.kubernetes.io/component: litmus-frontend
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: litmus
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: 2.15.10
      helm.sh/chart: litmus-2.15.10
      litmuschaos.io/version: 2.14.0
      pod-template-hash: 6ffc95c884
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:litmuschaos.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8afe133f-a565-423d-8b39-87e0f01f7bf9"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:helm.sh/chart: {}
                f:litmuschaos.io/version: {}
                f:pod-template-hash: {}
            f:spec:
              f:automountServiceAccountToken: {}
              f:containers:
                k:{"name":"litmusportal-frontend"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/nginx/conf.d/default.conf"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:subPath: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"nginx-config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:49Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:17:00Z"
    name: chaos-litmus-frontend-6ffc95c884
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: chaos-litmus-frontend
      uid: 8afe133f-a565-423d-8b39-87e0f01f7bf9
    resourceVersion: "863052"
    uid: 00282446-8ea6-4fcb-9b58-082f00087a97
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: litmus-frontend
        pod-template-hash: 6ffc95c884
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: litmus-frontend
          app.kubernetes.io/instance: chaos
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: litmus
          app.kubernetes.io/part-of: litmus
          app.kubernetes.io/version: 2.15.10
          helm.sh/chart: litmus-2.15.10
          litmuschaos.io/version: 2.14.0
          pod-template-hash: 6ffc95c884
      spec:
        automountServiceAccountToken: false
        containers:
        - image: litmuschaos/litmusportal-frontend:2.14.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: litmusportal-frontend
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 550m
              ephemeral-storage: 1Gi
              memory: 512Mi
            requests:
              cpu: 125m
              ephemeral-storage: 500Mi
              memory: 150Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/nginx/conf.d/default.conf
            name: nginx-config
            subPath: default.conf
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: chaos-litmus-frontend-nginx-configuration
          name: nginx-config
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: chaos
      meta.helm.sh/release-namespace: litmus
    creationTimestamp: "2023-03-19T14:17:35Z"
    generation: 5
    labels:
      app.kubernetes.io/component: litmus-server
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: litmus
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: 2.15.10
      helm.sh/chart: litmus-2.15.10
      litmuschaos.io/version: 2.14.0
      pod-template-hash: 585786dd9c
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:litmuschaos.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ce145649-c0f8-47eb-af46-efc3e38ec4a0"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:helm.sh/chart: {}
                f:litmuschaos.io/version: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"graphql-server"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"AGENT_DEPLOYMENTS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ARGO_WORKFLOW_CONTROLLER_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ARGO_WORKFLOW_EXECUTOR_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOS_CENTER_SCOPE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOS_CENTER_UI_ENDPOINT"}:
                      .: {}
                      f:name: {}
                    k:{"name":"CONTAINER_RUNTIME_EXECUTOR"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"DB_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"DB_USER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"EVENT_TRACKER_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"HUB_BRANCH_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"INGRESS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"INGRESS_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_AUTH_GRPC_ENDPOINT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_AUTH_GRPC_PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_CHAOS_EXPORTER_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_CHAOS_OPERATOR_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_CHAOS_RUNNER_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LITMUS_PORTAL_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"NODE_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"REMOTE_HUB_MAX_SIZE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SELF_AGENT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SELF_AGENT_NODE_SELECTOR"}:
                      .: {}
                      f:name: {}
                    k:{"name":"SELF_AGENT_TOLERATIONS"}:
                      .: {}
                      f:name: {}
                    k:{"name":"SERVER_SERVICE_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SUBSCRIBER_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TLS_CERT_64"}:
                      .: {}
                      f:name: {}
                    k:{"name":"TLS_SECRET_NAME"}:
                      .: {}
                      f:name: {}
                    k:{"name":"WORKFLOW_HELPER_IMAGE_VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8000,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/tmp/"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp/version"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:initContainers:
                .: {}
                k:{"name":"wait-for-mongodb"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"gitops-storage"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
                k:{"name":"hub-storage"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:49Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:17:40Z"
    name: chaos-litmus-server-585786dd9c
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: chaos-litmus-server
      uid: ce145649-c0f8-47eb-af46-efc3e38ec4a0
    resourceVersion: "863171"
    uid: 7c03e29b-696c-4603-820b-2256304b1baa
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: litmus-server
        pod-template-hash: 585786dd9c
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: litmus-server
          app.kubernetes.io/instance: chaos
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: litmus
          app.kubernetes.io/part-of: litmus
          app.kubernetes.io/version: 2.15.10
          helm.sh/chart: litmus-2.15.10
          litmuschaos.io/version: 2.14.0
          pod-template-hash: 585786dd9c
      spec:
        containers:
        - env:
          - name: DB_PASSWORD
            value: superhardpassword
          - name: DB_USER
            value: root
          - name: LITMUS_PORTAL_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CHAOS_CENTER_SCOPE
            value: cluster
          - name: SERVER_SERVICE_NAME
            value: chaos-litmus-server-service
          - name: INGRESS
            value: "false"
          - name: INGRESS_NAME
            value: litmus-ingress
          - name: LITMUS_AUTH_GRPC_ENDPOINT
            value: chaos-litmus-auth-server-service
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: ARGO_WORKFLOW_CONTROLLER_IMAGE
            value: litmuschaos/workflow-controller:v3.3.1
          - name: ARGO_WORKFLOW_EXECUTOR_IMAGE
            value: litmuschaos/argoexec:v3.3.1
          - name: EVENT_TRACKER_IMAGE
            value: litmuschaos/litmusportal-event-tracker:2.14.0
          - name: LITMUS_CHAOS_EXPORTER_IMAGE
            value: litmuschaos/chaos-exporter:2.14.0
          - name: LITMUS_CHAOS_OPERATOR_IMAGE
            value: litmuschaos/chaos-operator:2.14.0
          - name: LITMUS_CHAOS_RUNNER_IMAGE
            value: litmuschaos/chaos-runner:2.14.0
          - name: SUBSCRIBER_IMAGE
            value: litmuschaos/litmusportal-subscriber:2.14.0
          - name: AGENT_DEPLOYMENTS
            value: '["app=chaos-exporter", "name=chaos-operator", "app=event-tracker",
              "app=workflow-controller"]'
          - name: CHAOS_CENTER_UI_ENDPOINT
          - name: CONTAINER_RUNTIME_EXECUTOR
            value: k8sapi
          - name: HUB_BRANCH_NAME
            value: v2.14.x
          - name: LITMUS_AUTH_GRPC_PORT
            value: :3030
          - name: REMOTE_HUB_MAX_SIZE
            value: "5000000"
          - name: SELF_AGENT
            value: "true"
          - name: SELF_AGENT_NODE_SELECTOR
          - name: SELF_AGENT_TOLERATIONS
          - name: TLS_CERT_64
          - name: TLS_SECRET_NAME
          - name: WORKFLOW_HELPER_IMAGE_VERSION
            value: 2.14.0
          envFrom:
          - secretRef:
              name: chaos-litmus-admin-secret
          - configMapRef:
              name: chaos-litmus-admin-config
          image: litmuschaos/litmusportal-server:2.14.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: gql-server
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: graphql-server
          ports:
          - containerPort: 8080
            name: gql-server
            protocol: TCP
          - containerPort: 8000
            name: gql-rpc-server
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: gql-server
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 550m
              ephemeral-storage: 1Gi
              memory: 712Mi
            requests:
              cpu: 225m
              ephemeral-storage: 500Mi
              memory: 250Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/
            name: gitops-storage
          - mountPath: /tmp/version
            name: hub-storage
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - while [[ $(curl -sw '%{http_code}' http://chaos-mongodb:27017 -o /dev/null)
            -ne 200 ]]; do sleep 5; echo 'Waiting for the MongoDB to be ready...';
            done; echo 'Connection with MongoDB established'
          command:
          - /bin/sh
          - -c
          image: litmuschaos/curl:2.14.0
          imagePullPolicy: Always
          name: wait-for-mongodb
          resources:
            limits:
              cpu: 250m
              ephemeral-storage: 1Gi
              memory: 512Mi
            requests:
              cpu: 25m
              ephemeral-storage: 500Mi
              memory: 150Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: litmus-server-account
        serviceAccountName: litmus-server-account
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: gitops-storage
        - emptyDir: {}
          name: hub-storage
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: chaos
      meta.helm.sh/release-namespace: litmus
    creationTimestamp: "2023-03-20T09:36:03Z"
    generation: 7
    labels:
      app.kubernetes.io/component: mongodb
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: mongodb
      helm.sh/chart: mongodb-12.1.11
      pod-template-hash: 7fcb7c857f
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"00150774-1755-4c92-896f-7b5e9f6077d8"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kubectl.kubernetes.io/restartedAt: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:helm.sh/chart: {}
                f:pod-template-hash: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"mongodb"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"ALLOW_EMPTY_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"BITNAMI_DEBUG"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_DISABLE_JAVASCRIPT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_DISABLE_SYSTEM_LOG"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_ENABLE_DIRECTORY_PER_DB"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_ENABLE_IPV6"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_ENABLE_JOURNAL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_PORT_NUMBER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_ROOT_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                    k:{"name":"MONGODB_ROOT_USER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MONGODB_SYSTEM_LOG_VERBOSITY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":27017,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/bitnami/mongodb"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/bitnami/scripts"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"common-scripts"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"datadir"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:49Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-28T21:47:25Z"
    name: chaos-mongodb-7fcb7c857f
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: chaos-mongodb
      uid: 00150774-1755-4c92-896f-7b5e9f6077d8
    resourceVersion: "1800492"
    uid: 8ee3b385-1d72-46c7-bb2d-006db5d155ab
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: mongodb
        app.kubernetes.io/instance: chaos
        app.kubernetes.io/name: mongodb
        pod-template-hash: 7fcb7c857f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2023-03-20T10:36:03+01:00"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: mongodb
          app.kubernetes.io/instance: chaos
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: mongodb
          helm.sh/chart: mongodb-12.1.11
          pod-template-hash: 7fcb7c857f
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: mongodb
                    app.kubernetes.io/instance: chaos
                    app.kubernetes.io/name: mongodb
                namespaces:
                - litmus
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: MONGODB_ROOT_USER
            value: root
          - name: MONGODB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: mongodb-root-password
                name: chaos-mongodb
          - name: ALLOW_EMPTY_PASSWORD
            value: "no"
          - name: MONGODB_SYSTEM_LOG_VERBOSITY
            value: "0"
          - name: MONGODB_DISABLE_SYSTEM_LOG
            value: "no"
          - name: MONGODB_DISABLE_JAVASCRIPT
            value: "no"
          - name: MONGODB_ENABLE_JOURNAL
            value: "yes"
          - name: MONGODB_PORT_NUMBER
            value: "27017"
          - name: MONGODB_ENABLE_IPV6
            value: "no"
          - name: MONGODB_ENABLE_DIRECTORY_PER_DB
            value: "no"
          image: docker.io/bitnami/mongodb:5.0.8-debian-10-r24
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bitnami/scripts/ping-mongodb.sh
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 10
          name: mongodb
          ports:
          - containerPort: 27017
            name: mongodb
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bitnami/scripts/readiness-probe.sh
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /bitnami/mongodb
            name: datadir
          - mountPath: /bitnami/scripts
            name: common-scripts
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
        serviceAccount: chaos-mongodb
        serviceAccountName: chaos-mongodb
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 360
            name: chaos-mongodb-common-scripts
          name: common-scripts
        - name: datadir
          persistentVolumeClaim:
            claimName: chaos-mongodb
  status:
    fullyLabeledReplicas: 1
    observedGeneration: 7
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-20T09:46:37Z"
    generation: 5
    labels:
      app.kubernetes.io/component: operator
      app.kubernetes.io/managed-by: kubectl
      app.kubernetes.io/name: litmus
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: latest
      name: chaos-operator
      pod-template-hash: 84bc885775
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:name: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"1aee712b-6f7b-4582-9915-7087af79d071"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:name: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"chaos-operator"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"CHAOS_RUNNER_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"OPERATOR_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"WATCH_NAMESPACE"}:
                      .: {}
                      f:name: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:49Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:55Z"
    name: chaos-operator-ce-84bc885775
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: chaos-operator-ce
      uid: 1aee712b-6f7b-4582-9915-7087af79d071
    resourceVersion: "863031"
    uid: 04871a0e-cf60-4e81-8c13-4b1a833d1457
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: chaos-operator
        pod-template-hash: 84bc885775
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: operator
          app.kubernetes.io/managed-by: kubectl
          app.kubernetes.io/name: litmus
          app.kubernetes.io/part-of: litmus
          app.kubernetes.io/version: latest
          name: chaos-operator
          pod-template-hash: 84bc885775
      spec:
        containers:
        - args:
          - -leader-elect=true
          command:
          - chaos-operator
          env:
          - name: CHAOS_RUNNER_IMAGE
            value: litmuschaos/chaos-runner:2.14.0
          - name: WATCH_NAMESPACE
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: OPERATOR_NAME
            value: chaos-operator
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: litmuschaos/chaos-operator:2.14.0
          imagePullPolicy: Always
          name: chaos-operator
          resources:
            limits:
              cpu: 225m
              ephemeral-storage: 1Gi
              memory: 500Mi
            requests:
              cpu: 125m
              ephemeral-storage: 500Mi
              memory: 300Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: litmus-cluster-scope
        serviceAccountName: litmus-cluster-scope
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "5"
      deployment.kubernetes.io/revision-history: "3"
    creationTimestamp: "2023-03-20T09:31:31Z"
    generation: 7
    labels:
      app: debug-pod
      pod-template-hash: 55c9b84fb9
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:deployment.kubernetes.io/revision-history: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c8586ef1-792f-4351-a747-f599e7e516ec"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"debug-pod"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/bitnami/mongodb"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"datadir"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:49Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:17:06Z"
    name: debug-pod-55c9b84fb9
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: debug-pod
      uid: c8586ef1-792f-4351-a747-f599e7e516ec
    resourceVersion: "863069"
    uid: bf421729-bae6-470d-ba09-711dcb35c615
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: debug-pod
        pod-template-hash: 55c9b84fb9
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: debug-pod
          pod-template-hash: 55c9b84fb9
      spec:
        containers:
        - args:
          - -ec
          - while :; do echo .; sleep 5;done
          command:
          - /bin/sh
          image: centos:latest
          imagePullPolicy: Always
          name: debug-pod
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /bitnami/mongodb
            name: datadir
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          runAsGroup: 1001
          runAsNonRoot: true
          runAsUser: 1001
        terminationGracePeriodSeconds: 30
        volumes:
        - name: datadir
          persistentVolumeClaim:
            claimName: chaos-mongodb
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 7
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-20T09:46:36Z"
    generation: 5
    labels:
      app: event-tracker
      pod-template-hash: 744b6fd8cf
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"334358e7-8bfa-4c8f-b695-ade2269ab713"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"litmus-event-tracker"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"AGENT_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:50Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:58Z"
    name: event-tracker-744b6fd8cf
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: event-tracker
      uid: 334358e7-8bfa-4c8f-b695-ade2269ab713
    resourceVersion: "863043"
    uid: d2d2b583-afa8-40ba-8beb-fc7d429093e2
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: event-tracker
        pod-template-hash: 744b6fd8cf
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: event-tracker
          pod-template-hash: 744b6fd8cf
      spec:
        containers:
        - env:
          - name: AGENT_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          envFrom:
          - configMapRef:
              name: agent-config
          - secretRef:
              name: agent-secret
          image: litmuschaos/litmusportal-event-tracker:2.14.0
          imagePullPolicy: Always
          name: litmus-event-tracker
          resources:
            limits:
              cpu: 225m
              ephemeral-storage: 1Gi
              memory: 500Mi
            requests:
              cpu: 125m
              ephemeral-storage: 500Mi
              memory: 300Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: event-tracker-sa
        serviceAccountName: event-tracker-sa
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-20T09:46:36Z"
    generation: 5
    labels:
      app: subscriber
      pod-template-hash: 686d9b8dd9
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"771ca635-bc70-4045-bacf-0d8f9b7ebfb4"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"subscriber"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"AGENT_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:50Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:17:49Z"
    name: subscriber-686d9b8dd9
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: subscriber
      uid: 771ca635-bc70-4045-bacf-0d8f9b7ebfb4
    resourceVersion: "863197"
    uid: 69fc4480-197d-453c-98bd-7f7fef7f3bf8
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: subscriber
        pod-template-hash: 686d9b8dd9
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: subscriber
          pod-template-hash: 686d9b8dd9
      spec:
        containers:
        - env:
          - name: AGENT_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          envFrom:
          - configMapRef:
              name: agent-config
          - secretRef:
              name: agent-secret
          image: litmuschaos/litmusportal-subscriber:2.14.0
          imagePullPolicy: Always
          name: subscriber
          resources:
            limits:
              cpu: 225m
              ephemeral-storage: 1Gi
              memory: 500Mi
            requests:
              cpu: 125m
              ephemeral-storage: 500Mi
              memory: 300Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: litmus
        serviceAccountName: litmus
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-03-20T09:46:40Z"
    generation: 5
    labels:
      app: workflow-controller
      pod-template-hash: 768f7d94dc
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e872a24c-04a6-4d72-8771-4df1f6e9c194"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"workflow-controller"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"LEADER_ELECTION_DISABLE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-03-23T08:16:50Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-23T08:16:53Z"
    name: workflow-controller-768f7d94dc
    namespace: litmus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: workflow-controller
      uid: e872a24c-04a6-4d72-8771-4df1f6e9c194
    resourceVersion: "863011"
    uid: afee2f90-ed75-4509-aa00-859a26e7c6d3
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: workflow-controller
        pod-template-hash: 768f7d94dc
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: workflow-controller
          pod-template-hash: 768f7d94dc
      spec:
        containers:
        - args:
          - --configmap
          - workflow-controller-configmap
          - --executor-image
          - litmuschaos/argoexec:v3.3.1
          - --container-runtime-executor
          - k8sapi
          command:
          - workflow-controller
          env:
          - name: LEADER_ELECTION_DISABLE
            value: "true"
          image: litmuschaos/workflow-controller:v3.3.1
          imagePullPolicy: IfNotPresent
          name: workflow-controller
          resources:
            limits:
              cpu: 225m
              ephemeral-storage: 1Gi
              memory: 500Mi
            requests:
              cpu: 125m
              ephemeral-storage: 500Mi
              memory: 300Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 2000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argo
        serviceAccountName: argo
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"labels":{"app":"accounts-db","tier":"db"},"name":"accounts-db","namespace":"bank-of-anthos"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"accounts-db","tier":"db"}},"serviceName":"accounts-db","template":{"metadata":{"labels":{"app":"accounts-db","tier":"db"}},"spec":{"containers":[{"envFrom":[{"configMapRef":{"name":"environment-config"}},{"configMapRef":{"name":"accounts-db-config"}},{"configMapRef":{"name":"demo-data-config"}}],"image":"gcr.io/bank-of-anthos-ci/accounts-db:v0.5.10","name":"accounts-db","ports":[{"containerPort":5432,"name":"postgredb"}],"resources":{"limits":{"cpu":"250m","memory":"512Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"volumeMounts":[{"mountPath":"/var/lib/postgresql/data","name":"postgresdb","subPath":"postgres"}]}],"serviceAccountName":"default","volumes":[{"emptyDir":{},"name":"postgresdb"}]}}}}
    creationTimestamp: "2023-03-19T10:57:08Z"
    generation: 2
    labels:
      app: accounts-db
      tier: db
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:app: {}
            f:tier: {}
        f:spec:
          f:podManagementPolicy: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:serviceName: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:tier: {}
            f:spec:
              f:containers:
                k:{"name":"accounts-db"}:
                  .: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":5432,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/lib/postgresql/data"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:subPath: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"postgresdb"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
          f:updateStrategy:
            f:rollingUpdate:
              .: {}
              f:partition: {}
            f:type: {}
      manager: kubectl
      operation: Update
      time: "2023-03-19T10:57:08Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:collisionCount: {}
          f:currentRevision: {}
          f:observedGeneration: {}
          f:replicas: {}
          f:updateRevision: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-22T11:59:46Z"
    name: accounts-db
    namespace: bank-of-anthos
    resourceVersion: "778329"
    uid: 80e46a86-07e5-485e-9dc7-970441ec5021
  spec:
    podManagementPolicy: OrderedReady
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: accounts-db
        tier: db
    serviceName: accounts-db
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: accounts-db
          tier: db
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: environment-config
          - configMapRef:
              name: accounts-db-config
          - configMapRef:
              name: demo-data-config
          image: gcr.io/bank-of-anthos-ci/accounts-db:v0.5.10
          imagePullPolicy: IfNotPresent
          name: accounts-db
          ports:
          - containerPort: 5432
            name: postgredb
            protocol: TCP
          resources:
            limits:
              cpu: 250m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgresdb
            subPath: postgres
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: postgresdb
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    availableReplicas: 0
    collisionCount: 0
    currentRevision: accounts-db-65658d9476
    observedGeneration: 2
    replicas: 0
    updateRevision: accounts-db-65658d9476
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"name":"ledger-db","namespace":"bank-of-anthos"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"ledger-db"}},"serviceName":"ledger-db","template":{"metadata":{"labels":{"app":"ledger-db"}},"spec":{"containers":[{"envFrom":[{"configMapRef":{"name":"environment-config"}},{"configMapRef":{"name":"ledger-db-config"}},{"configMapRef":{"name":"demo-data-config"}}],"image":"gcr.io/bank-of-anthos-ci/ledger-db:v0.5.10","name":"postgres","ports":[{"containerPort":5432}],"resources":{"limits":{"cpu":"250m","memory":"1Gi"},"requests":{"cpu":"100m","memory":"512Mi"}},"volumeMounts":[{"mountPath":"/var/lib/postgresql/data","name":"postgresdb","subPath":"postgres"}]}],"serviceAccountName":"default","volumes":[{"emptyDir":{},"name":"postgresdb"}]}}}}
    creationTimestamp: "2023-03-19T10:57:10Z"
    generation: 2
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:podManagementPolicy: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:serviceName: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"postgres"}:
                  .: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":5432,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/lib/postgresql/data"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:subPath: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"postgresdb"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
          f:updateStrategy:
            f:rollingUpdate:
              .: {}
              f:partition: {}
            f:type: {}
      manager: kubectl
      operation: Update
      time: "2023-03-19T10:57:10Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:collisionCount: {}
          f:currentRevision: {}
          f:observedGeneration: {}
          f:replicas: {}
          f:updateRevision: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-22T11:59:46Z"
    name: ledger-db
    namespace: bank-of-anthos
    resourceVersion: "778322"
    uid: c25eb9f5-74d5-4f9a-b118-4a38ca8223a2
  spec:
    podManagementPolicy: OrderedReady
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ledger-db
    serviceName: ledger-db
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ledger-db
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: environment-config
          - configMapRef:
              name: ledger-db-config
          - configMapRef:
              name: demo-data-config
          image: gcr.io/bank-of-anthos-ci/ledger-db:v0.5.10
          imagePullPolicy: IfNotPresent
          name: postgres
          ports:
          - containerPort: 5432
            protocol: TCP
          resources:
            limits:
              cpu: 250m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgresdb
            subPath: postgres
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: postgresdb
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    availableReplicas: 0
    collisionCount: 0
    currentRevision: ledger-db-dd444d6
    observedGeneration: 2
    replicas: 0
    updateRevision: ledger-db-dd444d6
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      batch.kubernetes.io/job-tracking: ""
    creationTimestamp: "2023-03-22T14:11:12Z"
    generation: 1
    labels:
      app.kubernetes.io/component: experiment-job
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/version: 2.14.0
      chaosUID: 20e9d138-7dd0-4242-8670-3cac9d5ab8ac
      name: pod-delete
    managedFields:
    - apiVersion: batch/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:chaosUID: {}
            f:name: {}
        f:spec:
          f:backoffLimit: {}
          f:completionMode: {}
          f:completions: {}
          f:parallelism: {}
          f:suspend: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:chaosUID: {}
                f:name: {}
              f:name: {}
              f:namespace: {}
            f:spec:
              f:containers:
                k:{"name":"pod-delete-mzxuev"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"ANNOTATION_CHECK"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ANNOTATION_KEY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"APP_KIND"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"APP_LABEL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"APP_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOS_INTERVAL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOS_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOS_SERVICE_ACCOUNT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOS_UID"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOSENGINE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"EXPERIMENT_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"FORCE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"JOB_CLEANUP_POLICY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LIB"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LIB_IMAGE_PULL_POLICY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NODE_LABEL"}:
                      .: {}
                      f:name: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"PODS_AFFECTED_PERC"}:
                      .: {}
                      f:name: {}
                    k:{"name":"RAMP_TIME"}:
                      .: {}
                      f:name: {}
                    k:{"name":"SEQUENCE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"STATUS_CHECK_DELAY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"STATUS_CHECK_TIMEOUT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TARGET_PODS"}:
                      .: {}
                      f:name: {}
                    k:{"name":"TERMINATION_GRACE_PERIOD_SECONDS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TOTAL_CHAOS_DURATION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: chaos-runner
      operation: Update
      time: "2023-03-22T14:11:12Z"
    - apiVersion: batch/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:completionTime: {}
          f:conditions: {}
          f:ready: {}
          f:startTime: {}
          f:succeeded: {}
          f:uncountedTerminatedPods: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-22T14:12:29Z"
    name: pod-delete-mzxuev
    namespace: litmus
    resourceVersion: "788489"
    uid: 637dc50d-ff6b-4160-8d59-9262f3a425f7
  spec:
    backoffLimit: 6
    completionMode: NonIndexed
    completions: 1
    parallelism: 1
    selector:
      matchLabels:
        controller-uid: 637dc50d-ff6b-4160-8d59-9262f3a425f7
    suspend: false
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: experiment-job
          app.kubernetes.io/part-of: litmus
          app.kubernetes.io/version: 2.14.0
          chaosUID: 20e9d138-7dd0-4242-8670-3cac9d5ab8ac
          controller-uid: 637dc50d-ff6b-4160-8d59-9262f3a425f7
          job-name: pod-delete-mzxuev
          name: pod-delete
        name: pod-delete-mzxuev
        namespace: litmus
      spec:
        containers:
        - args:
          - -c
          - ./experiments -name pod-delete
          command:
          - /bin/bash
          env:
          - name: ANNOTATION_KEY
            value: litmuschaos.io/chaos
          - name: TOTAL_CHAOS_DURATION
            value: "30"
          - name: FORCE
            value: "false"
          - name: PODS_AFFECTED_PERC
          - name: ANNOTATION_CHECK
            value: "false"
          - name: CHAOS_SERVICE_ACCOUNT
            value: litmus-admin
          - name: TARGET_PODS
          - name: SEQUENCE
            value: parallel
          - name: STATUS_CHECK_TIMEOUT
            value: "180"
          - name: CHAOS_INTERVAL
            value: "10"
          - name: NODE_LABEL
          - name: CHAOS_NAMESPACE
            value: litmus
          - name: APP_NAMESPACE
            value: podtato
          - name: APP_KIND
            value: deployment
          - name: CHAOS_UID
            value: 20e9d138-7dd0-4242-8670-3cac9d5ab8ac
          - name: LIB_IMAGE_PULL_POLICY
            value: Always
          - name: RAMP_TIME
          - name: STATUS_CHECK_DELAY
            value: "2"
          - name: CHAOSENGINE
            value: podtato-main-pod-delete-chaosw854p
          - name: APP_LABEL
            value: name=podtato-main
          - name: EXPERIMENT_NAME
            value: pod-delete
          - name: TERMINATION_GRACE_PERIOD_SECONDS
            value: "0"
          - name: LIB
            value: litmus
          - name: JOB_CLEANUP_POLICY
            value: retain
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: litmuschaos/go-runner:2.14.0
          imagePullPolicy: Always
          name: pod-delete-mzxuev
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Never
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: litmus-admin
        serviceAccountName: litmus-admin
        terminationGracePeriodSeconds: 30
  status:
    completionTime: "2023-03-22T14:12:29Z"
    conditions:
    - lastProbeTime: "2023-03-22T14:12:29Z"
      lastTransitionTime: "2023-03-22T14:12:29Z"
      status: "True"
      type: Complete
    ready: 0
    startTime: "2023-03-22T14:11:12Z"
    succeeded: 1
    uncountedTerminatedPods: {}
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      batch.kubernetes.io/job-tracking: ""
    creationTimestamp: "2023-03-27T13:36:35Z"
    generation: 1
    labels:
      app.kubernetes.io/component: experiment-job
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/runtime-api-usage: "true"
      app.kubernetes.io/version: latest
      chaosUID: 49b7adf7-8b81-47ab-9d5c-9f7553c12cae
      name: pod-network-loss
    managedFields:
    - apiVersion: batch/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/runtime-api-usage: {}
            f:app.kubernetes.io/version: {}
            f:chaosUID: {}
            f:name: {}
        f:spec:
          f:backoffLimit: {}
          f:completionMode: {}
          f:completions: {}
          f:parallelism: {}
          f:suspend: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/runtime-api-usage: {}
                f:app.kubernetes.io/version: {}
                f:chaosUID: {}
                f:name: {}
              f:name: {}
              f:namespace: {}
            f:spec:
              f:containers:
                k:{"name":"pod-network-loss-pgta7r"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"ANNOTATION_CHECK"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ANNOTATION_KEY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"APP_KIND"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"APP_LABEL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"APP_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOS_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOS_SERVICE_ACCOUNT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOS_UID"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOSENGINE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CONTAINER_RUNTIME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"DESTINATION_HOSTS"}:
                      .: {}
                      f:name: {}
                    k:{"name":"DESTINATION_IPS"}:
                      .: {}
                      f:name: {}
                    k:{"name":"EXPERIMENT_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"JOB_CLEANUP_POLICY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LIB_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LIB_IMAGE_PULL_POLICY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NETWORK_INTERFACE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NETWORK_PACKET_LOSS_PERCENTAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NODE_LABEL"}:
                      .: {}
                      f:name: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"PODS_AFFECTED_PERC"}:
                      .: {}
                      f:name: {}
                    k:{"name":"RAMP_TIME"}:
                      .: {}
                      f:name: {}
                    k:{"name":"SEQUENCE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SOCKET_PATH"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"STATUS_CHECK_DELAY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"STATUS_CHECK_TIMEOUT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TARGET_CONTAINER"}:
                      .: {}
                      f:name: {}
                    k:{"name":"TARGET_PODS"}:
                      .: {}
                      f:name: {}
                    k:{"name":"TC_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TERMINATION_GRACE_PERIOD_SECONDS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TOTAL_CHAOS_DURATION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: chaos-runner
      operation: Update
      time: "2023-03-27T13:36:35Z"
    - apiVersion: batch/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:completionTime: {}
          f:conditions: {}
          f:ready: {}
          f:startTime: {}
          f:succeeded: {}
          f:uncountedTerminatedPods: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-27T13:37:18Z"
    name: pod-network-loss-pgta7r
    namespace: litmus
    resourceVersion: "1578939"
    uid: cb100e92-c6bc-43d7-8630-c6d58c32cee8
  spec:
    backoffLimit: 6
    completionMode: NonIndexed
    completions: 1
    parallelism: 1
    selector:
      matchLabels:
        controller-uid: cb100e92-c6bc-43d7-8630-c6d58c32cee8
    suspend: false
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: experiment-job
          app.kubernetes.io/part-of: litmus
          app.kubernetes.io/runtime-api-usage: "true"
          app.kubernetes.io/version: latest
          chaosUID: 49b7adf7-8b81-47ab-9d5c-9f7553c12cae
          controller-uid: cb100e92-c6bc-43d7-8630-c6d58c32cee8
          job-name: pod-network-loss-pgta7r
          name: pod-network-loss
        name: pod-network-loss-pgta7r
        namespace: litmus
      spec:
        containers:
        - args:
          - -c
          - ./experiments -name pod-network-loss
          command:
          - /bin/bash
          env:
          - name: LIB_IMAGE_PULL_POLICY
            value: Always
          - name: TARGET_CONTAINER
          - name: NETWORK_INTERFACE
            value: eth0
          - name: APP_LABEL
            value: name in (balancereader,transactionhistory)
          - name: NETWORK_PACKET_LOSS_PERCENTAGE
            value: "100"
          - name: TOTAL_CHAOS_DURATION
            value: "90"
          - name: NODE_LABEL
          - name: STATUS_CHECK_TIMEOUT
            value: "180"
          - name: CHAOS_SERVICE_ACCOUNT
            value: litmus-admin
          - name: TARGET_PODS
          - name: SOCKET_PATH
            value: /var/run/docker.sock
          - name: JOB_CLEANUP_POLICY
            value: retain
          - name: APP_NAMESPACE
            value: bank
          - name: APP_KIND
            value: deployment
          - name: PODS_AFFECTED_PERC
          - name: DESTINATION_IPS
          - name: DESTINATION_HOSTS
          - name: STATUS_CHECK_DELAY
            value: "2"
          - name: TC_IMAGE
            value: gaiadocker/iproute2
          - name: RAMP_TIME
          - name: CHAOS_NAMESPACE
            value: litmus
          - name: EXPERIMENT_NAME
            value: pod-network-loss
          - name: TERMINATION_GRACE_PERIOD_SECONDS
            value: "0"
          - name: CHAOS_UID
            value: 49b7adf7-8b81-47ab-9d5c-9f7553c12cae
          - name: ANNOTATION_CHECK
            value: "false"
          - name: CHAOSENGINE
            value: pod-network-loss-chaos9b6k8
          - name: ANNOTATION_KEY
            value: litmuschaos.io/chaos
          - name: LIB_IMAGE
            value: litmuschaos/go-runner:latest
          - name: CONTAINER_RUNTIME
            value: docker
          - name: SEQUENCE
            value: parallel
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: litmuschaos/go-runner:latest
          imagePullPolicy: Always
          name: pod-network-loss-pgta7r
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Never
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: litmus-admin
        serviceAccountName: litmus-admin
        terminationGracePeriodSeconds: 30
  status:
    completionTime: "2023-03-27T13:37:18Z"
    conditions:
    - lastProbeTime: "2023-03-27T13:37:18Z"
      lastTransitionTime: "2023-03-27T13:37:18Z"
      status: "True"
      type: Complete
    ready: 0
    startTime: "2023-03-27T13:36:35Z"
    succeeded: 1
    uncountedTerminatedPods: {}
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      batch.kubernetes.io/job-tracking: ""
    creationTimestamp: "2023-03-27T16:29:03Z"
    generation: 1
    labels:
      app.kubernetes.io/component: experiment-job
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/runtime-api-usage: "true"
      app.kubernetes.io/version: latest
      chaosUID: 8cd4258c-5274-4cc2-8187-8273791de517
      name: pod-network-loss
    managedFields:
    - apiVersion: batch/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/runtime-api-usage: {}
            f:app.kubernetes.io/version: {}
            f:chaosUID: {}
            f:name: {}
        f:spec:
          f:backoffLimit: {}
          f:completionMode: {}
          f:completions: {}
          f:parallelism: {}
          f:suspend: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/runtime-api-usage: {}
                f:app.kubernetes.io/version: {}
                f:chaosUID: {}
                f:name: {}
              f:name: {}
              f:namespace: {}
            f:spec:
              f:containers:
                k:{"name":"pod-network-loss-wfc04e"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"ANNOTATION_CHECK"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ANNOTATION_KEY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"APP_KIND"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"APP_LABEL"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"APP_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOS_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOS_SERVICE_ACCOUNT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOS_UID"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CHAOSENGINE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CONTAINER_RUNTIME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"DESTINATION_HOSTS"}:
                      .: {}
                      f:name: {}
                    k:{"name":"DESTINATION_IPS"}:
                      .: {}
                      f:name: {}
                    k:{"name":"EXPERIMENT_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"JOB_CLEANUP_POLICY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LIB_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"LIB_IMAGE_PULL_POLICY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NETWORK_INTERFACE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NETWORK_PACKET_LOSS_PERCENTAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NODE_LABEL"}:
                      .: {}
                      f:name: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"PODS_AFFECTED_PERC"}:
                      .: {}
                      f:name: {}
                    k:{"name":"RAMP_TIME"}:
                      .: {}
                      f:name: {}
                    k:{"name":"SEQUENCE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SOCKET_PATH"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"STATUS_CHECK_DELAY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"STATUS_CHECK_TIMEOUT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TARGET_CONTAINER"}:
                      .: {}
                      f:name: {}
                    k:{"name":"TARGET_PODS"}:
                      .: {}
                      f:name: {}
                    k:{"name":"TC_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TERMINATION_GRACE_PERIOD_SECONDS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"TOTAL_CHAOS_DURATION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: chaos-runner
      operation: Update
      time: "2023-03-27T16:29:03Z"
    - apiVersion: batch/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:completionTime: {}
          f:conditions: {}
          f:ready: {}
          f:startTime: {}
          f:succeeded: {}
          f:uncountedTerminatedPods: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-03-27T16:29:45Z"
    name: pod-network-loss-wfc04e
    namespace: litmus
    resourceVersion: "1601585"
    uid: e7fdb2b6-dd80-4211-8073-f4e3c2dc657d
  spec:
    backoffLimit: 6
    completionMode: NonIndexed
    completions: 1
    parallelism: 1
    selector:
      matchLabels:
        controller-uid: e7fdb2b6-dd80-4211-8073-f4e3c2dc657d
    suspend: false
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: experiment-job
          app.kubernetes.io/part-of: litmus
          app.kubernetes.io/runtime-api-usage: "true"
          app.kubernetes.io/version: latest
          chaosUID: 8cd4258c-5274-4cc2-8187-8273791de517
          controller-uid: e7fdb2b6-dd80-4211-8073-f4e3c2dc657d
          job-name: pod-network-loss-wfc04e
          name: pod-network-loss
        name: pod-network-loss-wfc04e
        namespace: litmus
      spec:
        containers:
        - args:
          - -c
          - ./experiments -name pod-network-loss
          command:
          - /bin/bash
          env:
          - name: CHAOS_NAMESPACE
            value: litmus
          - name: LIB_IMAGE
            value: litmuschaos/go-runner:latest
          - name: PODS_AFFECTED_PERC
          - name: TC_IMAGE
            value: gaiadocker/iproute2
          - name: RAMP_TIME
          - name: CHAOSENGINE
            value: pod-network-loss-chaoslf8hs
          - name: CHAOS_UID
            value: 8cd4258c-5274-4cc2-8187-8273791de517
          - name: ANNOTATION_KEY
            value: litmuschaos.io/chaos
          - name: NODE_LABEL
          - name: STATUS_CHECK_DELAY
            value: "2"
          - name: LIB_IMAGE_PULL_POLICY
            value: Always
          - name: TARGET_CONTAINER
          - name: NETWORK_PACKET_LOSS_PERCENTAGE
            value: "100"
          - name: APP_KIND
            value: deployment
          - name: TARGET_PODS
          - name: STATUS_CHECK_TIMEOUT
            value: "180"
          - name: TERMINATION_GRACE_PERIOD_SECONDS
            value: "0"
          - name: CHAOS_SERVICE_ACCOUNT
            value: litmus-admin
          - name: DESTINATION_IPS
          - name: JOB_CLEANUP_POLICY
            value: retain
          - name: ANNOTATION_CHECK
            value: "false"
          - name: NETWORK_INTERFACE
            value: eth0
          - name: SOCKET_PATH
            value: /var/run/docker.sock
          - name: TOTAL_CHAOS_DURATION
            value: "90"
          - name: CONTAINER_RUNTIME
            value: docker
          - name: DESTINATION_HOSTS
          - name: APP_LABEL
            value: name=balancereader
          - name: APP_NAMESPACE
            value: bank
          - name: EXPERIMENT_NAME
            value: pod-network-loss
          - name: SEQUENCE
            value: parallel
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: litmuschaos/go-runner:latest
          imagePullPolicy: Always
          name: pod-network-loss-wfc04e
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Never
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: litmus-admin
        serviceAccountName: litmus-admin
        terminationGracePeriodSeconds: 30
  status:
    completionTime: "2023-03-27T16:29:45Z"
    conditions:
    - lastProbeTime: "2023-03-27T16:29:45Z"
      lastTransitionTime: "2023-03-27T16:29:45Z"
      status: "True"
      type: Complete
    ready: 0
    startTime: "2023-03-27T16:29:03Z"
    succeeded: 1
    uncountedTerminatedPods: {}
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
